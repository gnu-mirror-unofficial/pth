%!PS-Adobe-3.0
%%Creator: groff version 1.18.1
%%CreationDate: Mon Feb 17 12:01:20 2003
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%+ font Courier
%%+ font Symbol
%%+ font Times-Italic
%%DocumentSuppliedResources: procset grops 1.18 1
%%Pages: 31
%%PageOrder: Ascend
%%Orientation: Portrait
%%EndComments
%%BeginProlog
%%BeginResource: procset grops 1.18 1
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/Fk{
setcmykcolor fill
}bind def
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/Ck/setcmykcolor load def
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Courier
%%IncludeResource: font Symbol
%%IncludeResource: font Times-Italic
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Italic@0 ENC0/Times-Italic RE/Courier@0 ENC0/Courier RE
/Times-Bold@0 ENC0/Times-Bold RE/Times-Roman@0 ENC0/Times-Roman RE
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E/F1 10.95/Times-Bold@0 SF -.219(NA)72 84 S(ME).219 E/F2 10
/Times-Bold@0 SF(pth)108 96 Q F0 2.5<ad47>2.5 G(NU Portable Threads)-2.5
E F1(VERSION)72 112.8 Q/F3 9/Times-Roman@0 SF(GNU)108 124.8 Q F0(Pth)2.5
E F3(PTH_VERSION_STR)2.5 E F1(SYNOPSIS)72 141.6 Q F2
(Global Library Management)108 153.6 Q F0
(pth_init, pth_kill, pth_ctrl, pth_v)128 165.6 Q(ersion.)-.15 E F2(Thr)
108 182.4 Q(ead Attrib)-.18 E(ute Handling)-.2 E F0
(pth_attr_of, pth_attr_ne)128 194.4 Q 1.3 -.65(w, p)-.25 H
(th_attr_init, pth_attr_set, pth_attr_get, pth_attr_destro).65 E -.65
(y.)-.1 G F2(Thr)108 211.2 Q(ead Contr)-.18 E(ol)-.18 E F0(pth_spa)128
223.2 Q 1.57(wn, pth_once, pth_self, pth_suspend, pth_resume, pth_yield\
, pth_nap, pth_w)-.15 F 1.57(ait, pth_cancel,)-.1 F
(pth_abort, pth_raise, pth_join, pth_e)128 235.2 Q(xit.)-.15 E F2
(Utilities)108 252 Q F0
(pth_fdmode, pth_time, pth_timeout, pth_s\214odisc.)128 264 Q F2
(Cancellation Management)108 280.8 Q F0
(pth_cancel_point, pth_cancel_state.)128 292.8 Q F2(Ev)108 309.6 Q
(ent Handling)-.1 E F0(pth_e)128 321.6 Q -.15(ve)-.25 G .22(nt, pth_e)
.15 F -.15(ve)-.25 G .22(nt_typeof, pth_e).15 F -.15(ve)-.25 G(nt_e).15
E .22(xtract, pth_e)-.15 F -.15(ve)-.25 G .22(nt_concat, pth_e).15 F
-.15(ve)-.25 G .22(nt_isolate, pth_e).15 F -.15(ve)-.25 G(nt_w).15 E
(alk,)-.1 E(pth_e)128 333.6 Q -.15(ve)-.25 G(nt_status, pth_e).15 E -.15
(ve)-.25 G(nt_free.).15 E F2 -.25(Ke)108 350.4 S(y-Based Storage).25 E
F0(pth_k)128 362.4 Q -.15(ey)-.1 G(_create, pth_k).15 E -.15(ey)-.1 G
(_delete, pth_k).15 E -.15(ey)-.1 G(_setdata, pth_k).15 E -.15(ey)-.1 G
(_getdata.).15 E F2(Message P)108 379.2 Q(ort Communication)-.2 E F0
7.91(pth_msgport_create, pth_msgport_destro)128 391.2 R 9.21 -.65(y, p)
-.1 H 7.91(th_msgport_\214nd, pth_msgport_pending, pth_msg-).65 F
(port_put, pth_msgport_get, pth_msgport_reply)128 403.2 Q(.)-.65 E F2
(Thr)108 420 Q(ead Cleanups)-.18 E F0
(pth_cleanup_push, pth_cleanup_pop.)128 432 Q F2(Pr)108 448.8 Q(ocess F)
-.18 E(orking)-.25 E F0(pth_atfork_push, pth_atfork_pop, pth_fork.)128
460.8 Q F2(Synchr)108 477.6 Q(onization)-.18 E F0(pth_mute)128 489.6 Q
8.052(x_init, pth_mute)-.15 F 8.052(x_acquire, pth_mute)-.15 F 8.053
(x_release, pth_rwlock_init, pth_rwlock_acquire,)-.15 F 5.518
(pth_rwlock_release, pth_cond_init, pth_cond_a)128 501.6 R -.1(wa)-.15 G
5.518(it, pth_cond_notify).1 F 8.018(,p)-.65 G 5.518
(th_barrier_init, pth_bar)-8.018 F(-)-.2 E(rier_reach.)128 513.6 Q F2
(User)108 530.4 Q(-Space Context)-.37 E F0 18.332
(pth_uctx_create, pth_uctx_mak)128 542.4 R 18.332(e, pth_uctx_sa)-.1 F
-.15(ve)-.2 G 20.833(,p).15 G 18.333(th_uctx_restore, pth_uctx_switch,)
-20.833 F(pth_uctx_destro)128 554.4 Q -.65(y.)-.1 G F2(Generalized)108
571.2 Q/F4 9/Times-Bold@0 SF(POSIX)2.5 E F2(Replacement)2.5 E F4(API)2.5
E F0(pth_sigw)128 583.2 Q(ait_e)-.1 E 12.422 -.65(v, p)-.25 H
(th_accept_e).65 E 12.422 -.65(v, p)-.25 H(th_connect_e).65 E 12.422
-.65(v, p)-.25 H(th_select_e).65 E 12.422 -.65(v, p)-.25 H(th_poll_e).65
E 12.422 -.65(v, p)-.25 H(th_read_e).65 E -.65(v,)-.25 G(pth_readv_e)128
595.2 Q 12.566 -.65(v, p)-.25 H(th_write_e).65 E 12.566 -.65(v, p)-.25 H
(th_write).65 E(v_e)-.25 E 12.566 -.65(v, p)-.25 H(th_recv_e).65 E
12.566 -.65(v, p)-.25 H(th_recvfrom_e).65 E 12.566 -.65(v, p)-.25 H
(th_send_e).65 E -.65(v,)-.25 G(pth_sendto_e)128 607.2 Q -.65(v.)-.25 G
F2(Standard)108 624 Q F4(POSIX)2.5 E F2(Replacement)2.5 E F4(API)2.5 E
F0 .197(pth_nanosleep, pth_usleep, pth_sleep, pth_w)128 636 R .197
(aitpid, pth_system, pth_sigmask, pth_sigw)-.1 F .197(ait, pth_accept,)
-.1 F .762
(pth_connect, pth_select, pth_pselect, pth_poll, pth_read, pth_readv)128
648 R 3.263(,p)-.65 G .763(th_write, pth_write)-3.263 F 2.063 -.65(v, p)
-.25 H(th_pread,).65 E(pth_pwrite, pth_recv)128 660 Q 2.5(,p)-.65 G
(th_recvfrom, pth_send, pth_sendto.)-2.5 E F1(DESCRIPTION)72 676.8 Q F0
(perl v5.8.0)72 768 Q 203.17(2003-02-17 1)167.62 F 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E/F1 10/Courier@0 SF 6(____ _)120 84 R(_)18 E/F2 10/Symbol SF<ef>114
96 Q F1 6(_\\)12 G F2 6<efef>-6 G F1(_)-6 E F2 6<efef>C F1(__)-6 E F2 6
<efef>114 108 S F1(_\))-6 E F2<ef>6 E F1(__)6 E F2<ef>A F1('_ \\)6 E
(``Only those who attempt)54 E F2<ef>114 120 Q F1(__/)12 E F2 6<efef>C
F1(_)-6 E F2 6<efefefef>C F1(the absurd can achieve)54 E F2<ef>114 132 Q
F1(_)A F2<ef>A F1(\\__)24 E F2<ef>A F1(_)A F2 6<efef>C F1(_)-6 E F2<ef>A
F1(the impossible.'')60 E/F3 10/Times-Bold@0 SF(Pth)108 148.8 Q F0 .315
(is a v)2.816 F .315(ery portable)-.15 F/F4 9/Times-Roman@0 SF
(POSIX/ANSI\255C)2.815 E F0 .315
(based library for Unix platforms which pro)2.815 F .315
(vides non-preempti)-.15 F .615 -.15(ve p)-.25 H(ri-).15 E .314
(ority-based scheduling for multiple threads of e)108 160.8 R -.15(xe)
-.15 G .315(cution \(aka `multithreading'\) inside e).15 F -.15(ve)-.25
G(nt-dri).15 E -.15(ve)-.25 G 2.815(na).15 G(pplica-)-2.815 E .148(tion\
s. All threads run in the same address space of the application process\
, b)108 172.8 R .147(ut each thread has its o)-.2 F .147(wn indi-)-.25 F
(vidual program counter)108 184.8 Q 2.5(,r)-.4 G
(un-time stack, signal mask and)-2.5 E F1(errno)2.5 E F0 -.25(va)2.5 G
(riable.).25 E .242(The thread scheduling itself is done in a cooperati)
108 201.6 R .542 -.15(ve w)-.25 H(ay).05 E 2.742(,i)-.65 G .242
(.e., the threads are managed and dispatched by a)-2.742 F .807
(priority\255 and e)108 213.6 R -.15(ve)-.25 G(nt-dri).15 E -.15(ve)-.25
G 3.306(nn).15 G(on-preempti)-3.306 E 1.106 -.15(ve s)-.25 H(cheduler)
.15 E 3.306(.T)-.55 G .806(he intention is that this w)-3.306 F .806
(ay both better portability)-.1 F .2(and run-time performance is achie)
108 225.6 R -.15(ve)-.25 G 2.7(dt).15 G .2(han with preempti)-2.7 F .5
-.15(ve s)-.25 H .2(cheduling. The e).15 F -.15(ve)-.25 G .2(nt f).15 F
.2(acility allo)-.1 F .2(ws threads to)-.25 F -.1(wa)108 237.6 S 1.428
(it until v).1 F 1.428(arious types of internal and e)-.25 F 1.427
(xternal e)-.15 F -.15(ve)-.25 G 1.427(nts occur).15 F 3.927(,i)-.4 G
1.427(ncluding pending I/O on \214le descriptors,)-3.927 F .949(asynchr\
onous signals, elapsed timers, pending I/O on message ports, thread and\
 process termination, and)108 249.6 R -2.15 -.25(ev e)108 261.6 T 2.5
(nr).25 G(esults of customized callback functions.)-2.5 E F3(Pth)108
278.4 Q F0 .23(also pro)2.73 F .23(vides an optional emulation)-.15 F F4
(API)2.73 E F0(for)2.73 E F4(POSIX)2.73 E F0 .23
(.1c threads \(`Pthreads'\) which can be used for back-)B -.1(wa)108
290.4 S(rd compatibility to e).1 E
(xisting multithreaded applications. See)-.15 E F3(Pth)2.5 E F0 -.55('s)
C/F5 10/Times-Italic@0 SF(pthr)3.05 E(ead)-.37 E F0
(\(3\) manual page for details.)1.666 E F3(Thr)108 313.2 Q
(eading Backgr)-.18 E(ound)-.18 E F0 1.19(When programming e)108 330 R
-.15(ve)-.25 G(nt-dri).15 E -.15(ve)-.25 G 3.69(na).15 G 1.19
(pplications, usually serv)-3.69 F 1.19(ers, lots of re)-.15 F 1.19
(gular jobs and one-shot requests)-.15 F(ha)108 342 Q .727 -.15(ve t)-.2
H 2.927(ob).15 G 2.927(ep)-2.927 G .427(rocessed in parallel.)-2.927 F
2.026 -.8(To e)5.427 H -.25<668c>.8 G .426
(ciently simulate this parallel processing on uniprocessor machines,).25
F 1.773(we use `multitasking')108 354 R 5.939<8a74>5.939 G 1.773
(hat is, we ha)-5.939 F 2.073 -.15(ve t)-.2 H 1.773
(he application ask the operating system to spa).15 F 1.773(wn multiple)
-.15 F 1.53(instances of itself. On Unix, typically the k)108 366 R 1.53
(ernel implements multitasking in a preempti)-.1 F 1.83 -.15(ve a)-.25 H
1.53(nd priority-).15 F .538(based w)108 378 R .538(ay through hea)-.1 F
.539(vy-weight processes spa)-.2 F .539(wned with)-.15 F F5(fork)3.039 E
F0 3.039(\(2\). These)1.666 F .539(processes usually do)3.039 F F5(not)
3.039 E F0 .539(share a)3.039 F .03(common address space. Instead the)
108 390 R 2.53(ya)-.15 G .029(re clearly separated from each other)-2.53
F 2.529(,a)-.4 G .029(nd are created by direct cloning)-2.529 F 2.538
(ap)108 402 S .038(rocess address space \(although modern k)-2.538 F
.039(ernels use memory se)-.1 F .039(gment mapping and cop)-.15 F .039
(y-on-write seman-)-.1 F(tics to a)108 414 Q -.2(vo)-.2 G
(id unnecessary cop).2 E(ying of ph)-.1 E(ysical memory\).)-.05 E 1.048
(The dra)108 430.8 R 1.048(wbacks are ob)-.15 F 1.048(vious: Sharing da\
ta between the processes is complicated, and can usually only be)-.15 F
.526(done ef)108 442.8 R .526(\214ciently through shared memory \(b)-.25
F .526(ut which itself is not v)-.2 F .527
(ery portable\). Synchronization is compli-)-.15 F 1.863
(cated because of the preempti)108 454.8 R 2.163 -.15(ve n)-.25 H 1.863
(ature of the Unix scheduler \(one has to use).15 F F5(atomic)4.363 E F0
1.863(locks, etc\). The)4.363 F(machine')108 466.8 Q 2.643(sr)-.55 G
.143(esources can be e)-2.643 F .143(xhausted v)-.15 F .143
(ery quickly when the serv)-.15 F .143(er application has to serv)-.15 F
2.643(et)-.15 G .144(oo man)-2.643 F 2.644(yl)-.15 G(ong-)-2.644 E .567
(running requests \(hea)108 478.8 R .566
(vy\255weight processes cost memory\). And when each request spa)-.2 F
.566(wns a sub-process to)-.15 F 1.963(handle it, the serv)108 490.8 R
1.964(er performance and responsi)-.15 F -.15(ve)-.25 G 1.964
(ness is horrible \(hea).15 F 1.964(vy\255weight processes cost time to)
-.2 F(spa)108 502.8 Q .142(wn\). Finally)-.15 F 2.642(,t)-.65 G .142
(he serv)-2.642 F .142(er application doesn')-.15 F 2.642(ts)-.18 G .142
(cale v)-2.642 F .142
(ery well with the load because of these resource prob-)-.15 F .092
(lems. In practice, lots of tricks are usually used to o)108 514.8 R
-.15(ve)-.15 G .093(rcome these problems \255 ranging from pre-fork).15
F .093(ed sub-)-.1 F(process pools to semi-serialized processing, etc.)
108 526.8 Q .343(One of the most ele)108 543.6 R -.05(ga)-.15 G .343
(nt w).05 F .343(ays to solv)-.1 F 2.843(et)-.15 G .343
(hese resource\255 and data-sharing problems is to ha)-2.843 F .643 -.15
(ve m)-.2 H(ultiple).15 E F5(light-)2.842 E(weight)108 555.6 Q F0 1.906
(threads of e)4.406 F -.15(xe)-.15 G 1.906(cution inside a single \(hea)
.15 F 1.906(vy\255weight\) process, i.e., to use)-.2 F F5(multithr)4.407
E(eading)-.37 E F0 6.907(.T)C(hose)-6.907 E F5(thr)108 567.6 Q(eads)-.37
E F0 .179(usually impro)2.679 F .479 -.15(ve r)-.15 H(esponsi).15 E -.15
(ve)-.25 G .178(ness and performance of the application, often impro).15
F .478 -.15(ve a)-.15 H .178(nd simplify the).15 F .306(internal progra\
m structure, and most important, require less system resources than hea)
108 579.6 R .306(vy-weight processes.)-.2 F .293
(Threads are neither the optimal run-time f)108 591.6 R .292
(acility for all types of applications, nor can all applications bene-)
-.1 F(\214t from them. But at least e)108 603.6 Q -.15(ve)-.25 G(nt-dri)
.15 E -.15(ve)-.25 G 2.5(ns).15 G(erv)-2.5 E
(er applications usually bene\214t greatly from using threads.)-.15 E F3
(The W)108 626.4 Q(orld of Thr)-.75 E(eading)-.18 E F0(Ev)108 643.2 Q
.327(en though lots of documents e)-.15 F .327
(xists which describe and de\214ne the w)-.15 F .327
(orld of threading, to understand)-.1 F F3(Pth)2.827 E F0(,)A .163
(you need only basic kno)108 655.2 R .163
(wledge about threading. The follo)-.25 F .163
(wing de\214nitions of thread-related terms should at)-.25 F
(least help you understand thread programming enough to allo)108 667.2 Q
2.5(wy)-.25 G(ou to use)-2.5 E F3(Pth)2.5 E F0(.)A F3 2.5(op)108 684 S
-.18(ro)-2.5 G(cess).18 E F0(vs.)2.5 E F3(thr)2.5 E(ead)-.18 E F0 2.634
(Ap)118 696 S .134
(rocess on Unix systems consists of at least the follo)-2.634 F .134
(wing fundamental ingredients:)-.25 F F5 .134(virtual memory ta-)2.634 F
(ble)118 708 Q F0(,)A F5(pr)2.955 E -.1(og)-.45 G -.15(ra).1 G 2.955(mc)
.15 G(ode)-2.955 E F0(,)A F5(pr)2.955 E -.1(og)-.45 G -.15(ra).1 G 2.955
(mc).15 G(ounter)-2.955 E F0(,)A F5 .454(heap memory)2.954 F F0(,)A F5
(stac)2.954 E 2.954(km)-.2 G(emory)-2.954 E F0(,)A F5(stac)2.954 E 2.954
(kp)-.2 G(ointer)-2.954 E F0(,)A F5 .454(\214le descriptor set)2.954 F
F0(,)A F5(sig-)2.954 E 1.563(nal table)118 720 R F0 4.063(.O)C 4.063(ne)
-4.063 G -.15(ve)-4.313 G 1.563(ry process switch, the k).15 F 1.563
(ernel sa)-.1 F -.15(ve)-.2 G 4.063(sa).15 G 1.564
(nd restores these ingredients for the indi)-4.063 F(vidual)-.25 E
(perl v5.8.0)72 768 Q 203.17(2003-02-17 2)167.62 F 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E .818
(processes. On the other hand, a thread consists of only a pri)118 84 R
-.25(va)-.25 G .817(te program counter).25 F 3.317(,s)-.4 G .817
(tack memory)-3.317 F 3.317(,s)-.65 G(tack)-3.317 E .776(pointer and si\
gnal table. All other ingredients, in particular the virtual memory)118
96 R 3.276(,i)-.65 G 3.277(ts)-3.276 G .777(hares with the other)-3.277
F(threads of the same process.)118 108 Q/F1 10/Times-Bold@0 SF 2.5(ok)
108 124.8 S(er)-2.6 E(nel-space)-.15 E F0(vs.)2.5 E F1(user)2.5 E
(-space)-.37 E F0(threading)2.5 E .889(Threads on a Unix platform tradi\
tionally can be implemented either inside k)118 136.8 R .888
(ernel-space or user\255space.)-.1 F 1.052
(When threads are implemented by the k)118 148.8 R 1.053
(ernel, the thread conte)-.1 F 1.053(xt switches are performed by the k)
-.15 F(ernel)-.1 E .495(without the application')118 160.8 R 2.994(sk)
-.55 G(no)-2.994 E .494(wledge. Similarly)-.25 F 2.994(,w)-.65 G .494
(hen threads are implemented in user\255space, the thread)-2.994 F
(conte)118 172.8 Q .35
(xt switches are performed by an application library)-.15 F 2.851(,w)
-.65 G .351(ithout the k)-2.851 F(ernel')-.1 E 2.851(sk)-.55 G(no)-2.851
E .351(wledge. There also are)-.25 F -.05(hy)118 184.8 S .611
(brid threading approaches where, typically).05 F 3.111(,au)-.65 G(ser)
-3.111 E .611(-space library binds one or more user)-.2 F .61
(-space threads)-.2 F(to one or more k)118 196.8 Q(ernel-space threads \
\(there usually called light-weight processes \255 or in short L)-.1 E
(WPs\).)-.74 E(User)118 214.8 Q .899
(-space threads are usually more portable and can perform f)-.2 F .9
(aster and cheaper conte)-.1 F .9(xt switches \(for)-.15 F .229
(instance via)118 226.8 R/F2 10/Times-Italic@0 SF(swapconte)2.729 E(xt)
-.2 E F0 .229(\(2\) or)1.666 F F2(setjmp)2.729 E F0(\(3\)/)1.666 E F2
(longjmp)A F0 .229(\(3\)\) than k)1.666 F .228
(ernel based threads. On the other hand, k)-.1 F(er)-.1 E(-)-.2 E .303
(nel-space threads can tak)118 238.8 R 2.803(ea)-.1 G(dv)-2.803 E .304
(antage of multiprocessor machines and don')-.25 F 2.804(th)-.18 G -2.25
-.2(av e)-2.804 H(an)3.004 E 2.804(yi)-.15 G .304(nherent I/O block-)
-2.804 F .064(ing problems. K)118 250.8 R .063
(ernel-space threads are usually scheduled in preempti)-.25 F .363 -.15
(ve w)-.25 H .063(ay side-by-side with the under).05 F(-)-.2 E .537
(lying processes. User)118 262.8 R .538
(-space threads on the other hand use either preempti)-.2 F .838 -.15
(ve o)-.25 H 3.038(rn).15 G(on-preempti)-3.038 E .838 -.15(ve s)-.25 H
(chedul-).15 E(ing.)118 274.8 Q F1 2.5(op)108 291.6 S -.18(re)-2.5 G
(empti).18 E -.1(ve)-.1 G F0(vs.)2.6 E F1(non-pr)2.5 E(eempti)-.18 E -.1
(ve)-.1 G F0(thread scheduling)2.6 E .444(In preempti)118 303.6 R .744
-.15(ve s)-.25 H .444(cheduling, the scheduler lets a thread e).15 F
-.15(xe)-.15 G .444(cute until a blocking situation occurs \(usually a)
.15 F 1.477(function call which w)118 315.6 R 1.477(ould block\) or the\
 assigned timeslice elapses. Then it detracts control from the)-.1 F
1.953(thread without a chance for the thread to object. This is usually\
 realized by interrupting the thread)118 327.6 R 1.298(through a hardw)
118 339.6 R 1.298(are interrupt signal \(for k)-.1 F 1.299
(ernel-space threads\) or a softw)-.1 F 1.299
(are interrupt signal \(for user)-.1 F(-)-.2 E 1.208
(space threads\), lik)118 351.6 R(e)-.1 E/F3 10/Courier@0 SF(SIGALRM)
3.708 E F0(or)3.708 E F3(SIGVTALRM)3.708 E F0 3.708(.I)C 3.707(nn)-3.708
G(on-preempti)-3.707 E 1.507 -.15(ve s)-.25 H 1.207
(cheduling, once a thread recei).15 F -.15(ve)-.25 G(d).15 E .277
(control from the scheduler it k)118 363.6 R .277
(eeps it until either a blocking situation occurs \(ag)-.1 F .277
(ain a function call which)-.05 F -.1(wo)118 375.6 S .022
(uld block and instead switches back to the scheduler\) or the thread e)
.1 F .021(xplicitly yields control back to the)-.15 F
(scheduler in a cooperati)118 387.6 Q .3 -.15(ve w)-.25 H(ay).05 E(.)
-.65 E F1 2.5(oc)108 404.4 S(oncurr)-2.5 E(ency)-.18 E F0(vs.)2.5 E F1
(parallelism)2.5 E F0(Concurrenc)118 416.4 Q 2.708(ye)-.15 G .208
(xists when at least tw)-2.858 F 2.708(ot)-.1 G .208(hreads are)-2.708 F
F2 .208(in pr)2.708 F -.1(og)-.45 G -.37(re).1 G(ss).37 E F0 .208
(at the same time. P)2.708 F .209(arallelism arises when at)-.15 F .477
(least tw)118 428.4 R 2.977(ot)-.1 G .477(hreads are)-2.977 F F2 -.2(ex)
2.977 G(ecuting).2 E F0(simultaneously)2.977 E 2.977(.R)-.65 G .477
(eal parallelism can be only achie)-2.977 F -.15(ve)-.25 G 2.977(do).15
G 2.976(nm)-2.977 G(ultiprocessor)-2.976 E 1.134
(machines, of course. But one also usually speaks of parallelism or)118
440.4 R F2 1.134(high concurr)3.634 F(ency)-.37 E F0 1.134(in the conte)
3.634 F 1.134(xt of)-.15 F(preempti)118 452.4 Q 1.097 -.15(ve t)-.25 H
.796(hread scheduling and of).15 F F2 .796(low concurr)3.296 F(ency)-.37
E F0 .796(in the conte)3.296 F .796(xt of non-preempti)-.15 F 1.096 -.15
(ve t)-.25 H .796(hread schedul-).15 F(ing.)118 464.4 Q F1 2.5(or)108
481.2 S(esponsi)-2.68 E -.1(ve)-.1 G(ness).1 E F0 .585(The responsi)118
493.2 R -.15(ve)-.25 G .586(ness of a system can be described by the us\
er visible delay until the system responses to).15 F .679(an e)118 505.2
R .678
(xternal request. When this delay is small enough and the user doesn')
-.15 F 3.178(tr)-.18 G .678(ecognize a noticeable delay)-3.178 F(,)-.65
E .11(the responsi)118 517.2 R -.15(ve)-.25 G .11(ness of the system is\
 considered good. When the user recognizes or is e).15 F -.15(ve)-.25 G
2.61(na).15 G(nno)-2.61 E .11(yed by the)-.1 F(delay)118 529.2 Q 2.5(,t)
-.65 G(he responsi)-2.5 E -.15(ve)-.25 G
(ness of the system is considered bad.).15 E F1 2.5(or)108 546 S
(eentrant)-2.68 E F0(,)A F1(thr)2.5 E(ead-safe)-.18 E F0(and)2.5 E F1
(asynchr)2.5 E(onous-safe)-.18 E F0(functions)2.5 E 3.649(Ar)118 558 S
1.149(eentrant function is one that beha)-3.649 F -.15(ve)-.2 G 3.649
(sc).15 G 1.149(orrectly if it is called simultaneously by se)-3.649 F
-.15(ve)-.25 G 1.148(ral threads and).15 F .126(then also e)118 570 R
-.15(xe)-.15 G .126(cutes simultaneously).15 F 5.126(.F)-.65 G .126(unc\
tions that access global state, such as memory or \214les, of course,)
-5.126 F .04(need to be carefully designed in order to be reentrant. T)
118 582 R .24 -.1(wo t)-.8 H .04(raditional approaches to solv).1 F 2.54
(et)-.15 G .04(hese problems)-2.54 F(are caller)118 594 Q
(-supplied states and thread-speci\214c data.)-.2 E .126
(Thread-safety is the a)118 612 R -.2(vo)-.2 G .126(idance of).2 F F2
.126(data r)2.626 F(aces)-.15 E F0 2.627(,i)C .127
(.e., situations in which data is set to either correct or incor)-2.627
F(-)-.2 E 1.358(rect v)118 624 R 1.357(alue depending upon the \(unpred\
ictable\) order in which multiple threads access and modify the)-.25 F
.708(data. So a function is thread-safe when it still beha)118 636 R
-.15(ve)-.2 G 3.209(ss).15 G .709
(emantically correct when called simultaneously)-3.209 F 1.765(by se)118
648 R -.15(ve)-.25 G 1.764
(ral threads \(it is not required that the functions also e).15 F -.15
(xe)-.15 G 1.764(cute simultaneously\). The traditional).15 F .303
(approach to achie)118 660 R .603 -.15(ve t)-.25 H .304
(hread-safety is to wrap a function body with an internal mutual e).15 F
.304(xclusion lock \(aka)-.15 F(`mute)118 672 Q .306
(x'\). As you should recognize, reentrant is a stronger attrib)-.15 F
.306(ute than thread\255safe, because it is harder)-.2 F .924(to achie)
118 684 R 1.224 -.15(ve a)-.25 H .924(nd results especially in no run-t\
ime contention between threads. So, a reentrant function is).15 F(al)118
696 Q -.1(wa)-.1 G(ys thread\255safe, b).1 E(ut not vice v)-.2 E(ersa.)
-.15 E .766(Additionally there is a related attrib)118 714 R .766
(ute for functions named asynchronous\255safe, which comes into play)-.2
F 2.202(in conjunction with signal handlers. This is v)118 726 R 2.202
(ery related to the problem of reentrant functions. An)-.15 F
(perl v5.8.0)72 768 Q 203.17(2003-02-17 3)167.62 F 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E .878(asynchronous-safe function is one that can be called safe an\
d without side-ef)118 84 R .878(fects from within a signal)-.25 F .625
(handler conte)118 96 R .625(xt. Usually v)-.15 F .625(ery fe)-.15 F
3.125(wf)-.25 G .626
(unctions are of this type, because an application is v)-3.125 F .626
(ery restricted in)-.15 F .332(what it can perform from within a signal\
 handler \(especially what system functions it is allo)118 108 R .331
(wed to call\).)-.25 F .811(The reason mainly is, because only a fe)118
120 R 3.311(ws)-.25 G .811(ystem functions are of)-3.311 F .811
(\214cially declared by)-.25 F/F1 9/Times-Roman@0 SF(POSIX)3.312 E F0
.812(as guaran-)3.312 F(teed to be asynchronous\255safe. Asynchronous-s\
afe functions usually ha)118 132 Q .3 -.15(ve t)-.2 H 2.5(ob).15 G 2.5
(ea)-2.5 G(lready reentrant.)-2.5 E/F2 10/Times-Bold@0 SF(User)108 154.8
Q(-Space Thr)-.37 E(eads)-.18 E F0(User)108 171.6 Q
(-space threads can be implemented in v)-.2 E(arious w)-.25 E(ay)-.1 E
2.5(.T)-.65 G(he tw)-2.5 E 2.5(ot)-.1 G(raditional approaches are:)-2.5
E F2 5(1. Matrix-based)108 188.4 R
(explicit dispatching between small units of execution:)2.5 E F0 .123
(Here the global procedures of the application are split into small e)
123 206.4 R -.15(xe)-.15 G .123(cution units \(each is required to not)
.15 F .735(run for more than a fe)123 218.4 R 3.235(wm)-.25 G .736
(illiseconds\) and those units are implemented by separate functions.)
-3.235 F .736(Then a)5.736 F 1.005
(global matrix is de\214ned which describes the e)123 230.4 R -.15(xe)
-.15 G 1.004(cution \(and perhaps e).15 F -.15(ve)-.25 G 3.504(nd).15 G
(ependenc)-3.504 E 1.004(y\) order of these)-.15 F .773
(functions. The main serv)123 242.4 R .774(er procedure then just dispa\
tches between these units by calling one function)-.15 F .461(after eac\
h other controlled by this matrix. The threads are created by more than\
 one jump-trail through)123 254.4 R(this matrix and by switching betwee\
n these jump-trails controlled by corresponding occurred e)123 266.4 Q
-.15(ve)-.25 G(nts.).15 E .656(This approach gi)123 284.4 R -.15(ve)-.25
G 3.156(st).15 G .657(he best possible performance, because one can \
\214ne-tune the threads of e)-3.156 F -.15(xe)-.15 G(cution).15 E 1.036
(by adjusting the matrix, and the scheduling is done e)123 296.4 R 1.035
(xplicitly by the application itself. It is also v)-.15 F(ery)-.15 E .93
(portable, because the matrix is just an ordinary data structure, and f\
unctions are a standard feature of)123 308.4 R F1(ANSI)123 320.4 Q F0
(C.)2.5 E 2.739(The disadv)123 338.4 R 2.739
(antage of this approach is that it is complicated to write lar)-.25 F
2.738(ge applications with this)-.18 F .388(approach, because in those \
applications one quickly gets hundreds\(!\) of e)123 350.4 R -.15(xe)
-.15 G .388(cution units and the control).15 F<8d6f>123 362.4 Q 2.828
(wi)-.25 G .328(nside such an application is v)-2.828 F .327
(ery hard to understand \(because it is interrupted by function borders)
-.15 F 1.042(and one al)123 374.4 R -.1(wa)-.1 G 1.043
(ys has to remember the global dispatching matrix to follo).1 F 3.543
(wi)-.25 G 1.043(t\). Additionally)-3.543 F 3.543(,a)-.65 G 1.043
(ll threads)-3.543 F .373(operate on the same e)123 386.4 R -.15(xe)-.15
G .373(cution stack. Although this sa).15 F -.15(ve)-.2 G 2.872(sm).15 G
(emory)-2.872 E 2.872(,i)-.65 G 2.872(ti)-2.872 G 2.872(so)-2.872 G .372
(ften nasty)-2.872 F 2.872(,b)-.65 G .372(ecause one cannot)-2.872 F
.784(switch between threads in the middle of a function. Thus the sched\
uling borders are the function bor)123 398.4 R(-)-.2 E(ders.)123 410.4 Q
F2 5(2. Context-based)108 427.2 R(implicit scheduling between thr)2.5 E
(eads of execution:)-.18 E F0 .223
(Here the idea is that one programs the application as with fork)123
445.2 R .223(ed processes, i.e., one spa)-.1 F .222(wns a thread of)-.15
F -.15(exe)123 457.2 S .885(cution and this runs from the be).15 F .885
(gin to the end without an interrupted control \215o)-.15 F 2.186 -.65
(w. B)-.25 H .886(ut the control).65 F<8d6f>123 469.2 Q 2.582(wc)-.25 G
.081(an be still interrupted \255 e)-2.582 F -.15(ve)-.25 G 2.581(ni).15
G 2.581(nt)-2.581 G .081(he middle of a function.)-2.581 F .081
(Actually in a preempti)5.081 F .381 -.15(ve w)-.25 H(ay).05 E 2.581(,s)
-.65 G .081(imilar to)-2.581 F .431(what the k)123 481.2 R .431
(ernel does for the hea)-.1 F .431(vy-weight processes, i.e., e)-.2 F
-.15(ve)-.25 G .432(ry fe).15 F 2.932(wm)-.25 G .432
(illiseconds the user)-2.932 F .432(-space sched-)-.2 F .541
(uler switches between the threads of e)123 493.2 R -.15(xe)-.15 G .541
(cution. But the thread itself doesn').15 F 3.04(tr)-.18 G .54
(ecognize this and usually)-3.04 F(\(e)123 505.2 Q
(xcept for synchronization issues\) doesn')-.15 E 2.5(th)-.18 G -2.25
-.2(av e)-2.5 H(to care about this.)2.7 E .082(The adv)123 523.2 R .082
(antage of this approach is that it')-.25 F 2.583(sv)-.55 G .083
(ery easy to program, because the control \215o)-2.733 F 2.583(wa)-.25 G
.083(nd conte)-2.583 F .083(xt of)-.15 F 3.049(at)123 535.2 S .549
(hread directly follo)-3.049 F .548
(ws a procedure without forced interrupts through function borders.)-.25
F(Additionally)5.548 E(,)-.65 E(the programming is v)123 547.2 Q
(ery similar to a traditional and well understood)-.15 E/F3 10
/Times-Italic@0 SF(fork)2.5 E F0(\(2\) based approach.)1.666 E .565
(The disadv)123 565.2 R .565(antage is that although the general perfor\
mance is increased, compared to using approaches)-.25 F .607
(based on hea)123 577.2 R .607(vy-weight processes, it is decreased com\
pared to the matrix-approach abo)-.2 F -.15(ve)-.15 G 3.107(.B).15 G
.606(ecause the)-3.107 F 2.085(implicit preempti)123 589.2 R 2.385 -.15
(ve s)-.25 H 2.086(cheduling does usually a lot more conte).15 F 2.086
(xt switches \(e)-.15 F -.15(ve)-.25 G 2.086(ry user).15 F 2.086
(-space conte)-.2 F(xt)-.15 E .905(switch costs some o)123 601.2 R -.15
(ve)-.15 G .905(rhead e).15 F -.15(ve)-.25 G 3.405(nw).15 G .905
(hen it is a lot cheaper than a k)-3.405 F(ernel-le)-.1 E -.15(ve)-.25 G
3.404(lc).15 G(onte)-3.404 E .904(xt switch\) than the)-.15 F -.15(ex)
123 613.2 S 2.121(plicit cooperati).15 F -.15(ve)-.25 G
(/non\255preempti).15 E 2.421 -.15(ve s)-.25 H 4.621(cheduling. Finally)
.15 F 4.621(,t)-.65 G 2.121(here is no really portable)-4.621 F F1
(POSIX/ANSI\255C)4.622 E F0 1.091(based w)123 625.2 R 1.091
(ay to implement user)-.1 F 1.091(-space preempti)-.2 F 1.391 -.15(ve t)
-.25 H 1.091(hreading. Either the platform already has threads, or).15 F
.656(one has to hope that some semi-portable package e)123 637.2 R .657
(xists for it. And e)-.15 F -.15(ve)-.25 G 3.157(nt).15 G .657
(hose semi-portable packages)-3.157 F .228(usually ha)123 649.2 R .528
-.15(ve t)-.2 H 2.728(od).15 G .227(eal with assembler code and other n\
asty internals and are not easy to port to forthcom-)-2.728 F
(ing platforms.)123 661.2 Q .06
(So, in short: the matrix-dispatching approach is portable and f)108 678
R .061(ast, b)-.1 F .061(ut nasty to program. The thread schedul-)-.2 F
.908(ing approach is easy to program, b)108 690 R .908(ut suf)-.2 F .908
(fers from synchronization and portability problems caused by its)-.25 F
(preempti)108 702 Q .3 -.15(ve n)-.25 H(ature.).15 E(perl v5.8.0)72 768
Q 203.17(2003-02-17 4)167.62 F 0 Cg EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E/F1 10/Times-Bold@0 SF(The Compr)108 84 Q(omise of Pth)-.18 E F0
.065(But wh)108 100.8 R 2.565(yn)-.05 G .066
(ot combine the good aspects of both approaches while a)-2.565 F -.2(vo)
-.2 G .066(iding their bad aspects? That').2 F 2.566(st)-.55 G .066
(he goal)-2.566 F(of)108 112.8 Q F1(Pth)4.575 E F0(.)A F1(Pth)4.575 E F0
2.075(implements easy-to-program threads of e)4.575 F -.15(xe)-.15 G
2.075(cution, b).15 F 2.074(ut a)-.2 F -.2(vo)-.2 G 2.074
(ids the problems of preempti).2 F -.15(ve)-.25 G
(scheduling by using non-preempti)108 124.8 Q .3 -.15(ve s)-.25 H
(cheduling instead.).15 E .479(This sounds lik)108 141.6 R .479
(e, and is, a useful approach. Ne)-.1 F -.15(ve)-.25 G .479
(rtheless, one has to k).15 F .48(eep the implications of non-preemp-)
-.1 F(ti)108 153.6 Q 1.984 -.15(ve t)-.25 H 1.684
(hread scheduling in mind when w).15 F 1.684(orking with)-.1 F F1(Pth)
4.184 E F0 4.184(.T)C 1.684(he follo)-4.184 F 1.684
(wing list summarizes a fe)-.25 F 4.184(we)-.25 G(ssential)-4.184 E
(points:)108 165.6 Q F1 5(oP)108 182.4 S(th pr)-5 E -.1(ov)-.18 G
(ides maximum portability).1 E 2.5(,b)-.55 G(ut)-2.7 E/F2 9/Times-Bold@0
SF(NO)2.5 E(T)-.36 E F1(the fanciest featur)2.5 E(es)-.18 E F0(.)A .95
(This is, because it uses a nifty and portable)118 200.4 R/F3 9
/Times-Roman@0 SF(POSIX/ANSI\255C)3.451 E F0 .951
(approach for thread creation \(and this w)3.451 F(ay)-.1 E(doesn')118
212.4 Q 3.615(tr)-.18 G 1.115(equire an)-3.615 F 3.615(yp)-.15 G 1.115(\
latform dependent assembler hacks\) and schedules the threads in non-pr\
eempti)-3.615 F -.15(ve)-.25 G -.1(wa)118 224.4 S 3.168(y\().1 G .668
(which doesn')-3.168 F 3.168(tr)-.18 G .668(equire unportable f)-3.168 F
.669(acilities lik)-.1 F(e)-.1 E/F4 10/Courier@0 SF(SIGVTALRM)3.169 E F0
.669(\). On the other hand, this w)B .669(ay not all)-.1 F -.1(fa)118
236.4 S(nc).1 E 2.83(yt)-.15 G .33
(hreading features can be implemented.)-2.83 F(Ne)5.33 E -.15(ve)-.25 G
.33(rtheless the a).15 F -.25(va)-.2 G .33(ilable f).25 F .33
(acilities are enough to pro)-.1 F(vide)-.15 E 2.5(ar)118 248.4 S(ob)
-2.5 E(ust and full-featured threading system.)-.2 E F1 5(oP)108 265.2 S
.242(th incr)-5 F .242(eases the r)-.18 F(esponsi)-.18 E -.1(ve)-.1 G
.242(ness and concurr).1 F .242(ency of an e)-.18 F -.1(ve)-.15 G
(nt-dri).1 E -.1(ve)-.1 G 2.742(na).1 G .242(pplication, b)-2.742 F(ut)
-.2 E F2(NO)2.742 E(T)-.36 E F1 .243(the con-)2.742 F(curr)118 277.2 Q
(ency of number)-.18 E(-crunching applications)-.37 E F0(.)A .169
(The reason is the non-preempti)118 295.2 R .469 -.15(ve s)-.25 H .169
(cheduling. Number).15 F .169
(-crunching applications usually require preempti)-.2 F -.15(ve)-.25 G
.473(scheduling to achie)118 307.2 R .773 -.15(ve c)-.25 H(oncurrenc).15
E 2.973(yb)-.15 G .473(ecause of their long)-2.973 F F3(CPU)2.974 E F0
-.2(bu)2.974 G .474(rsts. F).2 F .474(or them, non-preempti)-.15 F .774
-.15(ve s)-.25 H(chedul-).15 E 1.406(ing \(e)118 319.2 R -.15(ve)-.25 G
3.906(nt).15 G 1.406(ogether with e)-3.906 F 1.406
(xplicit yielding\) pro)-.15 F 1.406
(vides only the old concept of `coroutines'. On the other)-.15 F 1.285
(hand, e)118 331.2 R -.15(ve)-.25 G 1.285(nt dri).15 F -.15(ve)-.25 G
3.786(na).15 G 1.286(pplications bene\214t greatly from non-preempti)
-3.786 F 1.586 -.15(ve s)-.25 H 1.286(cheduling. The).15 F 3.786(yh)-.15
G -2.25 -.2(av e)-3.786 H 1.286(only short)3.986 F F3(CPU)118 343.2 Q F0
-.2(bu)4.446 G 1.946(rsts and lots of e).2 F -.15(ve)-.25 G 1.945
(nts to w).15 F 1.945(ait on, and this w)-.1 F 1.945(ay run f)-.1 F
1.945(aster under non-preempti)-.1 F 2.245 -.15(ve s)-.25 H(cheduling)
.15 E .197(because no unnecessary conte)118 355.2 R .197
(xt switching occurs, as it is the case for preempti)-.15 F .498 -.15
(ve s)-.25 H .198(cheduling. That').15 F 2.698(sw)-.55 G -.05(hy)-2.698
G F1(Pth)118 367.2 Q F0(is mainly intended for serv)2.5 E
(er type applications, although there is no technical restriction.)-.15
E F1 5(oP)108 384 S(th r)-5 E(equir)-.18 E(es thr)-.18 E
(ead-safe functions, b)-.18 E(ut)-.2 E F2(NO)2.5 E(T)-.36 E F1 -.18(re)
2.5 G(entrant functions).18 E F0(.)A 1.124(This nice f)118 402 R 1.124
(act e)-.1 F 1.124(xists ag)-.15 F 1.124
(ain because of the nature of non-preempti)-.05 F 1.424 -.15(ve s)-.25 H
1.124(cheduling, where a function isn').15 F(t)-.18 E .033
(interrupted and this w)118 414 R .033(ay cannot be reentered before it\
 returned. This is a great portability bene\214t, because)-.1 F 1.011
(thread-safety can be achie)118 426 R -.15(ve)-.25 G 3.511(dm).15 G
1.011(ore easily than reentrance possibility)-3.511 F 3.511(.E)-.65 G
1.01(specially this means that under)-3.511 F F1(Pth)118 438 Q F0 .12
(more e)2.62 F .12
(xisting third-party libraries can be used without side-ef)-.15 F .121
(fects than it')-.25 F 2.621(st)-.55 G .121(he case for other thread-)
-2.621 F(ing systems.)118 450 Q F1 5(oP)108 466.8 S(th doesn't r)-5 E
(equir)-.18 E 2.5(ea)-.18 G(ny k)-2.5 E(er)-.1 E(nel support, b)-.15 E
(ut can)-.2 E F2(NO)2.5 E(T)-.36 E F1(bene\214t fr)2.5 E(om multipr)-.18
E(ocessor machines)-.18 E F0(.)A .168(This means that)118 484.8 R F1
(Pth)2.668 E F0 .168(runs on almost all Unix k)2.668 F .168
(ernels, because the k)-.1 F .168(ernel does not need to be a)-.1 F -.1
(wa)-.15 G .168(re of the).1 F F1(Pth)118 496.8 Q F0 .606
(threads \(because the)3.106 F 3.106(ya)-.15 G .607(re implemented enti\
rely in user\255space\). On the other hand, it cannot bene\214t)-3.106 F
.292(from the e)118 508.8 R .292
(xistence of multiprocessors, because for this, k)-.15 F .292
(ernel support w)-.1 F .292(ould be needed. In practice, this)-.1 F
1.099(is no problem, because multiprocessor systems are rare, and porta\
bility is almost more important than)118 520.8 R(highest concurrenc)118
532.8 Q -.65(y.)-.15 G F1(The life cycle of a thr)108 555.6 Q(ead)-.18 E
F0 1.636 -.8(To u)108 572.4 T .035(nderstand the).8 F F1(Pth)2.535 E F0
.035(Application Programming Interf)2.535 F .035(ace \()-.1 F F3(API)A
F0 .035(\), it helps to \214rst understand the life c)B .035(ycle of)
-.15 F 2.5(at)108 584.4 S(hread in the)-2.5 E F1(Pth)2.5 E F0
(threading system. It can be illustrated with the follo)2.5 E
(wing directed graph:)-.25 E F4(NEW)186 601.2 Q/F5 10/Symbol SF<ef>192
613.2 Q F4(V)192 625.2 Q(+---> READY ---+)144 637.2 Q F5<ef>144 649.2 Q
F4(^)42 E F5<ef>36 E 42<efef>144 661.2 S F4(V)-6 E
(WAITING <--+-- RUNNING)126 673.2 Q F5<ef>234 685.2 Q F4 84(:V)144 697.2
S 36(SUSPENDED DEAD)126 709.2 R F0 .091(When a ne)108 726 R 2.591(wt)
-.25 G .091(hread is created, it is mo)-2.591 F -.15(ve)-.15 G 2.591(di)
.15 G .091(nto the)-2.591 F F2(NEW)2.591 E F0 .092
(queue of the scheduler)2.592 F 2.592(.O)-.55 G 2.592(nt)-2.592 G .092
(he ne)-2.592 F .092(xt dispatching for)-.15 F(perl v5.8.0)72 768 Q
203.17(2003-02-17 5)167.62 F 0 Cg EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E .203(this thread, the scheduler picks it up from there and mo)108
84 R -.15(ve)-.15 G 2.703(si).15 G 2.703(tt)-2.703 G 2.703(ot)-2.703 G
(he)-2.703 E/F1 9/Times-Bold@0 SF(READ)2.703 E(Y)-.36 E F0 .202
(queue. This is a queue contain-)2.703 F .893(ing all threads which w)
108 96 R .893(ant to perform a)-.1 F/F2 9/Times-Roman@0 SF(CPU)3.393 E
F0 -.2(bu)3.393 G .893(rst. There the).2 F 3.394(ya)-.15 G .894
(re queued in priority order)-3.394 F 3.394(.O)-.55 G 3.394(ne)-3.394 G
.894(ach dis-)-3.394 F .584(patching step, the scheduler al)108 108 R
-.1(wa)-.1 G .583(ys remo).1 F -.15(ve)-.15 G 3.083(st).15 G .583
(he thread with the highest priority only)-3.083 F 3.083(.I)-.65 G 3.083
(tt)-3.083 G .583(hen increases the)-3.083 F
(priority of all remaining threads by 1, to pre)108 120 Q -.15(ve)-.25 G
(nt them from `starving'.).15 E .716(The thread which w)108 136.8 R .716
(as remo)-.1 F -.15(ve)-.15 G 3.216(df).15 G .716(rom the)-3.216 F F1
(READ)3.216 E(Y)-.36 E F0 .717(queue is the ne)3.217 F(w)-.25 E F1 -.27
(RU)3.217 G(NNING).27 E F0 .717(thread \(there is al)3.217 F -.1(wa)-.1
G .717(ys just).1 F(one)108 148.8 Q F1 -.27(RU)3.769 G(NNING).27 E F0
1.269(thread, of course\). The)3.769 F F1 -.27(RU)3.769 G(NNING).27 E F0
1.269(thread is assigned e)3.769 F -.15(xe)-.15 G 1.269
(cution control. After this thread).15 F 1.277(yields e)108 160.8 R -.15
(xe)-.15 G 1.277(cution \(either e).15 F 1.277(xplicitly by yielding e)
-.15 F -.15(xe)-.15 G 1.277
(cution or implicitly by calling a function which w).15 F(ould)-.1 E
.638(block\) there are three possibilities: Either it has terminated, t\
hen it is mo)108 172.8 R -.15(ve)-.15 G 3.138(dt).15 G 3.138(ot)-3.138 G
(he)-3.138 E F1(DEAD)3.138 E F0 .638(queue, or it has)3.138 F -2.15 -.25
(ev e)108 184.8 T .562(nts on which it w).25 F .562(ants to w)-.1 F .562
(ait, then it is mo)-.1 F -.15(ve)-.15 G 3.062(di).15 G .562(nto the)
-3.062 F F1 -1.08(WA)3.062 G(ITING)1.08 E F0 .563
(queue. Else it is assumed it w)3.062 F .563(ants to)-.1 F(perform more)
108 196.8 Q F2(CPU)2.5 E F0 -.2(bu)2.5 G
(rsts and immediately enters the).2 E F1(READ)2.5 E(Y)-.36 E F0
(queue ag)2.5 E(ain.)-.05 E 1.659(Before the ne)108 213.6 R 1.659
(xt thread is tak)-.15 F 1.659(en out of the)-.1 F F1(READ)4.159 E(Y)
-.36 E F0 1.659(queue, the)4.159 F F1 -1.08(WA)4.159 G(ITING)1.08 E F0
1.659(queue is check)4.159 F 1.659(ed for pending)-.1 F -2.15 -.25(ev e)
108 225.6 T .522(nts. If one or more e).25 F -.15(ve)-.25 G .522
(nts occurred, the threads that are w).15 F .522
(aiting on them are immediately mo)-.1 F -.15(ve)-.15 G 3.023(dt).15 G
3.023(ot)-3.023 G(he)-3.023 E F1(READ)108 237.6 Q(Y)-.36 E F0(queue.)2.5
E 1.554(The purpose of the)108 254.4 R F1(NEW)4.054 E F0 1.554
(queue has to do with the f)4.054 F 1.553(act that in)-.1 F/F3 10
/Times-Bold@0 SF(Pth)4.053 E F0 4.053(at)4.053 G 1.553(hread ne)-4.053 F
-.15(ve)-.25 G 4.053(rd).15 G 1.553(irectly switches to)-4.053 F .64
(another thread. A thread al)108 266.4 R -.1(wa)-.1 G .64(ys yields e).1
F -.15(xe)-.15 G .64
(cution to the scheduler and the scheduler dispatches to the ne).15 F
(xt)-.15 E .06(thread. So a freshly spa)108 278.4 R .06
(wned thread has to be k)-.15 F .06(ept some)-.1 F .06
(where until the scheduler gets a chance to pick it up)-.25 F
(for scheduling. That is what the)108 290.4 Q F1(NEW)2.5 E F0
(queue is for)2.5 E(.)-.55 E .027(The purpose of the)108 307.2 R F1
(DEAD)2.527 E F0 .027
(queue is to support thread joining. When a thread is mark)2.527 F .028
(ed to be unjoinable, it is)-.1 F 1.28(directly kick)108 319.2 R 1.28(e\
d out of the system after it terminated. But when it is joinable, it en\
ters the)-.1 F F1(DEAD)3.779 E F0(queue.)3.779 E
(There it remains until another thread joins it.)108 331.2 Q(Finally)108
348 Q 3.339(,t)-.65 G .839(here is a special separated queue named)
-3.339 F F1(SUSPENDED)3.339 E F0 3.339(,t)C 3.339(ow)-3.339 G .839
(here threads can be manually mo)-3.339 F -.15(ve)-.15 G(d).15 E 1.173
(from the)108 360 R F1(NEW)3.673 E F0(,)A F1(READ)3.673 E(Y)-.36 E F0
(or)3.673 E F1 -1.08(WA)3.673 G(ITING)1.08 E F0 1.172
(queues by the application. The purpose of this special queue is to)
3.673 F .858(temporarily absorb suspended threads until the)108 372 R
3.358(ya)-.15 G .858(re ag)-3.358 F .859
(ain resumed by the application. Suspended threads)-.05 F 1.472
(do not cost scheduling or e)108 384 R -.15(ve)-.25 G 1.471
(nt handling resources, because the).15 F 3.971(ya)-.15 G 1.471
(re temporarily completely out of the)-3.971 F(scheduler')108 396 Q
2.991(ss)-.55 G .491(cope. If a thread is resumed, it is mo)-2.991 F
-.15(ve)-.15 G 2.991(db).15 G .491
(ack to the queue from where it originally came and)-2.991 F(this w)108
408 Q(ay ag)-.1 E(ain enters the schedulers scope.)-.05 E/F4 10.95
/Times-Bold@0 SF(APPLICA)72 424.8 Q(TION PR)-1.04 E(OGRAMMING INTERF)
-.329 E -.602(AC)-.986 G 2.738(E\().602 G(API\))-2.738 E F0 .757
(In the follo)108 436.8 R .757(wing the)-.25 F F3(Pth)3.257 E/F5 10
/Times-Italic@0 SF .757(Application Pr)3.257 F -.1(og)-.45 G -.15(ra).1
G .757(mming Interface).15 F F0(\()3.257 E F2(API)A F0 3.257(\)i)C 3.257
(sd)-3.257 G .756(iscussed in detail. W)-3.257 F .756(ith the kno)-.4 F
(wl-)-.25 E .241(edge gi)108 448.8 R -.15(ve)-.25 G 2.741(na).15 G(bo)
-2.741 E -.15(ve)-.15 G 2.741(,i).15 G 2.741(ts)-2.741 G .241(hould no)
-2.741 F 2.741(wb)-.25 G 2.741(ee)-2.741 G .241(asy to understand ho)
-2.741 F 2.741(wt)-.25 G 2.741(op)-2.741 G .241
(rogram threads with this)-2.741 F F2(API)2.741 E F0 2.741(.I)C 2.742
(ng)-2.741 G .242(ood Unix)-2.742 F(tradition,)108 460.8 Q F3(Pth)2.981
E F0 .481(functions use special return v)2.981 F .481(alues \()-.25 F/F6
10/Courier@0 SF(NULL)A F0 .481(in pointer conte)2.981 F(xt,)-.15 E F6
(FALSE)2.98 E F0 .48(in boolean conte)2.98 F .48(xt and)-.15 F F6<ad31>
108 472.8 Q F0 .126(in inte)2.626 F .126(ger conte)-.15 F .127
(xt\) to indicate an error condition and set \(or pass through\) the)
-.15 F F6(errno)2.627 E F0 .127(system v)2.627 F .127(ariable to)-.25 F
(pass more details about the error to the caller)108 484.8 Q(.)-.55 E F3
(Global Library Management)108 507.6 Q F0 .429(The follo)108 524.4 R
.429(wing functions act on the library as a whole.)-.25 F(The)5.429 E
2.929(ya)-.15 G .429(re used to initialize and shutdo)-2.929 F .428
(wn the sched-)-.25 F(uler and fetch information from it.)108 536.4 Q
(int)108 553.2 Q F3(pth_init)2.5 E F0(\(v)A(oid\);)-.2 E 1.322
(This initializes the)128 565.2 R F3(Pth)3.822 E F0(library)3.822 E
3.822(.I)-.65 G 3.822(th)-3.822 G 1.322(as to be the \214rst)-3.822 F F3
(Pth)3.822 E F2(API)3.822 E F0 1.322
(function call in an application, and is)3.822 F(mandatory)128 577.2 Q
4.004(.I)-.65 G(t')-4.004 E 4.004(su)-.55 G 1.504(sually done at the be)
-4.004 F 1.503(gin of the)-.15 F F5(main\(\))4.003 E F0 1.503
(function of the application. This implicitly)4.003 F(spa)128 589.2 Q
1.093(wns the internal scheduler thread and transforms the single e)-.15
F -.15(xe)-.15 G 1.094(cution unit of the current process).15 F
(into a thread \(the `main' thread\). It returns)128 601.2 Q F6(TRUE)2.5
E F0(on success and)2.5 E F6(FALSE)2.5 E F0(on error)2.5 E(.)-.55 E(int)
108 618 Q F3(pth_kill)2.5 E F0(\(v)A(oid\);)-.2 E .336(This kills the)
128 630 R F3(Pth)2.835 E F0(library)2.835 E 2.835(.I)-.65 G 2.835(ts)
-2.835 G .335(hould be the last)-2.835 F F3(Pth)2.835 E F2(API)2.835 E
F0 .335(function call in an application, b)2.835 F .335
(ut is not really)-.2 F 1.335(required. It')128 642 R 3.835(su)-.55 G
1.336(sually done at the end of the main function of the application. A\
t least, it has to be)-3.835 F .111(called from within the main thread.\
 It implicitly kills all threads and transforms back the calling thread)
128 654 R .291(into the single e)128 666 R -.15(xe)-.15 G .292
(cution unit of the underlying process.).15 F .292(The usual w)5.292 F
.292(ay to terminate a)-.1 F F3(Pth)2.792 E F0(application)2.792 E .982
(is either a simple `)128 678 R F6(pth_exit\(0\);)A F0 3.482('i)C 3.482
(nt)-3.482 G .982(he main thread \(which w)-3.482 F .982
(aits for all other threads to termi-)-.1 F 1.196(nate, kills the threa\
ding system and then terminates the process\) or a `)128 690 R F6 1.197
(pth_kill\(\); exit\(0\))B F0(')A 2.37(\(which immediately kills the th\
reading system and terminates the process\). The)128 702 R F5
(pth_kill\(\))4.87 E F0(return)4.87 E .603
(immediately with a return code of)128 714 R F6(FALSE)3.103 E F0 .604
(if it is not called from within the main thread. Else it kills)3.104 F
(the threading system and returns)128 726 Q F6(TRUE)2.5 E F0(.)A
(perl v5.8.0)72 768 Q 203.17(2003-02-17 6)167.62 F 0 Cg EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E(long)108 84 Q/F1 10/Times-Bold@0 SF(pth_ctrl)2.5 E F0
(\(unsigned long)A/F2 10/Times-Italic@0 SF(query)2.5 E F0 2.5(,.)C
(..\);)-2.5 E 1.582
(This is a generalized query/control function for the)128 96 R F1(Pth)
4.082 E F0(library)4.082 E 6.582(.T)-.65 G 1.582(he ar)-6.582 F(gument)
-.18 E F2(query)4.082 E F0 1.582(is a bitmask)4.082 F
(formed out of one or more)128 108 Q/F3 10/Courier@0 SF(PTH_CTRL_)2.5 E
/F4 9/Times-Italic@0 SF(XXXX)A F0(queries. Currently the follo)2.5 E
(wing queries are supported:)-.25 E F3(PTH_CTRL_GETTHREADS)128 124.8 Q
F0 .314(This returns the total number of threads currently in e)148
136.8 R 2.814(xistence. This)-.15 F .314(query actually is formed out)
2.814 F 2.684(of the combination of queries for threads in a particular\
 state, i.e., the)148 148.8 R F3(PTH_CTRL_GET-)5.183 E(THREADS)148 160.8
Q F0(query is equal to the OR-combination of all the follo)2.5 E
(wing specialized queries:)-.25 E F3(PTH_CTRL_GETTHREADS_NEW)148 178.8 Q
F0 1.226(for the number of threads in the ne)3.726 F 3.727(wq)-.25 G
1.227(ueue \(threads created)-3.727 F(via)148 190.8 Q F2(pth_spawn)4.908
E F0 2.407(\(3\) b)1.666 F 2.407(ut still not scheduled once\),)-.2 F F3
(PTH_CTRL_GETTHREADS_READY)4.907 E F0 2.407(for the)4.907 F .827
(number of threads in the ready queue \(threads who w)148 202.8 R .827
(ant to do)-.1 F/F5 9/Times-Roman@0 SF(CPU)3.327 E F0 -.2(bu)3.327 G
(rsts\),).2 E F3(PTH_CTRL_GET-)3.327 E(THREADS_RUNNING)148 214.8 Q F0
6.031(for the number of running threads \(al)8.531 F -.1(wa)-.1 G 6.031
(ys just one thread!\),).1 F F3(PTH_CTRL_GETTHREADS_WAITING)148 226.8 Q
F0 .737(for the number of threads in the w)3.237 F .737
(aiting queue \(threads)-.1 F -.1(wa)148 238.8 S .882(iting for e).1 F
-.15(ve)-.25 G(nts\),).15 E F3(PTH_CTRL_GETTHREADS_SUSPENDED)3.382 E F0
.882(for the number of threads in the)3.382 F .26
(suspended queue \(threads w)148 250.8 R .26(aiting to be resumed\) and)
-.1 F F3(PTH_CTRL_GETTHREADS_DEAD)2.76 E F0 .26(for the)2.76 F
(number of threads in the ne)148 262.8 Q 2.5(wq)-.25 G
(ueue \(terminated threads w)-2.5 E(aiting for a join\).)-.1 E F3
(PTH_CTRL_GETAVLOAD)128 279.6 Q F0 1.44(This requires a second ar)148
291.6 R 1.44(gument of type `)-.18 F F3 1.44(float *)B F0 3.94('\()C
1.44(pointer to a \215oating point v)-3.94 F 3.94(ariable\). It)-.25 F
.074(stores a \215oating point v)148 303.6 R .075(alue describing the e)
-.25 F .075(xponential a)-.15 F -.15(ve)-.2 G .075
(raged load of the scheduler in this v).15 F(ari-)-.25 E .409(able. The\
 load is a function from the number of threads in the ready queue of th\
e schedulers dis-)148 315.6 R .562(patching unit.)148 327.6 R .563(So a\
 load around 1.0 means there is only one ready thread \(the standard si\
tuation)5.562 F 1.031
(when the application has no high load\). A higher load v)148 339.6 R
1.031(alue means there a more threads ready)-.25 F 1.25(who w)148 351.6
R 1.251(ant to do)-.1 F F5(CPU)3.751 E F0 -.2(bu)3.751 G 1.251
(rsts. The a).2 F -.15(ve)-.2 G 1.251(rage load v).15 F 1.251
(alue updates once per second only)-.25 F 3.751(.T)-.65 G 1.251
(he return)-3.751 F -.25(va)148 363.6 S(lue for this query is al).25 E
-.1(wa)-.1 G(ys 0.).1 E F3(PTH_CTRL_GETPRIO)128 380.4 Q F0 .058
(This requires a second ar)148 392.4 R .057(gument of type `)-.18 F F3
(pth_t)A F0 2.557('w)C .057(hich identi\214es a thread.)-2.557 F .057
(It returns the priority)5.057 F(\(ranging from)148 404.4 Q F3
(PTH_PRIO_MIN)2.5 E F0(to)2.5 E F3(PTH_PRIO_MAX)2.5 E F0 2.5(\)o)C 2.5
(ft)-2.5 G(he gi)-2.5 E -.15(ve)-.25 G 2.5(nt).15 G(hread.)-2.5 E F3
(PTH_CTRL_GETNAME)128 421.2 Q F0 .054(This requires a second ar)148
433.2 R .054(gument of type `)-.18 F F3(pth_t)A F0 2.554('w)C .055
(hich identi\214es a thread. It returns the name of)-2.554 F(the gi)148
445.2 Q -.15(ve)-.25 G 2.5(nt).15 G(hread, i.e., the return v)-2.5 E
(alue of)-.25 E F2(pth_ctrl)2.5 E F0(\(3\) should be casted to a `)1.666
E F3(char *)A F0('.)A F3(PTH_CTRL_DUMPSTATE)128 462 Q F0 1.658
(This requires a second ar)148 474 R 1.658(gument of type `)-.18 F F3
1.658(FILE *)B F0 4.157('t)C 4.157(ow)-4.157 G 1.657
(hich a summary of the internal)-4.157 F F1(Pth)4.157 E F0 .319(library\
 state is written to. The main information which is currently written o\
ut is the current state)148 486 R(of the thread pool.)148 498 Q
(The function returns)128 516 Q F3<ad31>2.5 E F0(on error)2.5 E(.)-.55 E
(long)108 532.8 Q F1(pth_v)2.5 E(ersion)-.1 E F0(\(v)A(oid\);)-.2 E .145
(This function returns a he)128 544.8 R(x-v)-.15 E .145(alue `0x)-.25 F
F2(V)A F4(RR)A F2(T)A F4(LL)A F0 2.645('w)C .145
(hich describes the current)-2.645 F F1(Pth)2.645 E F0 .145(library v)
2.645 F(ersion.)-.15 E F2(V)2.645 E F0 .144(is the)2.645 F -.15(ve)128
556.8 S(rsion,).15 E F4(RR)3.583 E F0 1.083(the re)3.583 F(visions,)-.25
E F4(LL)3.583 E F0 1.083(the le)3.583 F -.15(ve)-.25 G 3.583(la).15 G
(nd)-3.583 E F2(T)3.583 E F0 1.084(the type of the le)3.583 F -.15(ve)
-.25 G 3.584(l\().15 G(alphale)-3.584 E -.15(ve)-.25 G 1.084
(l=0, betale).15 F -.15(ve)-.25 G 1.084(l=1, patch-).15 F(le)128 568.8 Q
-.15(ve)-.25 G 1.29(l=2, etc\). F).15 F 1.29(or instance)-.15 F F1(Pth)
3.79 E F0 -.15(ve)3.79 G 1.289(rsion 1.0b1 is encoded as 0x100101.).15 F
1.289(The reason for this unusual)6.289 F .886(mapping is that this w)
128 580.8 R .887(ay the v)-.1 F .887(ersion number is steadily)-.15 F F2
(incr)3.387 E(easing)-.37 E F0 3.387(.T)C .887(he same v)-3.387 F .887
(alue is also a)-.25 F -.25(va)-.2 G(ilable).25 E(under compile time as)
128 592.8 Q F3(PTH_VERSION)2.5 E F0(.)A F1(Thr)108 615.6 Q(ead Attrib)
-.18 E(ute Handling)-.2 E F0(Attrib)108 632.4 Q 1.256
(ute objects are used in)-.2 F F1(Pth)3.756 E F0 1.256(for tw)3.756 F
3.756(ot)-.1 G 1.256(hings: First stand\255alone/unbound attrib)-3.756 F
1.256(ute objects are used to)-.2 F 2.02(store attrib)108 644.4 R 2.02
(utes for to be spa)-.2 F 2.021(wned threads.)-.15 F 2.021
(Bounded attrib)7.021 F 2.021(ute objects are used to modify attrib)-.2
F 2.021(utes of)-.2 F(already e)108 656.4 Q(xisting threads. The follo)
-.15 E(wing attrib)-.25 E(ute \214elds e)-.2 E(xists in attrib)-.15 E
(ute objects:)-.2 E F3(PTH_ATTR_PRIO)108 673.2 Q F0(\(read\255write\) [)
2.5 E F3(int)A F0(])A(Thread Priority between)128 685.2 Q F3
(PTH_PRIO_MIN)2.5 E F0(and)2.5 E F3(PTH_PRIO_MAX)2.5 E F0 5(.T)C(he def)
-5 E(ault is)-.1 E F3(PTH_PRIO_STD)2.5 E F0(.)A F3(PTH_ATTR_NAME)108 702
Q F0(\(read\255write\) [)2.5 E F3(char *)A F0(])A
(Name of thread \(up to 40 characters are stored only\), mainly for deb)
128 714 Q(ugging purposes.)-.2 E(perl v5.8.0)72 768 Q 203.17
(2003-02-17 7)167.62 F 0 Cg EP
%%Page: 8 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E/F1 10/Courier@0 SF(PTH_ATTR_DISPATCHES)108 84 Q F0
(\(read\255write\) [)2.5 E F1(int)A F0(])A .366(In bounded attrib)128 96
R .366(ute objects, this \214eld is incremented e)-.2 F -.15(ve)-.25 G
.366(ry time the conte).15 F .365(xt is switched to the associ-)-.15 F
(ated thread.)128 108 Q F1(PTH_ATTR_JOINABLE)108 124.8 Q F0
(\(read\255write> [)2.5 E F1(int)A F0(])A 1.263
(The thread detachment type,)128 136.8 R F1(TRUE)3.763 E F0 1.263
(indicates a joinable thread,)3.763 F F1(FALSE)3.763 E F0 1.263
(indicates a detached thread.)3.763 F 1.437
(When a thread is detached, after termination it is immediately kick)128
148.8 R 1.437(ed out of the system instead of)-.1 F
(inserted into the dead queue.)128 160.8 Q F1(PTH_ATTR_CANCEL_STATE)108
177.6 Q F0(\(read\255write\) [)2.5 E F1(unsigned int)A F0(])A 4.149
(The thread cancellation state, i.e., a combination of)128 189.6 R F1
(PTH_CANCEL_ENABLE)6.649 E F0(or)6.649 E F1(PTH_CAN-)6.649 E
(CEL_DISABLE)128 201.6 Q F0(and)2.5 E F1(PTH_CANCEL_DEFERRED)2.5 E F0
(or)2.5 E F1(PTH_CANCEL_ASYNCHRONOUS)2.5 E F0(.)A F1
(PTH_ATTR_STACK_SIZE)108 218.4 Q F0(\(read\255write\) [)2.5 E F1
(unsigned int)A F0(])A(The thread stack size in bytes. Use lo)128 230.4
Q(wer v)-.25 E(alues than 64)-.25 E/F2 9/Times-Roman@0 SF(KB)2.5 E F0
(with great care!)2.5 E F1(PTH_ATTR_STACK_ADDR)108 247.2 Q F0
(\(read\255write\) [)2.5 E F1(char *)A F0(])A 2.5(Ap)128 259.2 S
(ointer to the lo)-2.5 E(wer address of a chunk of)-.25 E/F3 10
/Times-Italic@0 SF(malloc)2.5 E F0(\(3\)'ed memory for the stack.)1.666
E F1(PTH_ATTR_TIME_SPAWN)108 276 Q F0(\(read\255only\) [)2.5 E F1
(pth_time_t)A F0(])A .59(The time when the thread w)128 288 R .59
(as spa)-.1 F 3.09(wned. This)-.15 F .589
(can be queried only when the attrib)3.089 F .589(ute object is bound)
-.2 F(to a thread.)128 300 Q F1(PTH_ATTR_TIME_LAST)108 316.8 Q F0
(\(read\255only\) [)2.5 E F1(pth_time_t)A F0(])A .776
(The time when the thread w)128 328.8 R .776(as last dispatched.)-.1 F
.777(This can be queried only when the attrib)5.776 F .777
(ute object is)-.2 F(bound to a thread.)128 340.8 Q F1
(PTH_ATTR_TIME_RAN)108 357.6 Q F0(\(read\255only\) [)2.5 E F1
(pth_time_t)A F0(])A .022(The total time the thread w)128 369.6 R .022
(as running.)-.1 F .022(This can be queried only when the attrib)5.022 F
.021(ute object is bound to a)-.2 F(thread.)128 381.6 Q F1
(PTH_ATTR_START_FUNC)108 398.4 Q F0(\(read\255only\) [)2.5 E F1
(void *\(*\)\(void *\))A F0(])A(The thread start function.)128 410.4 Q
(This can be queried only when the attrib)5 E
(ute object is bound to a thread.)-.2 E F1(PTH_ATTR_START_ARG)108 427.2
Q F0(\(read\255only\) [)2.5 E F1(void *)A F0(])A(The thread start ar)128
439.2 Q 2.5(gument. This)-.18 F(can be queried only when the attrib)2.5
E(ute object is bound to a thread.)-.2 E F1(PTH_ATTR_STATE)108 456 Q F0
(\(read\255only\) [)2.5 E F1(pth_state_t)A F0(])A 5.973
(The scheduling state of the thread, i.e., either)128 468 R F1
(PTH_STATE_NEW)8.474 E F0(,)A F1(PTH_STATE_READY)8.474 E F0(,)A F1
(PTH_STATE_WAITING)128 480 Q F0 3.169(,o)C(r)-3.169 E F1(PTH_STATE_DEAD)
3.169 E F0 .668(This can be queried only when the attrib)3.168 F .668
(ute object)-.2 F(is bound to a thread.)128 492 Q F1(PTH_ATTR_EVENTS)108
508.8 Q F0(\(read\255only\) [)2.5 E F1(pth_event_t)A F0(])A .101(The e)
128 520.8 R -.15(ve)-.25 G .101(nt ring the thread is w).15 F .101
(aiting for)-.1 F 5.101(.T)-.55 G .101
(his can be queried only when the attrib)-5.101 F .101
(ute object is bound to)-.2 F 2.5(at)128 532.8 S(hread.)-2.5 E F1
(PTH_ATTR_BOUND)108 549.6 Q F0(\(read\255only\) [)2.5 E F1(int)A F0(])A
(Whether the attrib)128 561.6 Q(ute object is bound \()-.2 E F1(TRUE)A
F0 2.5(\)t)C 2.5(oat)-2.5 G(hread or not \()-2.5 E F1(FALSE)A F0(\).)A
(The follo)108 578.4 Q(wing)-.25 E F2(API)2.5 E F0
(functions can be used to handle the attrib)2.5 E(ute objects:)-.2 E
(pth_attr_t)108 595.2 Q/F4 10/Times-Bold@0 SF(pth_attr_of)2.5 E F0
(\(pth_t)A F3(tid)2.5 E F0(\);)A 1.833(This returns a ne)128 607.2 R
4.333(wa)-.25 G(ttrib)-4.333 E 1.833(ute object)-.2 F F3(bound)4.333 E
F0 1.833(to thread)4.333 F F3(tid)4.332 E F0 6.832(.A)C 2.132 -.15(ny q)
-6.832 H 1.832(ueries on this object directly fetch).15 F(attrib)128
619.2 Q .465(utes from)-.2 F F3(tid)2.965 E F0 2.965(.A)C .465
(nd attrib)-2.965 F .466(ute modi\214cations directly change)-.2 F F3
(tid)2.966 E F0 2.966(.U)C .466(se such attrib)-2.966 F .466
(ute objects to mod-)-.2 F(ify e)128 631.2 Q(xisting threads.)-.15 E
(pth_attr_t)108 648 Q F4(pth_attr_new)2.5 E F0(\(v)A(oid\);)-.2 E .615
(This returns a ne)128 660 R(w)-.25 E F3(unbound)3.115 E F0(attrib)3.115
E .615(ute object. An implicit)-.2 F F3(pth_attr_init\(\))3.115 E F0
.615(is done on it. An)3.115 F 3.115(yq)-.15 G .615(ueries on)-3.115 F
1.998(this object just fetch stored attrib)128 672 R 1.998
(utes from it.)-.2 F 1.999(And attrib)6.999 F 1.999
(ute modi\214cations just change the stored)-.2 F(attrib)128 684 Q 2.5
(utes. Use)-.2 F(such attrib)2.5 E
(ute objects to pre-con\214gure attrib)-.2 E(utes for to be spa)-.2 E
(wned threads.)-.15 E(int)108 700.8 Q F4(pth_attr_init)2.5 E F0
(\(pth_attr_t)A F3(attr)2.5 E F0(\);)A .6(This initializes an attrib)128
712.8 R .6(ute object)-.2 F F3(attr)3.1 E F0 .6(to the def)3.1 F .6
(ault v)-.1 F(alues:)-.25 E F1(PTH_ATTR_PRIO)3.1 E F0(:=)3.1 E F1
(PTH_PRIO_STD)3.1 E F0(,)A F1(PTH_ATTR_NAME)128 724.8 Q F0 2.225(:= `)
4.725 F F1(unknown)A F0(',)A F1(PTH_ATTR_DISPATCHES)4.726 E F0(:=)4.726
E F1(0)4.726 E F0(,)A F1(PTH_ATTR_JOINABLE)4.726 E F0(:=)4.726 E
(perl v5.8.0)72 768 Q 203.17(2003-02-17 8)167.62 F 0 Cg EP
%%Page: 9 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E/F1 10/Courier@0 SF(TRUE)128 84 Q F0(,)A F1(PTH_ATTR_CANCELSTATE)
4.832 E F0(:=)4.832 E F1(PTH_CANCEL_DEFAULT)4.832 E F0(,)A F1
(PTH_ATTR_STACK_SIZE)4.832 E F0(:=)4.832 E .776(64*1024 and)128 96 R F1
(PTH_ATTR_STACK_ADDR)3.276 E F0(:=)3.276 E F1(NULL)3.276 E F0 3.276(.A)C
.776(ll other)-3.276 F F1(PTH_ATTR_*)3.276 E F0(attrib)3.276 E .776
(utes are read-only)-.2 F(attrib)128 108 Q 2.149(utes and don')-.2 F
4.649(tr)-.18 G(ecei)-4.649 E 2.449 -.15(ve d)-.25 H(ef).15 E 2.149
(ault v)-.1 F 2.149(alues in)-.25 F/F2 10/Times-Italic@0 SF(attr)4.649 E
F0 4.649(,b)C 2.148(ecause the)-4.649 F 4.648(ye)-.15 G 2.148
(xists only for bounded attrib)-4.798 F(ute)-.2 E(objects.)128 120 Q
(int)108 136.8 Q/F3 10/Times-Bold@0 SF(pth_attr_set)2.5 E F0
(\(pth_attr_t)A F2(attr)2.5 E F0 2.5(,i)C(nt)-2.5 E F2(\214eld)2.5 E F0
2.5(,.)C(..\);)-2.5 E .717(This sets the attrib)128 148.8 R .717
(ute \214eld)-.2 F F2(\214eld)3.218 E F0(in)3.218 E F2(attr)3.218 E F0
.718(to a v)3.218 F .718(alue speci\214ed as an additional ar)-.25 F
.718(gument on the v)-.18 F(ariable)-.25 E(ar)128 160.8 Q
(gument list. The follo)-.18 E(wing attrib)-.25 E(ute)-.2 E F2(\214elds)
2.5 E F0(and ar)2.5 E(gument pairs can be used:)-.18 E F1 60
(PTH_ATTR_PRIO int)134 178.8 R 60(PTH_ATTR_NAME char)134 190.8 R(*)6 E
24(PTH_ATTR_DISPATCHES int)134 202.8 R 36(PTH_ATTR_JOINABLE int)134
214.8 R 12(PTH_ATTR_CANCEL_STATE unsigned)134 226.8 R(int)6 E 24
(PTH_ATTR_STACK_SIZE unsigned)134 238.8 R(int)6 E 24
(PTH_ATTR_STACK_ADDR char)134 250.8 R(*)6 E F0(int)108 267.6 Q F3
(pth_attr_get)2.5 E F0(\(pth_attr_t)A F2(attr)2.5 E F0 2.5(,i)C(nt)-2.5
E F2(\214eld)2.5 E F0 2.5(,.)C(..\);)-2.5 E 1.378(This retrie)128 279.6
R -.15(ve)-.25 G 3.878(st).15 G 1.378(he attrib)-3.878 F 1.378
(ute \214eld)-.2 F F2(\214eld)3.878 E F0(in)3.878 E F2(attr)3.878 E F0
1.378(and stores its v)3.878 F 1.377(alue in the v)-.25 F 1.377
(ariable speci\214ed through a)-.25 F 1.43(pointer in an additional ar)
128 291.6 R 1.431(gument on the v)-.18 F 1.431(ariable ar)-.25 F 1.431
(gument list. The follo)-.18 F(wing)-.25 E F2(\214elds)3.931 E F0 1.431
(and ar)3.931 F(gument)-.18 E(pairs can be used:)128 303.6 Q F1 60
(PTH_ATTR_PRIO int)134 321.6 R(*)6 E 60(PTH_ATTR_NAME char)134 333.6 R
(**)6 E 24(PTH_ATTR_DISPATCHES int)134 345.6 R(*)6 E 36
(PTH_ATTR_JOINABLE int)134 357.6 R(*)6 E 12
(PTH_ATTR_CANCEL_STATE unsigned)134 369.6 R(int *)6 E 24
(PTH_ATTR_STACK_SIZE unsigned)134 381.6 R(int *)6 E 24
(PTH_ATTR_STACK_ADDR char)134 393.6 R(**)6 E 24
(PTH_ATTR_TIME_SPAWN pth_time_t)134 405.6 R(*)6 E 30
(PTH_ATTR_TIME_LAST pth_time_t)134 417.6 R(*)6 E 36
(PTH_ATTR_TIME_RAN pth_time_t)134 429.6 R(*)6 E 24
(PTH_ATTR_START_FUNC void)134 441.6 R(*\(**\)\(void *\))6 E 30
(PTH_ATTR_START_ARG void)134 453.6 R(**)6 E 54
(PTH_ATTR_STATE pth_state_t)134 465.6 R(*)6 E 48
(PTH_ATTR_EVENTS pth_event_t)134 477.6 R(*)6 E 54(PTH_ATTR_BOUND int)134
489.6 R(*)6 E F0(int)108 506.4 Q F3(pth_attr_destr)2.5 E(oy)-.18 E F0
(\(pth_attr_t)A F2(attr)2.5 E F0(\);)A(This destro)128 518.4 Q
(ys a attrib)-.1 E(ute object)-.2 E F2(attr)2.5 E F0 2.5(.A)C(fter this)
-2.5 E F2(attr)2.5 E F0(is no longer a v)2.5 E(alid attrib)-.25 E
(ute object.)-.2 E F3(Thr)108 541.2 Q(ead Contr)-.18 E(ol)-.18 E F0
(The follo)108 558 Q
(wing functions control the threading itself and mak)-.25 E 2.5(eu)-.1 G
2.5(pt)-2.5 G(he main)-2.5 E/F4 9/Times-Roman@0 SF(API)2.5 E F0(of the)
2.5 E F3(Pth)2.5 E F0(library)2.5 E(.)-.65 E(pth_t)108 574.8 Q F3
(pth_spawn)2.5 E F0(\(pth_attr_t)A F2(attr)2.5 E F0 2.5(,v)C(oid *\(*)
-2.7 E F2(entry)A F0(\)\(v)A(oid *\), v)-.2 E(oid *)-.2 E F2(ar)A(g)-.37
E F0(\);)A 1.86(This spa)128 586.8 R 1.86(wns a ne)-.15 F 4.36(wt)-.25 G
1.859(hread with the attrib)-4.36 F 1.859(utes gi)-.2 F -.15(ve)-.25 G
4.359(ni).15 G(n)-4.359 E F2(attr)4.359 E F0(\(or)4.359 E F1
(PTH_ATTR_DEFAULT)4.359 E F0 1.859(for def)4.359 F(ault)-.1 E(attrib)128
598.8 Q .189(utes \255 which means that thread priority)-.2 F 2.689(,j)
-.65 G .19(oinability and cancel state are inherited from the current)
-2.689 F 1.343(thread\) with the starting point at routine)128 610.8 R
F2(entry)3.843 E F0 3.843(;t)C 1.343
(he dispatch count is not inherited from the current)-3.843 F 2.646
(thread if)128 622.8 R F2(attr)5.146 E F0 2.646
(is not speci\214ed \255 rather)5.146 F 5.146(,i)-.4 G 5.146(ti)-5.146 G
5.146(si)-5.146 G 2.646(nitialized to zero.)-5.146 F 2.646
(This entry routine is called as)7.646 F(`pth_e)128 634.8 Q(xit\()-.15 E
F2(entry)A F0(\()A F2(ar)A(g)-.37 E F0 2.839(\)\)' inside the ne)B 5.339
(wt)-.25 G 2.839(hread unit, i.e.,)-5.339 F F2(entry)5.339 E F0 3.939
-.55('s r)D 2.838(eturn v).55 F 2.838(alue is fed to an implicit)-.25 F
F2(pth_e)128 646.8 Q(xit)-.2 E F0 .438(\(3\). So the thread can also e)
1.666 F .438(xit by just returning. Ne)-.15 F -.15(ve)-.25 G .439
(rtheless the thread can also e).15 F .439(xit e)-.15 F(xplic-)-.15 E
.817(itly at an)128 658.8 R 3.317(yt)-.15 G .817(ime by calling)-3.317 F
F2(pth_e)3.317 E(xit)-.2 E F0 .817(\(3\). But k)1.666 F .817
(eep in mind that calling the)-.1 F F4(POSIX)3.317 E F0(function)3.317 E
F2 -.2(ex)3.316 G(it).2 E F0 .816(\(3\) still)1.666 F
(terminates the complete process and not just the current thread.)128
670.8 Q .048(There is no)128 688.8 R F3(Pth)2.548 E F0 .048
(\255internal limit on the number of threads one can spa)B .049(wn, e)
-.15 F .049(xcept the limit implied by the)-.15 F -.2(av)128 700.8 S
.115(ailable virtual memory)-.05 F(.)-.65 E F3(Pth)2.615 E F0 .115
(internally k)2.615 F .115
(eeps track of thread in dynamic data structures. The function)-.1 F
(returns)128 712.8 Q F1(NULL)2.5 E F0(on error)2.5 E(.)-.55 E
(perl v5.8.0)72 768 Q 203.17(2003-02-17 9)167.62 F 0 Cg EP
%%Page: 10 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E(int)108 84 Q/F1 10/Times-Bold@0 SF(pth_once)2.5 E F0
(\(pth_once_t *)A/F2 10/Times-Italic@0 SF(ctrlvar)A F0 2.5(,v)C(oid \(*)
-2.7 E F2(func)A F0(\)\(v)A(oid *\), v)-.2 E(oid *)-.2 E F2(ar)A(g)-.37
E F0(\);)A 1.123(This is a con)128 96 R -.15(ve)-.4 G 1.123
(nience function which uses a control v).15 F 1.123(ariable of type)-.25
F/F3 10/Courier@0 SF(pth_once_t)3.623 E F0 1.123(to mak)3.623 F 3.624
(es)-.1 G 1.124(ure a)-3.624 F .018(constructor function)128 108 R F2
(func)2.518 E F0 .018(is called only once as `)2.518 F F2(func)A F0(\()A
F2(ar)A(g)-.37 E F0 .018(\)' in the system. In other w)B .017
(ords: Only the \214rst)-.1 F .758(call to)128 120 R F2(pth_once)3.259 E
F0 .759(\(3\) by an)1.666 F 3.259(yt)-.15 G .759
(hread in the system succeeds. The v)-3.259 F .759
(ariable referenced via)-.25 F F2(ctrlvar)3.259 E F0(should)3.259 E
(be declared as `)128 132 Q F3(pth_once_t)A F2(variable-name)2.5 E F0(=)
2.5 E F3(PTH_ONCE_INIT)2.5 E F0(;' before calling this function.)A
(pth_t)108 148.8 Q F1(pth_self)2.5 E F0(\(v)A(oid\);)-.2 E .334(This ju\
st returns the unique thread handle of the currently running thread.)128
160.8 R .333(This handle itself has to be)5.333 F .18
(treated as an opaque entity by the application.)128 172.8 R(It')5.181 E
2.681(su)-.55 G .181(sually used as an ar)-2.681 F .181
(gument to other functions who)-.18 F(require an ar)128 184.8 Q
(gument of type)-.18 E F3(pth_t)2.5 E F0(.)A(int)108 201.6 Q F1
(pth_suspend)2.5 E F0(\(pth_t)A F2(tid)2.5 E F0(\);)A .202
(This suspends a thread)128 213.6 R F2(tid)2.702 E F0 .202
(until it is manually resumed ag)2.702 F .202(ain via)-.05 F F2(pth_r)
2.702 E(esume)-.37 E F0 .202(\(3\). F)1.666 F .202
(or this, the thread is)-.15 F(mo)128 225.6 Q -.15(ve)-.15 G 2.632(dt)
.15 G 2.632(ot)-2.632 G(he)-2.632 E/F4 9/Times-Bold@0 SF(SUSPENDED)2.632
E F0 .132(queue and this w)2.632 F .132
(ay is completely out of the scheduler')-.1 F 2.633(se)-.55 G -.15(ve)
-2.883 G .133(nt handling and).15 F .137
(thread dispatching scope. Suspending the current thread is not allo)128
237.6 R 2.637(wed. The)-.25 F .137(function returns)2.637 F F3(TRUE)
2.637 E F0(on)2.637 E(success and)128 249.6 Q F3(FALSE)2.5 E F0
(on errors.)2.5 E(int)108 266.4 Q F1(pth_r)2.5 E(esume)-.18 E F0
(\(pth_t)A F2(tid)2.5 E F0(\);)A 1.918(This function resumes a pre)128
278.4 R 1.918(viously suspended thread)-.25 F F2(tid)4.418 E F0 4.418
(,i)C(.e.)-4.418 E F2(tid)4.418 E F0 1.919(has to stay on the)4.418 F F4
(SUSPENDED)4.419 E F0 .184(queue. The thread is mo)128 290.4 R -.15(ve)
-.15 G 2.684(dt).15 G 2.684(ot)-2.684 G(he)-2.684 E F4(NEW)2.684 E F0(,)
A F4(READ)2.684 E(Y)-.36 E F0(or)2.684 E F4 -1.08(WA)2.684 G(ITING)1.08
E F0 .183(queue \(dependent on what its state w)2.683 F(as)-.1 E .13
(when the)128 302.4 R F2(pth_suspend)2.63 E F0 .13
(\(3\) call were made\) and this w)1.666 F .13(ay ag)-.1 F .13
(ain enters the e)-.05 F -.15(ve)-.25 G .131
(nt handling and thread dis-).15 F(patching scope of the scheduler)128
314.4 Q 2.5(.T)-.55 G(he function returns)-2.5 E F3(TRUE)2.5 E F0
(on success and)2.5 E F3(FALSE)2.5 E F0(on errors.)2.5 E(int)108 331.2 Q
F1(pth_raise)2.5 E F0(\(pth_t)A F2(tid)2.5 E F0 2.5(,i)C(nt)-2.5 E F2
(sig)2.5 E F0(\))A .336(This function raises a signal for deli)128 343.2
R -.15(ve)-.25 G .335(ry to thread).15 F F2(tid)2.835 E F0(only)2.835 E
5.335(.W)-.65 G .335(hen one just raises a signal via)-5.335 F F2 -.15
(ra)2.835 G(ise).15 E F0(\(3\))1.666 E(or)128 355.2 Q F2(kill)2.607 E F0
.107(\(2\), its deli)1.666 F -.15(ve)-.25 G .107
(red to an arbitrary thread which has this signal not block).15 F 2.608
(ed. W)-.1 F(ith)-.4 E F2(pth_r)2.608 E(aise)-.15 E F0 .108(\(3\) one)
1.666 F .164(can send a signal to a thread and its guarantees that only\
 this thread gets the signal deli)128 367.2 R -.15(ve)-.25 G .164
(red. But k).15 F(eep)-.1 E 1.685(in mind that ne)128 379.2 R -.15(ve)
-.25 G 1.685(rtheless the signals).15 F F2(action)4.185 E F0 1.685
(is still con\214gured)4.185 F F2(pr)4.185 E(ocess)-.45 E F0 4.186
(\255wide. When)B F2(sig)4.186 E F0 1.686(is 0 plain)4.186 F .007
(thread checking is performed, i.e., `)128 391.2 R F3 .007
(pth_raise\(tid, 0\))B F0 2.507('r)C(eturns)-2.507 E F3(TRUE)2.507 E F0
.007(when thread)2.507 F F2(tid)2.507 E F0 .006(still e)2.507 F(xists)
-.15 E(in the)128 403.2 Q F4(PTH)2.5 E F0(system b)2.5 E(ut doesn')-.2 E
2.5(ts)-.18 G(end an)-2.5 E 2.5(ys)-.15 G(ignal to it.)-2.5 E(int)108
420 Q F1(pth_yield)2.5 E F0(\(pth_t)A F2(tid)2.5 E F0(\);)A 1.628
(This e)128 432 R 1.628(xplicitly yields back the e)-.15 F -.15(xe)-.15
G 1.629(cution control to the scheduler thread.).15 F 1.629
(Usually the e)6.629 F -.15(xe)-.15 G 1.629(cution is).15 F .221
(implicitly transferred back to the scheduler when a thread w)128 444 R
.221(aits for an e)-.1 F -.15(ve)-.25 G .221
(nt. But when a thread has to).15 F .249(do lar)128 456 R(ger)-.18 E/F5
9/Times-Roman@0 SF(CPU)2.75 E F0 -.2(bu)2.75 G .25
(rsts, it can be reasonable to interrupt it e).2 F .25
(xplicitly by doing a fe)-.15 F(w)-.25 E F2(pth_yield)2.75 E F0 .25
(\(3\) calls to)1.666 F(gi)128 468 Q 1.093 -.15(ve o)-.25 H .793
(ther threads a chance to e).15 F -.15(xe)-.15 G .793(cute, too.).15 F
.793(This ob)5.793 F .793(viously is the cooperating part of)-.15 F F1
(Pth)3.293 E F0 5.793(.A)C(thread)-2.501 E F2 .822(has not)128 480 R F0
.823(to yield e)3.323 F -.15(xe)-.15 G .823
(cution, of course. But when you w).15 F .823(ant to program a serv)-.1
F .823(er application with good)-.15 F 1.297
(response times the threads should be cooperati)128 492 R -.15(ve)-.25 G
3.796(,i).15 G 1.296(.e., when the)-3.796 F 3.796(ys)-.15 G 1.296
(hould split their)-3.796 F F5(CPU)3.796 E F0 -.2(bu)3.796 G 1.296
(rsts into).2 F(smaller units with this call.)128 504 Q .293
(Usually one speci\214es)128 522 R F2(tid)2.794 E F0(as)2.794 E F3(NULL)
2.794 E F0 .294
(to indicate to the scheduler that it can freely decide which thread to)
2.794 F .542(dispatch ne)128 534 R 3.042(xt. But)-.15 F .542(if one w)
3.042 F .542
(ants to indicate to the scheduler that a particular thread should be f)
-.1 F -.2(avo)-.1 G(red).2 E 1.024(on the ne)128 546 R 1.024
(xt dispatching step, one can specify this thread e)-.15 F(xplicitly)
-.15 E 3.524(.T)-.65 G 1.024(his allo)-3.524 F 1.024
(ws the usage of the old)-.25 F .799(concept of)128 558 R F2(cor)3.299 E
(outines)-.45 E F0 .799
(where a thread/routine switches to a particular cooperating thread. If)
3.299 F F2(tid)3.298 E F0 .798(is not)3.298 F F3(NULL)128 570 Q F0 .611
(and points to a)3.111 F F2(ne)3.112 E(w)-.15 E F0(or)3.112 E F2 -.37
(re)3.112 G(ady).37 E F0 .612
(thread, it is guaranteed that this thread recei)3.112 F -.15(ve)-.25 G
3.112(se).15 G -.15(xe)-3.262 G .612(cution control).15 F 2.499
(on the ne)128 582 R 2.499(xt dispatching step. If)-.15 F F2(tid)4.999 E
F0 2.499(is in a dif)4.999 F 2.499(ferent state \(that is, not in)-.25 F
F3(PTH_STATE_NEW)4.998 E F0(or)4.998 E F3(PTH_STATE_READY)128 594 Q F0
2.5(\)a)C 2.5(ne)-2.5 G(rror is reported.)-2.5 E .786
(The function usually returns)128 612 R F3(TRUE)3.287 E F0 .787
(for success and only)3.287 F F3(FALSE)3.287 E F0(\(with)3.287 E F3
(errno)3.287 E F0 .787(set to)3.287 F F3(EINVAL)3.287 E F0 3.287(\)i)C
(f)-3.287 E F2(tid)3.287 E F0(speci\214ed an in)128 624 Q -.25(va)-.4 G
(lid or still not ne).25 E 2.5(wo)-.25 G 2.5(rr)-2.5 G(eady thread.)-2.5
E(int)108 640.8 Q F1(pth_nap)2.5 E F0(\(pth_time_t)A F2(naptime)2.5 E F0
(\);)A .13(This functions suspends the e)128 652.8 R -.15(xe)-.15 G .129
(cution of the current thread until).15 F F2(naptime)2.629 E F0 .129
(is elapsed.)2.629 F F2(naptime)2.629 E F0 .129(is of type)2.629 F F3
(pth_time_t)128 664.8 Q F0 .412(and this w)2.912 F .412(ay has theoreti\
cally a resolution of one microsecond. In practice you should)-.1 F .218
(neither rely on this nor that the thread is a)128 676.8 R -.1(wa)-.15 G
-.1(ke).1 G .218(ned e).1 F .218(xactly after)-.15 F F2(naptime)2.717 E
F0 .217(has elapsed. It')2.717 F 2.717(so)-.55 G .217(nly guaran-)-2.717
F .307(tees that the thread will sleep at least)128 688.8 R F2(naptime)
2.807 E F0 2.807(.B)C .307(ut because of the non-preempti)-2.807 F .607
-.15(ve n)-.25 H .308(ature of).15 F F1(Pth)2.808 E F0 .308(it can)2.808
F .725(last longer \(when another thread k)128 700.8 R .725(ept the)-.1
F F5(CPU)3.225 E F0 .724
(for a long time\). Additionally the resolution is depen-)3.225 F .357(\
dent of the implementation of timers by the operating system and these \
usually ha)128 712.8 R .658 -.15(ve o)-.2 H .358(nly a resolution).15 F
.827(of 10 microseconds or lar)128 724.8 R(ger)-.18 E 3.327(.B)-.55 G
.827(ut usually this isn')-3.327 F 3.326(ti)-.18 G .826
(mportant for an application unless it tries to use)-3.326 F
(perl v5.8.0)72 768 Q 198.17(2003-02-17 10)167.62 F 0 Cg EP
%%Page: 11 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E(this f)128 84 Q(acility for real time tasks.)-.1 E(int)108 100.8 Q
/F1 10/Times-Bold@0 SF(pth_wait)2.5 E F0(\(pth_e)A -.15(ve)-.25 G(nt_t)
.15 E/F2 10/Times-Italic@0 SF -.15(ev)2.5 G F0(\);).15 E .168
(This is the link between the scheduler and the e)128 112.8 R -.15(ve)
-.25 G .168(nt f).15 F .168(acility \(see belo)-.1 F 2.668(wf)-.25 G
.168(or the v)-2.668 F(arious)-.25 E F2(pth_e)2.669 E(vent_xxx\(\))-.15
E F0 1.096(functions\). It')128 124.8 R 3.596(sm)-.55 G 1.096
(odeled lik)-3.596 F(e)-.1 E F2(select)3.596 E F0 1.095
(\(2\), i.e., one gi)1.666 F -.15(ve)-.25 G 3.595(st).15 G 1.095
(his function one or more e)-3.595 F -.15(ve)-.25 G 1.095
(nts \(in the e).15 F -.15(ve)-.25 G(nt).15 E .197(ring speci\214ed by)
128 136.8 R F2 -.15(ev)2.697 G F0 2.697(\)o).15 G 2.697(nw)-2.697 G .198
(hich the current thread w)-2.697 F .198(ants to w)-.1 F .198
(ait. The scheduler a)-.1 F -.1(wa)-.15 G -.1(ke).1 G 2.698(st).1 G .198
(he thread when)-2.698 F .168(one ore more of them occurred or f)128
148.8 R .168(ailed after tagging them as such. The)-.1 F F2 -.15(ev)
2.668 G F0(ar)2.818 E .168(gument is a)-.18 F F2(pointer)2.668 E F0 .168
(to an)2.668 F -2.15 -.25(ev e)128 160.8 T .595(nt ring which isn').25 F
3.095(tc)-.18 G .595(hanged e)-3.095 F .595(xcept for the tagging.)-.15
F F2(pth_wait)3.095 E F0 .595(\(3\) returns the number of occurred or)
1.666 F -.1(fa)128 172.8 S(iled e).1 E -.15(ve)-.25 G
(nts and the application can use).15 E F2(pth_e)2.5 E(vent_status)-.15 E
F0(\(3\) to test which e)1.666 E -.15(ve)-.25 G(nts occurred or f).15 E
(ailed.)-.1 E(int)108 189.6 Q F1(pth_cancel)2.5 E F0(\(pth_t)A F2(tid)
2.5 E F0(\);)A .529(This cancels a thread)128 201.6 R F2(tid)3.029 E F0
3.029(.H)C 1.029 -.25(ow t)-3.029 H .529
(he cancellation is done depends on the cancellation state of).25 F F2
(tid)3.028 E F0(which)3.028 E 1.038
(the thread can con\214gure itself. When its state is)128 213.6 R/F3 10
/Courier@0 SF(PTH_CANCEL_DISABLE)3.539 E F0 3.539(ac)3.539 G 1.039
(ancellation request is)-3.539 F .955(just made pending.)128 225.6 R
.955(When it is)5.955 F F3(PTH_CANCEL_ENABLE)3.454 E F0 .954
(it depends on the cancellation type what is)3.454 F .408
(performed. When its)128 237.6 R F3(PTH_CANCEL_DEFERRED)2.908 E F0(ag)
2.908 E .408(ain the cancellation request is just made pending.)-.05 F
1.349(But when its)128 249.6 R F3(PTH_CANCEL_ASYNCHRONOUS)3.849 E F0
1.349(the thread is immediately canceled before)3.849 F F2(pth_can-)
3.849 E(cel)128 261.6 Q F0 1.83(\(3\) returns. The ef)1.666 F 1.83(fect\
 of a thread cancellation is equal to implicitly forcing the thread to \
call)-.25 F(`)128 273.6 Q F3(pth_exit\(PTH_CANCELED\))A F0 2.737('a)C
2.737(to)-2.737 G .237(ne of his cancellation points.)-2.737 F(In)5.237
E F1(Pth)2.737 E F0 .236(thread enter a cancellation)2.736 F
(point either e)128 285.6 Q(xplicitly via)-.15 E F2(pth_cancel_point)2.5
E F0(\(3\) or implicitly by w)1.666 E(aiting for an e)-.1 E -.15(ve)-.25
G(nt.).15 E(int)108 302.4 Q F1(pth_abort)2.5 E F0(\(pth_t)A F2(tid)2.5 E
F0(\);)A .039(This is the cruel w)128 314.4 R .039
(ay to cancel a thread)-.1 F F2(tid)2.539 E F0 2.539(.W)C .039(hen it')
-2.539 F 2.539(sa)-.55 G .039(lready dead and w)-2.539 F .039
(aits to be joined it just joins it)-.1 F .558(\(via `)128 326.4 R F3
(pth_join\()A F2(tid)A F3 6.557(,N)C(ULL\))-6.557 E F0 .557
('\) and this w)B .557(ay kicks it out of the system.)-.1 F .557
(Else it forces the thread to)5.557 F(be not joinable and to allo)128
338.4 Q 2.5(wa)-.25 G
(synchronous cancellation and then cancels it via `)-2.5 E F3
(pth_cancel\()A F2(tid)A F3(\))A F0('.)A(int)108 355.2 Q F1(pth_join)2.5
E F0(\(pth_t)A F2(tid)2.5 E F0 2.5(,v)C(oid **)-2.7 E F2(value)A F0(\);)
A .398(This joins the current thread with the thread speci\214ed via)128
367.2 R F2(tid)2.898 E F0 5.398(.I)C 2.898<748c>-5.398 G .399
(rst suspends the current thread until)-2.898 F(the)128 379.2 Q F2(tid)
3.584 E F0 1.083(thread has terminated. Then it is a)3.584 F -.1(wa)-.15
G -.1(ke).1 G 1.083(ned and stores the v).1 F 1.083(alue of)-.25 F F2
(tid)3.583 E F0 -.55('s)C F2(pth_e)4.133 E(xit)-.2 E F0 1.083
(\(3\) call into)1.666 F(*)128 391.2 Q F2(value)A F0(\(if)3.112 E F2
(value)3.112 E F0 .612(and not)3.112 F F3(NULL)3.112 E F0 3.112(\)a)C
.612(nd returns to the caller)-3.112 F 3.112(.At)-.55 G .612
(hread can be joined only when it has the)-3.112 F(attrib)128 403.2 Q
(ute)-.2 E F3(PTH_ATTR_JOINABLE)3.609 E F0 1.109(set to)3.609 F F3(TRUE)
3.609 E F0 1.109(\(the def)3.609 F 1.108
(ault\). A thread can only be joined once, i.e.,)-.1 F(after the)128
415.2 Q F2(pth_join)2.5 E F0(\(3\) call the thread)1.666 E F2(tid)2.5 E
F0(is completely remo)2.5 E -.15(ve)-.15 G 2.5(df).15 G(rom the system.)
-2.5 E -.2(vo)108 432 S(id).2 E F1(pth_exit)2.5 E F0(\(v)A(oid *)-.2 E
F2(value)A F0(\);)A .228
(This terminates the current thread. Whether it')128 444 R 2.728(si)-.55
G .228(mmediately remo)-2.728 F -.15(ve)-.15 G 2.728(df).15 G .228
(rom the system or inserted into)-2.728 F .823
(the dead queue of the scheduler depends on its join type which w)128
456 R .823(as speci\214ed at spa)-.1 F .822(wning time. If it)-.15 F
2.52(has the attrib)128 468 R(ute)-.2 E F3(PTH_ATTR_JOINABLE)5.02 E F0
2.52(set to)5.02 F F3(FALSE)5.02 E F0 5.02(,i)C(t')-5.02 E 5.02(si)-.55
G 2.52(mmediately remo)-5.02 F -.15(ve)-.15 G 5.02(da).15 G(nd)-5.02 E
F2(value)5.02 E F0(is)5.02 E 2.102
(ignored. Else the thread is inserted into the dead queue and)128 480 R
F2(value)4.602 E F0 2.102(remembered for a subsequent)4.602 F F2
(pth_join)128 492 Q F0(\(3\) call by another thread.)1.666 E F1
(Utilities)108 514.8 Q F0(Utility functions.)108 531.6 Q(int)108 548.4 Q
F1(pth_fdmode)2.5 E F0(\(int)A F2(fd)2.5 E F0 2.5(,i)C(nt)-2.5 E F2
(mode)2.5 E F0(\);)A 3.453
(This switches the non-blocking mode \215ag on \214le descriptor)128
560.4 R F2(fd)5.953 E F0 8.453(.T)C 3.453(he ar)-8.453 F(gument)-.18 E
F2(mode)5.953 E F0 3.453(can be)5.953 F F3(PTH_FDMODE_BLOCK)128 572.4 Q
F0 2.323(for switching)4.823 F F2(fd)4.822 E F0 2.322
(into blocking I/O mode,)4.822 F F3(PTH_FDMODE_NONBLOCK)4.822 E F0(for)
4.822 E(switching)128 584.4 Q F2(fd)3.296 E F0 .796
(into non-blocking I/O mode or)3.296 F F3(PTH_FDMODE_POLL)3.296 E F0
.796(for just polling the current mode.)3.296 F 3.037
(The current mode is returned \(either)128 596.4 R F3(PTH_FDMODE_BLOCK)
5.537 E F0(or)5.536 E F3(PTH_FDMODE_NONBLOCK)5.536 E F0 5.536(\)o)C(r)
-5.536 E F3(PTH_FDMODE_ERROR)128 608.4 Q F0 .601(on error)3.101 F 3.102
(.K)-.55 G .602(eep in mind that since)-3.352 F F1(Pth)3.102 E F0 .602
(1.1 there is no longer a requirement to)3.102 F .248(manually switch a\
 \214le descriptor into non-blocking mode in order to use it. This is a\
utomatically done)128 620.4 R 1.276(temporarily inside)128 632.4 R F1
(Pth)3.777 E F0 6.277(.I)C 1.277(nstead when you no)-6.277 F 3.777(ws)
-.25 G 1.277(witch a \214le descriptor e)-3.777 F 1.277
(xplicitly into non-blocking)-.15 F(mode,)128 644.4 Q F2(pth_r)2.5 E
(ead)-.37 E F0(\(3\) or)1.666 E F2(pth_write)2.5 E F0(\(3\) will ne)
1.666 E -.15(ve)-.25 G 2.5(rb).15 G(lock the current thread.)-2.5 E
(pth_time_t)108 661.2 Q F1(pth_time)2.5 E F0(\(long)A F2(sec)2.5 E F0
2.5(,l)C(ong)-2.5 E F2(usec)2.5 E F0(\);)A .442
(This is a constructor for a)128 673.2 R F3(pth_time_t)2.941 E F0 .441
(structure which is a con)2.941 F -.15(ve)-.4 G .441
(nient function to a).15 F -.2(vo)-.2 G .441(id temporary).2 F .43
(structure v)128 685.2 R .43(alues. It returns a)-.25 F F2(pth_time_t)
2.93 E F0 .43(structure which holds the absolute time v)2.93 F .43
(alue speci\214ed by)-.25 F F2(sec)2.93 E F0(and)128 697.2 Q F2(usec)2.5
E F0(.)A(perl v5.8.0)72 768 Q 198.17(2003-02-17 11)167.62 F 0 Cg EP
%%Page: 12 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E(pth_time_t)108 84 Q/F1 10/Times-Bold@0 SF(pth_timeout)2.5 E F0
(\(long)A/F2 10/Times-Italic@0 SF(sec)2.5 E F0 2.5(,l)C(ong)-2.5 E F2
(usec)2.5 E F0(\);)A .442(This is a constructor for a)128 96 R/F3 10
/Courier@0 SF(pth_time_t)2.941 E F0 .441(structure which is a con)2.941
F -.15(ve)-.4 G .441(nient function to a).15 F -.2(vo)-.2 G .441
(id temporary).2 F 1.016(structure v)128 108 R 3.516(alues. It)-.25 F
1.016(returns a)3.516 F F2(pth_time_t)3.516 E F0 1.017
(structure which holds the absolute time v)3.516 F 1.017
(alue calculated by)-.25 F(adding)128 120 Q F2(sec)2.5 E F0(and)2.5 E F2
(usec)2.5 E F0(to the current time.)2.5 E(Sfdisc_t *)108 136.8 Q F1
(pth_s\214odisc)A F0(\(v)A(oid\);)-.2 E .916(This functions is al)128
148.8 R -.1(wa)-.1 G .916(ys a).1 F -.25(va)-.2 G .916(ilable, b).25 F
.915(ut only reasonably usable when)-.2 F F1(Pth)3.415 E F0 -.1(wa)3.415
G 3.415(sb).1 G .915(uilt with)-3.615 F F1(S\214o)3.415 E F0(support)
3.415 E(\()128 160.8 Q F3(\255\255with\255sfio)A F0 .138(option\) and)
2.638 F F3(PTH_EXT_SFIO)2.638 E F0 .138(is then de\214ned by)2.638 F F3
(pth.h)2.639 E F0 2.639(.I)C 2.639(ti)-2.639 G 2.639(su)-2.639 G .139
(seful for applications)-2.639 F .704(which w)128 172.8 R .704
(ant to use the comprehensi)-.1 F -.15(ve)-.25 G F1(S\214o)3.354 E F0
.704(I/O library with the)3.204 F F1(Pth)3.204 E F0 .703
(threading library)3.204 F 3.203(.T)-.65 G .703(hen this func-)-3.203 F
1.918(tion can be used to get an)128 184.8 R F1(S\214o)4.419 E F0 1.919
(discipline structure \()4.419 F F3(Sfdisc_t)A F0 4.419(\)w)C 1.919
(hich can be pushed onto)-4.419 F F1(S\214o)4.419 E F0 6.366(streams \()
128 196.8 R F3(Sfio_t)A F0 8.866(\)i)C 8.866(no)-8.866 G 6.365
(rder to let this stream use)-8.866 F F2(pth_r)8.865 E(ead)-.37 E F0
(\(3\)/)1.666 E F2(pth_write)A F0 6.365(\(2\) instead of)1.666 F F2 -.37
(re)128 208.8 S(ad).37 E F0(\(2\)/)1.666 E F2(write)A F0 .082
(\(2\). The bene\214t is that this w)1.666 F .083(ay I/O on the)-.1 F F1
(S\214o)2.583 E F0 .083(stream does only block the current thread)2.583
F 1.093(instead of the whole process. The application has to)128 220.8 R
F2(fr)3.593 E(ee)-.37 E F0 1.093(\(3\) the)1.666 F F3(Sfdisc_t)3.593 E
F0 1.092(structure when it is no)3.593 F
(longer needed. The S\214o package can be found at http://www)128 232.8
Q(.research.att.com/sw/tools/s\214o/.)-.65 E F1(Cancellation Management)
108 255.6 Q(Pth)108 272.4 Q F0(supports)2.5 E/F4 9/Times-Roman@0 SF
(POSIX)2.5 E F0(style thread cancellation via)2.5 E F2(pth_cancel)2.5 E
F0(\(3\) and the follo)1.666 E(wing tw)-.25 E 2.5(or)-.1 G
(elated functions:)-2.5 E -.2(vo)108 289.2 S(id).2 E F1
(pth_cancel_state)2.5 E F0(\(int)A F2(ne)2.5 E(wstate)-.15 E F0 2.5(,i)C
(nt *)-2.5 E F2(oldstate)A F0(\);)A 1.296
(This manages the cancellation state of the current thread.)128 301.2 R
(When)6.297 E F2(oldstate)3.797 E F0 1.297(is not)3.797 F F3(NULL)3.797
E F0 1.297(the function)3.797 F .934
(stores the old cancellation state under the v)128 313.2 R .934
(ariable pointed to by)-.25 F F2(oldstate)3.434 E F0 3.434(.W)C(hen)
-3.434 E F2(ne)3.434 E(wstate)-.15 E F0 .934(is not)3.434 F F3(0)3.434 E
F0(it)3.434 E .667(sets the ne)128 325.2 R 3.167(wc)-.25 G .667
(ancellation state.)-3.167 F F2(oldstate)3.167 E F0 .668
(is created before)3.167 F F2(ne)3.168 E(wstate)-.15 E F0 .668(is set.)
3.168 F 3.168(As)5.668 G .668(tate is a combination of)-3.168 F F3
(PTH_CANCEL_ENABLE)128 337.2 Q F0(or)11.38 E F3(PTH_CANCEL_DISABLE)11.38
E F0(and)11.38 E F3(PTH_CANCEL_DEFERRED)11.38 E F0(or)11.38 E F3
(PTH_CANCEL_ASYNCHRONOUS)128 349.2 Q F0(.)A F3(PTH_CANCEL_ENABLE)20.7 E
/F5 10/Symbol SF<ef>A F3(PTH_CANCEL_DEFERRED)A F0(\(or)18.2 E F3
(PTH_CANCEL_DEFAULT)128 361.2 Q F0 3.14(\)i)C 3.14(st)-3.14 G .64
(he def)-3.14 F .64(ault state where cancellation is possible b)-.1 F
.64(ut only at cancellation)-.2 F 3.125(points. Use)128 373.2 R F3
(PTH_CANCEL_DISABLE)3.125 E F0 .626
(to complete disable cancellation for a thread and)3.125 F F3(PTH_CAN-)
3.126 E(CEL_ASYNCHRONOUS)128 385.2 Q F0 .363(for allo)2.863 F .362
(wing asynchronous cancellations, i.e., cancellations which can happen)
-.25 F(at an)128 397.2 Q 2.5(yt)-.15 G(ime.)-2.5 E -.2(vo)108 414 S(id)
.2 E F1(pth_cancel_point)2.5 E F0(\(v)A(oid\);)-.2 E .253(This e)128 426
R .253(xplicitly enter a cancellation point. When the current cancellat\
ion state is)-.15 F F3(PTH_CANCEL_DIS-)2.754 E(ABLE)128 438 Q F0 1.134
(or no cancellation request is pending, this has no side-ef)3.634 F
1.134(fect and returns immediately)-.25 F 3.634(.E)-.65 G 1.134(lse it)
-3.634 F(calls `)128 450 Q F3(pth_exit\(PTH_CANCELED\))A F0('.)A F1(Ev)
108 472.8 Q(ent Handling)-.1 E(Pth)108 489.6 Q F0 .791(has a v)3.291 F
.791(ery \215e)-.15 F .791(xible e)-.15 F -.15(ve)-.25 G .791(nt f).15 F
.791(acility which is link)-.1 F .792(ed into the scheduler through the)
-.1 F F2(pth_wait)3.292 E F0 .792(\(3\) function.)1.666 F(The follo)108
501.6 Q(wing functions pro)-.25 E(vide the handling of e)-.15 E -.15(ve)
-.25 G(nt rings.).15 E(pth_e)108 518.4 Q -.15(ve)-.25 G(nt_t).15 E F1
(pth_e)2.5 E -.1(ve)-.15 G(nt).1 E F0(\(unsigned long)A F2(spec)2.5 E F0
2.5(,.)C(..\);)-2.5 E .906(This creates a ne)128 530.4 R 3.406(we)-.25 G
-.15(ve)-3.656 G .906(nt ring consisting of a single initial e).15 F
-.15(ve)-.25 G 3.405(nt. The).15 F .905(type of the generated e)3.405 F
-.15(ve)-.25 G .905(nt is).15 F(speci\214ed by)128 542.4 Q F2(spec)2.5 E
F0 2.5(.T)C(he follo)-2.5 E(wing types are a)-.25 E -.25(va)-.2 G
(ilable:).25 E F3(PTH_EVENT_FD)128 559.2 Q F0 7.921
(This is a \214le descriptor e)148 571.2 R -.15(ve)-.25 G 7.921
(nt. One or more of).15 F F3(PTH_UNTIL_FD_READABLE)10.421 E F0(,)A F3
(PTH_UNTIL_FD_WRITEABLE)148 583.2 Q F0(or)2.992 E F3
(PTH_UNTIL_FD_EXCEPTION)2.992 E F0(ha)2.991 E .791 -.15(ve t)-.2 H 2.991
(ob).15 G 2.991(eO)-2.991 G .491(R-ed into)-2.991 F F2(spec)2.991 E F0
.588(to specify on which state of the \214le descriptor you w)148 595.2
R .588(ant to w)-.1 F 3.088(ait. The)-.1 F .588
(\214le descriptor itself has to)3.088 F 34.509(be gi)148 607.2 R -.15
(ve)-.25 G 37.009(na).15 G 37.008(sa)-37.009 G 37.008(na)-37.008 G
34.508(dditional ar)-37.008 F 37.008(gument. Example:)-.18 F(`)148 619.2
Q F3(pth_event\(PTH_EVENT_FD)A F5<ef>A F3(PTH_UNTIL_FD_READABLE, fd\))A
F0('.)A F3(PTH_EVENT_SELECT)128 636 Q F0 .396
(This is a multiple \214le descriptor e)148 648 R -.15(ve)-.25 G .396
(nt modeled directly after the).15 F F2(select)2.897 E F0 .397
(\(2\) call \(actually it is also)1.666 F .778(used to implement)148 660
R F2(pth_select)3.277 E F0 .777(\(3\) internally\).)1.666 F(It')5.777 E
3.277(sac)-.55 G(on)-3.277 E -.15(ve)-.4 G .777(nient w).15 F .777
(ay to w)-.1 F .777(ait for a lar)-.1 F .777(ge set of \214le)-.18 F
.595(descriptors at once and at each \214le descriptor for a dif)148 672
R .596(ferent type of state. Additionally as a nice)-.25 F(side-ef)148
684 Q 1.734(fect one recei)-.25 F -.15(ve)-.25 G 4.234(st).15 G 1.734
(he number of \214le descriptors which causes the e)-4.234 F -.15(ve)
-.25 G 1.733(nt to be occurred).15 F(\(using)148 696 Q F4(BSD)3.625 E F0
1.125(semantics, i.e., when a \214le descriptor occurred in tw)3.625 F
3.625(os)-.1 G 1.125(ets it')-3.625 F 3.625(sc)-.55 G 1.125
(ounted twice\). The)-3.625 F(ar)148 708 Q .305
(guments correspond directly to the)-.18 F F2(select)2.805 E F0 .305
(\(2\) function ar)1.666 F .305(guments e)-.18 F .305
(xcept that there is no timeout)-.15 F(ar)148 720 Q
(gument \(because timeouts already can be handled via)-.18 E F3
(PTH_EVENT_TIME)2.5 E F0 -2.15 -.25(ev e)2.5 H(nts\).).25 E(perl v5.8.0)
72 768 Q 198.17(2003-02-17 12)167.62 F 0 Cg EP
%%Page: 13 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E 2.418(Example: `)148 84 R/F1 10/Courier@0 SF 2.418
(pth_event\(PTH_EVENT_SELECT, &rc, nfd, rfds, wfds, efds\))B F0(')A
(where)148 96 Q F1(rc)3.034 E F0 .534(has to be of type `)3.034 F F1
.534(int *)B F0(',)A F1(nfd)3.034 E F0 .533(has to be of type `)3.034 F
F1(int)A F0 3.033('a)C(nd)-3.033 E F1(rfds)3.033 E F0(,)A F1(wfds)3.033
E F0(and)3.033 E F1(efds)3.033 E F0(ha)148 108 Q 1.948 -.15(ve t)-.2 H
4.149(ob).15 G 4.149(eo)-4.149 G 4.149(ft)-4.149 G 1.649(ype `)-4.149 F
F1 1.649(fd_set *)B F0 4.149('\()C(see)-4.149 E/F2 10/Times-Italic@0 SF
(select)4.149 E F0 1.649
(\(2\)\). The number of occurred \214le descriptors are)1.666 F
(stored in)148 120 Q F1(rc)2.5 E F0(.)A F1(PTH_EVENT_SIGS)128 136.8 Q F0
.455(This is a signal set e)148 148.8 R -.15(ve)-.25 G .454(nt. The tw)
.15 F 2.954(oa)-.1 G .454(dditional ar)-2.954 F .454(guments ha)-.18 F
.754 -.15(ve t)-.2 H 2.954(ob).15 G 2.954(eap)-2.954 G .454
(ointer to a signal set \(type)-2.954 F(`)148 160.8 Q F1 1.206
(sigset_t *)B F0 1.206('\) and a pointer to a signal number v)B 1.206
(ariable \(type `)-.25 F F1 1.206(int *)B F0 3.706('\). This)B -2.15
-.25(ev e)3.706 H 1.206(nt w).25 F(aits)-.1 E .022
(until one of the signals in the signal set occurred.)148 172.8 R .021
(As a result the occurred signal number is stored)5.022 F 1.439
(in the second additional ar)148 184.8 R 1.439(gument. K)-.18 F 1.439
(eep in mind that the)-.25 F/F3 10/Times-Bold@0 SF(Pth)3.939 E F0 1.44
(scheduler doesn')3.94 F 3.94(tb)-.18 G 1.44(lock signals)-3.94 F
(automatically)148 196.8 Q 5.743(.S)-.65 G 3.243(ow)-5.743 G .743
(hen you w)-3.243 F .743(ant to w)-.1 F .743
(ait for a signal with this e)-.1 F -.15(ve)-.25 G .743(nt you').15 F
1.043 -.15(ve t)-.5 H 3.242(ob).15 G .742(lock it via)-3.242 F F2(sig-)
3.242 E(pr)148 208.8 Q(ocmask)-.45 E F0 1.405(\(2\) or it will be deli)
1.666 F -.15(ve)-.25 G 1.406(red without your notice. Example: `).15 F
F1(sigemptyset\(&set\);)A
(sigaddset\(&set, SIGINT\); pth_event\(PTH_EVENT_SIG, &set, &sig\);)148
220.8 Q F0('.)A F1(PTH_EVENT_TIME)128 237.6 Q F0 .389
(This is a time point e)148 249.6 R -.15(ve)-.25 G .389
(nt. The additional ar).15 F .389(gument has to be of type)-.18 F F1
(pth_time_t)2.888 E F0 .388(\(usually on-)2.888 F 1.071
(the-\215y generated via)148 261.6 R F2(pth_time)3.572 E F0 1.072
(\(3\)\). This e)1.666 F -.15(ve)-.25 G 1.072(nts w).15 F 1.072
(aits until the speci\214ed time point has elapsed.)-.1 F -.25(Ke)148
273.6 S .742(ep in mind that the v).25 F .742
(alue is an absolute time point and not an of)-.25 F .742
(fset. When you w)-.25 F .742(ant to w)-.1 F(ait)-.1 E 1.243
(for a speci\214ed amount of time, you')148 285.6 R 1.544 -.15(ve t)-.5
H 3.744(oa).15 G 1.244(dd the current time to the of)-3.744 F 1.244
(fset \(usually on-the-\215y)-.25 F(achie)148 297.6 Q -.15(ve)-.25 G
5.209(dv).15 G(ia)-5.209 E F2(pth_timeout)5.209 E F0 5.209
(\(3\)\). Example:)1.666 F(`)5.209 E F1 2.708
(pth_event\(PTH_EVENT_TIME, pth_time-)B(out\(2,0\)\))148 309.6 Q F0('.)A
F1(PTH_EVENT_MSG)128 326.4 Q F0 .289(This is a message port e)148 338.4
R -.15(ve)-.25 G .289(nt. The additional ar).15 F .29
(gument has to be of type)-.18 F F1(pth_msgport_t)2.79 E F0 2.79(.T)C
(his)-2.79 E -2.15 -.25(ev e)148 350.4 T .53(nts w).25 F .53
(aits until one or more messages were recei)-.1 F -.15(ve)-.25 G 3.03
(do).15 G 3.03(nt)-3.03 G .53(he speci\214ed message port.)-3.03 F
(Example:)5.53 E(`)148 362.4 Q F1(pth_event\(PTH_EVENT_MSG, mp\))A F0
('.)A F1(PTH_EVENT_TID)128 379.2 Q F0 4.508(This is a thread e)148 391.2
R -.15(ve)-.25 G 4.509(nt. The additional ar).15 F 4.509
(gument has to be of type)-.18 F F1(pth_t)7.009 E F0 9.509(.O)C 4.509
(ne of)-9.509 F F1(PTH_UNTIL_TID_NEW)148 403.2 Q F0(,)A F1
(PTH_UNTIL_TID_READY)12.224 E F0(,)A F1(PTH_UNTIL_TID_WAITING)12.223 E
F0(or)12.223 E F1(PTH_UNTIL_TID_DEAD)148 415.2 Q F0 .399
(has to be OR-ed into)2.899 F F2(spec)2.899 E F0 .4
(to specify on which state of the thread you)2.899 F -.1(wa)148 427.2 S
8.54(nt to w).1 F 11.04(ait. Example:)-.1 F(`)11.04 E F1
(pth_event\(PTH_EVENT_TID)A/F4 10/Symbol SF<ef>A F1(PTH_UNTIL_TID_DEAD,)
A(tid\))148 439.2 Q F0('.)A F1(PTH_EVENT_FUNC)128 456 Q F0 .929
(This is a custom callback function e)148 468 R -.15(ve)-.25 G .929
(nt. Three additional ar).15 F .929(guments ha)-.18 F 1.23 -.15(ve t)-.2
H 3.43(ob).15 G 3.43(eg)-3.43 G -2.15 -.25(iv e)-3.43 H 3.43(nw).25 G
.93(ith the)-3.43 F(follo)148 480 Q .27(wing types: `)-.25 F F1 .27
(int \(*\)\(void *\))B F0 .269(', `)B F1 .269(void *)B F0 2.769('a)C
.269(nd `)-2.769 F F1(pth_time_t)A F0 .269('. The \214rst is a function)
B 1.245(pointer to a check function and the second ar)148 492 R 1.245
(gument is a user)-.18 F 1.246(-supplied conte)-.2 F 1.246(xt v)-.15 F
1.246(alue which is)-.25 F .275
(passed to this function. The scheduler calls this function on a re)148
504 R .275(gular basis \(on his o)-.15 F .275(wn scheduler)-.25 F .041
(stack, so be v)148 516 R .042(ery careful!\) and the thread is k)-.15 F
.042(ept sleeping while the function returns)-.1 F F1(FALSE)2.542 E F0
2.542(.O)C(nce)-2.542 E 1.092(it returned)148 528 R F1(TRUE)3.592 E F0
1.092(the thread will be a)3.592 F -.1(wa)-.15 G -.1(ke).1 G 1.092
(ned. The check interv).1 F 1.092(al is de\214ned by the third ar)-.25 F
(gu-)-.18 E 1.508(ment, i.e., the check function is polled ag)148 540 R
1.509(ain not until this amount of time elapsed. Example:)-.05 F(`)148
552 Q F1(pth_event\(PTH_EVENT_FUNC, func, arg, pth_time\(0,500000\)\))A
F0('.)A(unsigned long)108 568.8 Q F3(pth_e)2.5 E -.1(ve)-.15 G
(nt_typeof).1 E F0(\(pth_e)A -.15(ve)-.25 G(nt_t).15 E F2 -.15(ev)2.5 G
F0(\);).15 E 3.237(This returns the type of e)128 580.8 R -.15(ve)-.25 G
(nt).15 E F2 -.15(ev)5.737 G F0 5.737(.I).15 G(t')-5.737 E 5.737(sac)
-.55 G 3.237(ombination of the describing)-5.737 F F1(PTH_EVENT_XX)5.737
E F0(and)5.737 E F1(PTH_UNTIL_XX)128 592.8 Q F0 -.25(va)2.793 G .293
(lue. This is especially useful to kno).25 F 2.793(ww)-.25 G .293
(hich ar)-2.793 F .293(guments ha)-.18 F .594 -.15(ve t)-.2 H 2.794(ob)
.15 G 2.794(es)-2.794 G .294(upplied to the)-2.794 F F2(pth_e)128 604.8
Q(vent_e)-.15 E(xtr)-.2 E(act)-.15 E F0(\(3\) function.)1.666 E(int)108
621.6 Q F3(pth_e)2.5 E -.1(ve)-.15 G(nt_extract).1 E F0(\(pth_e)A -.15
(ve)-.25 G(nt_t).15 E F2 -.15(ev)2.5 G F0 2.5(,.).15 G(..\);)-2.5 E
(When)128 633.6 Q F2(pth_e)2.778 E(vent)-.15 E F0 .278
(\(3\) is treated lik)1.666 F(e)-.1 E F2(sprintf)2.778 E F0 .278
(\(3\), then this function is)1.666 F F2(sscanf)2.778 E F0 .277
(\(3\), i.e., it is the in)1.666 F -.15(ve)-.4 G .277(rse oper).15 F(-)
-.2 E .2(ation of)128 645.6 R F2(pth_e)2.7 E(vent)-.15 E F0 .201
(\(3\). This means that it can be used to e)1.666 F .201
(xtract the ingredients of an e)-.15 F -.15(ve)-.25 G 2.701(nt. The).15
F(ingre-)2.701 E .093(dients are stored into v)128 657.6 R .093
(ariables which are gi)-.25 F -.15(ve)-.25 G 2.593(na).15 G 2.592(sp)
-2.593 G .092(ointers on the v)-2.592 F .092(ariable ar)-.25 F .092
(gument list.)-.18 F .092(Which point-)5.092 F 1.187(ers ha)128 669.6 R
1.487 -.15(ve t)-.2 H 3.688(ob).15 G 3.688(ep)-3.688 G 1.188
(resent depends on the e)-3.688 F -.15(ve)-.25 G 1.188
(nt type and has to be determined by the caller before via).15 F F2
(pth_e)128 681.6 Q(vent_typeof)-.15 E F0(\(3\).)1.666 E 1.96 -.8(To m)
128 699.6 T(ak).8 E 2.86(ei)-.1 G 2.86(tc)-2.86 G(lear)-2.86 E 2.859(,w)
-.4 G .359(hen you constructed)-2.859 F F2 -.15(ev)2.859 G F0 .359
(via `)3.009 F F1 .359(ev = pth_event\(PTH_EVENT_FD, fd\);)B F0 2.859
('y)C(ou)-2.859 E(ha)128 711.6 Q .603 -.15(ve t)-.2 H 2.803(oe).15 G
.303(xtract it via `)-2.953 F F1 .303(pth_event_extract\(ev, &fd\))B F0
.303(', etc. F)B .303(or multiple ar)-.15 F .303(guments of an e)-.18 F
-.15(ve)-.25 G(nt).15 E .567(the order of the pointer ar)128 723.6 R
.566(guments is the same as for)-.18 F F2(pth_e)3.066 E(vent)-.15 E F0
.566(\(3\). But al)1.666 F -.1(wa)-.1 G .566(ys k).1 F .566
(eep in mind that you)-.1 F(perl v5.8.0)72 768 Q 198.17(2003-02-17 13)
167.62 F 0 Cg EP
%%Page: 14 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E(ha)128 84 Q 1.595 -.15(ve t)-.2 H 3.795(oa).15 G -.1(lwa)-3.795 G
1.295(ys supply).1 F/F1 10/Times-Italic@0 SF(pointer)3.795 E(s)-.1 E F0
(to)3.795 E F1(variables)3.795 E F0 1.295(and these v)3.795 F 1.295
(ariables ha)-.25 F 1.595 -.15(ve t)-.2 H 3.795(ob).15 G 3.795(eo)-3.795
G 3.795(ft)-3.795 G 1.295(he same type as the)-3.795 F(ar)128 96 Q
(gument of)-.18 E F1(pth_e)2.5 E(vent)-.15 E F0(\(3\) required.)1.666 E
(pth_e)108 112.8 Q -.15(ve)-.25 G(nt_t).15 E/F2 10/Times-Bold@0 SF
(pth_e)2.5 E -.1(ve)-.15 G(nt_concat).1 E F0(\(pth_e)A -.15(ve)-.25 G
(nt_t).15 E F1 -.15(ev)2.5 G F0 2.5(,.).15 G(..\);)-2.5 E .051
(This concatenates one or more additional e)128 124.8 R -.15(ve)-.25 G
.051(nt rings to the e).15 F -.15(ve)-.25 G .051(nt ring).15 F F1 -.15
(ev)2.551 G F0 .051(and returns)2.701 F F1 -.15(ev)2.551 G F0 2.551(.T)
.15 G .051(he end of the)-2.551 F(ar)128 136.8 Q .14
(gument list has to be mark)-.18 F .14(ed with a)-.1 F/F3 10/Courier@0
SF(NULL)2.64 E F0(ar)2.641 E .141
(gument. Use this function to create real e)-.18 F -.15(ve)-.25 G .141
(nts rings out).15 F(of the single-e)128 148.8 Q -.15(ve)-.25 G
(nt rings created by).15 E F1(pth_e)2.5 E(vent)-.15 E F0(\(3\).)1.666 E
(pth_e)108 165.6 Q -.15(ve)-.25 G(nt_t).15 E F2(pth_e)2.5 E -.1(ve)-.15
G(nt_isolate).1 E F0(\(pth_e)A -.15(ve)-.25 G(nt_t).15 E F1 -.15(ev)2.5
G F0(\);).15 E .252(This isolates the e)128 177.6 R -.15(ve)-.25 G(nt)
.15 E F1 -.15(ev)2.751 G F0 .251(from possibly appended e)2.901 F -.15
(ve)-.25 G .251(nts in the e).15 F -.15(ve)-.25 G .251(nt ring.).15 F
.251(When in)5.251 F F1 -.15(ev)2.751 G F0 .251(only one e)2.901 F -.15
(ve)-.25 G(nt).15 E -.15(ex)128 189.6 S .111(ists, this returns).15 F F3
(NULL)2.611 E F0 2.611(.W)C .111(hen remaining e)-2.611 F -.15(ve)-.25 G
.111(nts e).15 F .111(xists, the)-.15 F 2.611(yf)-.15 G .111(orm a ne)
-2.611 F 2.611(we)-.25 G -.15(ve)-2.861 G .112
(nt ring which is returned.).15 F(pth_e)108 206.4 Q -.15(ve)-.25 G(nt_t)
.15 E F2(pth_e)2.5 E -.1(ve)-.15 G(nt_walk).1 E F0(\(pth_e)A -.15(ve)
-.25 G(nt_t).15 E F1 -.15(ev)2.5 G F0 2.5(,i).15 G(nt)-2.5 E F1(dir)2.5
E(ection)-.37 E F0(\);)A 3.182(This w)128 218.4 R 3.182(alks to the ne)
-.1 F 3.182(xt \(when)-.15 F F1(dir)5.682 E(ection)-.37 E F0(is)5.682 E
F3(PTH_WALK_NEXT)5.681 E F0 5.681(\)o)C 5.681(rp)-5.681 G(re)-5.681 E
(vie)-.25 E 3.181(ws \(when)-.25 F F1(dir)5.681 E(ection)-.37 E F0(is)
5.681 E F3(PTH_WALK_PREV)128 230.4 Q F0 4.986(\)e)C -.15(ve)-5.236 G
2.487(nt in the e).15 F -.15(ve)-.25 G 2.487(nt ring).15 F F1 -.15(ev)
4.987 G F0 2.487(and returns this ne)5.137 F 4.987(wr)-.25 G 2.487
(eached e)-4.987 F -.15(ve)-.25 G 2.487(nt. Additionally).15 F F3
(PTH_UNTIL_OCCURRED)128 242.4 Q F0 .388(can be OR-ed into)2.888 F F1
(dir)2.888 E(ection)-.37 E F0 .388(to w)2.888 F .388(alk to the ne)-.1 F
(xt/pre)-.15 E .387(vious occurred e)-.25 F -.15(ve)-.25 G .387(nt in)
.15 F(the ring)128 254.4 Q F1 -.15(ev)2.5 G F0(.).15 E(pth_status_t)108
271.2 Q F2(pth_e)2.5 E -.1(ve)-.15 G(nt_status).1 E F0(\(pth_e)A -.15
(ve)-.25 G(nt_t).15 E F1 -.15(ev)2.5 G F0(\);).15 E .552
(This returns the status of e)128 283.2 R -.15(ve)-.25 G(nt).15 E F1
-.15(ev)3.052 G F0 3.052(.T).15 G .552(his is a f)-3.052 F .552
(ast operation because only a tag on)-.1 F F1 -.15(ev)3.052 G F0 .552
(is check)3.202 F .552(ed which)-.1 F -.1(wa)128 295.2 S 2.53(se).1 G
.03(ither set or still not set by the scheduler)-2.53 F 2.53(.I)-.55 G
2.53(no)-2.53 G .03(ther w)-2.53 F .03(ords: This doesn')-.1 F 2.53(tc)
-.18 G .03(heck the e)-2.53 F -.15(ve)-.25 G .03(nt itself, it just).15
F 2.426(checks the last kno)128 307.2 R 2.426(wledge of the scheduler)
-.25 F 4.926(.T)-.55 G 2.426(he possible returned status codes are:)
-4.926 F F3(PTH_STA-)4.927 E(TUS_PENDING)128 319.2 Q F0(\(e)4.175 E -.15
(ve)-.25 G 1.675(nt is still pending\),).15 F F3(PTH_STATUS_OCCURRED)
4.175 E F0(\(e)4.175 E -.15(ve)-.25 G 1.675(nt successfully occurred\),)
.15 F F3(PTH_STATUS_FAILED)128 331.2 Q F0(\(e)2.5 E -.15(ve)-.25 G(nt f)
.15 E(ailed\).)-.1 E(int)108 348 Q F2(pth_e)2.5 E -.1(ve)-.15 G(nt_fr).1
E(ee)-.18 E F0(\(pth_e)A -.15(ve)-.25 G(nt_t).15 E F1 -.15(ev)2.5 G F0
2.5(,i).15 G(nt)-2.5 E F1(mode)2.5 E F0(\);)A .824
(This deallocates the e)128 360 R -.15(ve)-.25 G(nt).15 E F1 -.15(ev)
3.324 G F0(\(when)3.474 E F1(mode)3.325 E F0(is)3.325 E F3
(PTH_FREE_THIS)3.325 E F0 3.325(\)o)C 3.325(ra)-3.325 G .825(ll e)-3.325
F -.15(ve)-.25 G .825(nts appended to the e).15 F -.15(ve)-.25 G(nt).15
E(ring under)128 372 Q F1 -.15(ev)2.5 G F0(\(when)2.65 E F1(mode)2.5 E
F0(is)2.5 E F3(PTH_FREE_ALL)2.5 E F0(\).)A F2 -.25(Ke)108 394.8 S
(y-Based Storage).25 E F0 1.277(The follo)108 411.6 R 1.277
(wing functions pro)-.25 F 1.277
(vide thread-local storage through unique k)-.15 F -.15(ey)-.1 G 3.777
(ss).15 G 1.277(imilar to the)-3.777 F/F4 9/Times-Roman@0 SF(POSIX)3.776
E F2(Pthr)3.776 E(ead)-.18 E F4(API)108 423.6 Q F0 2.5(.U)C
(se this for thread speci\214c global data.)-2.5 E(int)108 440.4 Q F2
(pth_k)2.5 E(ey_cr)-.1 E(eate)-.18 E F0(\(pth_k)A -.15(ey)-.1 G(_t *).15
E F1 -.1(ke)C(y)-.2 E F0 2.5(,v)C(oid \(*)-2.7 E F1(func)A F0(\)\(v)A
(oid *\)\);)-.2 E .191(This created a ne)128 452.4 R 2.691(wu)-.25 G
.192(nique k)-2.691 F .492 -.15(ey a)-.1 H .192(nd stores it in).15 F F1
-.1(ke)2.692 G(y)-.2 E F0 5.192(.A)C(dditionally)-5.192 E F1(func)2.692
E F0 .192(can specify a destructor function)2.692 F
(which is called on the current threads termination with the)128 464.4 Q
F1 -.1(ke)2.5 G(y)-.2 E F0(.)A(int)108 481.2 Q F2(pth_k)2.5 E(ey_delete)
-.1 E F0(\(pth_k)A -.15(ey)-.1 G(_t).15 E F1 -.1(ke)2.5 G(y)-.2 E F0
(\);)A(This e)128 493.2 Q(xplicitly destro)-.15 E(ys a k)-.1 E -.15(ey)
-.1 G F1 -.1(ke)2.65 G(y)-.2 E F0(.)A(int)108 510 Q F2(pth_k)2.5 E
(ey_setdata)-.1 E F0(\(pth_k)A -.15(ey)-.1 G(_t).15 E F1 -.1(ke)2.5 G(y)
-.2 E F0 2.5(,c)C(onst v)-2.5 E(oid *)-.2 E F1(value)A F0(\);)A
(This stores)128 522 Q F1(value)2.5 E F0(under)2.5 E F1 -.1(ke)2.5 G(y)
-.2 E F0(.)A -.2(vo)108 538.8 S(id *).2 E F2(pth_k)A(ey_getdata)-.1 E F0
(\(pth_k)A -.15(ey)-.1 G(_t).15 E F1 -.1(ke)2.5 G(y)-.2 E F0(\);)A
(This retrie)128 550.8 Q -.15(ve)-.25 G 2.5(st).15 G(he v)-2.5 E
(alue under)-.25 E F1 -.1(ke)2.5 G(y)-.2 E F0(.)A F2(Message P)108 573.6
Q(ort Communication)-.2 E F0 1.45(The follo)108 590.4 R 1.45
(wing functions pro)-.25 F 1.45
(vide message ports which can be used for ef)-.15 F 1.45
(\214cient and \215e)-.25 F 1.45(xible inter)-.15 F(-thread)-.2 E
(communication.)108 602.4 Q(pth_msgport_t)108 619.2 Q F2(pth_msgport_cr)
2.5 E(eate)-.18 E F0(\(const char *)A F1(name)A F0(\);)A 1.055
(This returns a pointer to a ne)128 631.2 R 3.555(wm)-.25 G 1.055
(essage port. If name)-3.555 F F1(name)3.555 E F0 1.055(is not)3.555 F
F3(NULL)3.555 E F0 3.555(,t)C(he)-3.555 E F1(name)3.555 E F0 1.055
(can be used by)3.555 F .709(other threads via)128 643.2 R F1
(pth_msgport_\214nd)3.209 E F0 .708
(\(3\) to \214nd the message port in case the)1.666 F 3.208(yd)-.15 G
3.208(on)-3.208 G .708(ot kno)-3.208 F 3.208(wd)-.25 G .708(irectly the)
-3.208 F(pointer to the message port.)128 655.2 Q -.2(vo)108 672 S(id).2
E F2(pth_msgport_destr)2.5 E(oy)-.18 E F0(\(pth_msgport_t)A F1(mp)2.5 E
F0(\);)A .16(This destro)128 684 R .16(ys a message port)-.1 F F1(mp)
2.66 E F0 2.66(.B)C .16
(efore all pending messages on it are replied to their origin message)
-2.66 F(port.)128 696 Q(perl v5.8.0)72 768 Q 198.17(2003-02-17 14)167.62
F 0 Cg EP
%%Page: 15 15
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E(pth_msgport_t)108 84 Q/F1 10/Times-Bold@0 SF(pth_msgport_\214nd)
2.5 E F0(\(const char *)A/F2 10/Times-Italic@0 SF(name)A F0(\);)A
(This \214nds a message port in the system by)128 96 Q F2(name)2.5 E F0
(and returns the pointer to it.)2.5 E(int)108 112.8 Q F1
(pth_msgport_pending)2.5 E F0(\(pth_msgport_t)A F2(mp)2.5 E F0(\);)A
(This returns the number of pending messages on message port)128 124.8 Q
F2(mp)2.5 E F0(.)A(int)108 141.6 Q F1(pth_msgport_put)2.5 E F0
(\(pth_msgport_t)A F2(mp)2.5 E F0 2.5(,p)C(th_message_t *)-2.5 E F2(m)A
F0(\);)A(This puts \(or sends\) a message)128 153.6 Q F2(m)2.5 E F0
(to message port)2.5 E F2(mp)2.5 E F0(.)A(pth_message_t *)108 170.4 Q F1
(pth_msgport_get)A F0(\(pth_msgport_t)A F2(mp)2.5 E F0(\);)A .279
(This gets \(or recei)128 182.4 R -.15(ve)-.25 G .278
(s\) the top message from message port).15 F F2(mp)2.778 E F0 5.278(.I)C
.278(ncoming messages are al)-5.278 F -.1(wa)-.1 G .278(ys k).1 F .278
(ept in)-.1 F 2.5(aq)128 194.4 S
(ueue, so there can be more pending messages, of course.)-2.5 E(int)108
211.2 Q F1(pth_msgport_r)2.5 E(eply)-.18 E F0(\(pth_message_t *)A F2(m)A
F0(\);)A(This replies a message)128 223.2 Q F2(m)2.5 E F0
(to the message port of the sender)2.5 E(.)-.55 E F1(Thr)108 246 Q
(ead Cleanups)-.18 E F0(Per)108 262.8 Q(-thread cleanup functions.)-.2 E
(int)108 279.6 Q F1(pth_cleanup_push)2.5 E F0(\(v)A(oid \(*)-.2 E F2
(handler)A F0(\)\(v)A(oid *\), v)-.2 E(oid *)-.2 E F2(ar)A(g)-.37 E F0
(\);)A .65(This pushes the routine)128 291.6 R F2(handler)3.15 E F0 .651
(onto the stack of cleanup routines for the current thread.)3.15 F .651
(These rou-)5.651 F(tines are called in)128 303.6 Q/F3 9/Times-Roman@0
SF(LIFO)2.5 E F0(order when the thread terminates.)2.5 E(int)108 320.4 Q
F1(pth_cleanup_pop)2.5 E F0(\(int)A F2 -.2(ex)2.5 G(ecute).2 E F0(\);)A
.126(This pops the top-most routine from the stack of cleanup routines \
for the current thread. When)128 332.4 R F2 -.2(ex)2.625 G(ecute).2 E F0
(is)128 344.4 Q/F4 10/Courier@0 SF(TRUE)2.5 E F0
(the routine is additionally called.)2.5 E F1(Pr)108 367.2 Q(ocess F)
-.18 E(orking)-.25 E F0 1.192(The follo)108 384 R 1.192
(wing functions pro)-.25 F 1.192(vide some special support for process \
forking situations inside the threading)-.15 F(en)108 396 Q(vironment.)
-.4 E(int)108 412.8 Q F1(pth_atf)2.5 E(ork_push)-.25 E F0(\(v)A(oid \(*)
-.2 E F2(pr)A(epar)-.37 E(e)-.37 E F0(\)\(v)A(oid *\), v)-.2 E
(oid \(*\)\(v)-.2 E(oid *)-.2 E F2(par)A(ent)-.37 E F0(\), v)A
(oid \(*\)\(v)-.2 E(oid *)-.2 E F2 -.15(ch)C(ild).15 E F0(\), v)A(oid *)
-.2 E F2(ar)A(g)-.37 E F0(\);)A .366
(This function declares forking handlers to be called before and after)
128 424.8 R F2(pth_fork)2.866 E F0 .366(\(3\), in the conte)1.666 F .365
(xt of the)-.15 F 1.162(thread that called)128 436.8 R F2(pth_fork)3.662
E F0 1.162(\(3\). The)1.666 F F2(pr)3.662 E(epar)-.37 E(e)-.37 E F0
1.162(handler is called before)3.662 F F2(fork)3.663 E F0 1.163
(\(2\) processing commences.)1.666 F(The)128 448.8 Q F2(par)2.73 E(ent)
-.37 E F0 .23(handler is called)2.73 F(after)7.73 E F2(fork)2.73 E F0
.23(\(2\) processing completes in the parent process.)1.666 F(The)5.229
E F2 -.15(ch)2.729 G(ild).15 E F0(han-)2.729 E .579
(dler is called after)128 460.8 R F2(fork)3.079 E F0 .58(\(2\) processi\
ng completed in the child process. If no handling is desired at one)
1.666 F .14
(or more of these three points, the corresponding handler can be gi)128
472.8 R -.15(ve)-.25 G 2.64(na).15 G(s)-2.64 E F4(NULL)2.64 E F0 5.14
(.E)C .14(ach handler is called)-5.14 F(with)128 484.8 Q F2(ar)2.5 E(g)
-.37 E F0(as the ar)2.5 E(gument.)-.18 E .352(The order of calls to)128
502.8 R F2(pth_atfork_push)2.852 E F0 .352(\(3\) is signi\214cant. The)
1.666 F F2(par)2.852 E(ent)-.37 E F0(and)2.852 E F2 -.15(ch)2.852 G(ild)
.15 E F0 .352(handlers are called in the)2.852 F .342
(order in which the)128 514.8 R 2.842(yw)-.15 G .342
(ere established by calls to)-2.842 F F2(pth_atfork_push)2.841 E F0 .341
(\(3\), i.e.,)1.666 F F3(FIFO)2.841 E F0 2.841(.T)C(he)-2.841 E F2(pr)
2.841 E(epar)-.37 E(e)-.37 E F0 .341(fork han-)2.841 F
(dlers are called in the opposite order)128 526.8 Q 2.5(,i)-.4 G(.e.,)
-2.5 E F3(LIFO)2.5 E F0(.)A(int)108 543.6 Q F1(pth_atf)2.5 E(ork_pop)
-.25 E F0(\(v)A(oid\);)-.2 E .472(This remo)128 555.6 R -.15(ve)-.15 G
2.972(st).15 G .472(he top-most handlers on the forking handler stack w\
hich were established with the last)-2.972 F F2(pth_atfork_push)128
567.6 Q F0 1.905(\(3\) call. It returns)1.666 F F4(FALSE)4.405 E F0
1.905(when no more handlers couldn')4.405 F 4.405(tb)-.18 G 4.405(er)
-4.405 G(emo)-4.405 E -.15(ve)-.15 G 4.405(df).15 G 1.904(rom the)-4.405
F(stack.)128 579.6 Q(pid_t)108 596.4 Q F1(pth_f)2.5 E(ork)-.25 E F0(\(v)
A(oid\);)-.2 E 1.044(This is a v)128 608.4 R 1.044(ariant of)-.25 F F2
(fork)3.544 E F0 1.045(\(2\) with the dif)1.666 F 1.045
(ference that the current thread only is fork)-.25 F 1.045
(ed into a separate)-.1 F 1.519(process, i.e., in the parent process no\
thing changes while in the child process all threads are gone)128 620.4
R -.15(ex)128 632.4 S .922
(cept for the scheduler and the calling thread. When you really w).15 F
.922(ant to duplicate all threads in the)-.1 F 1.025
(current process you should use)128 644.4 R F2(fork)3.525 E F0 1.025
(\(2\) directly)1.666 F 3.525(.B)-.65 G 1.024
(ut this is usually not reasonable. Additionally this)-3.525 F
(function tak)128 656.4 Q(es care of forking handlers as established by)
-.1 E F2(pth_fork_push)2.5 E F0(\(3\).)1.666 E(perl v5.8.0)72 768 Q
198.17(2003-02-17 15)167.62 F 0 Cg EP
%%Page: 16 16
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E/F1 10/Times-Bold@0 SF(Synchr)108 84 Q(onization)-.18 E F0 1.146
(The follo)108 100.8 R 1.146(wing functions pro)-.25 F 1.146
(vide synchronization support via mutual e)-.15 F 1.147
(xclusion locks \()-.15 F F1(mutex)A F0 1.147(\), read-write)B .848
(locks \()108 112.8 R F1(rwlock)A F0 .848(\), condition v)B .848
(ariables \()-.25 F F1(cond)A F0 3.348(\)a)C .848(nd barriers \()-3.348
F F1(barrier)A F0 .848(\). K)B .848(eep in mind that in a non-preempti)
-.25 F -.15(ve)-.25 G .51(threading system lik)108 124.8 R(e)-.1 E F1
(Pth)3.01 E F0 .51(this might sound unnecessary at the \214rst look, be\
cause a thread isn')3.01 F 3.01(ti)-.18 G(nterrupted)-3.01 E .885
(by the system. Actually when you ha)108 136.8 R 1.185 -.15(ve a c)-.2 H
.885(ritical code section which doesn').15 F 3.385(tc)-.18 G .885
(ontain an)-3.385 F(y)-.15 E/F2 10/Times-Italic@0 SF(pth_xxx\(\))3.385 E
F0(func-)3.385 E(tions, you don')108 148.8 Q 2.5(tn)-.18 G(eed an)-2.5 E
2.5(ym)-.15 G(ute)-2.5 E 2.5(xt)-.15 G 2.5(op)-2.5 G
(rotect it, of course.)-2.5 E .291
(But when your critical code section contains an)108 165.6 R(y)-.15 E F2
(pth_xxx\(\))2.791 E F0 .292
(function the chance is high that these temporar)2.791 F(-)-.2 E .421
(ily switch to the scheduler)108 177.6 R 2.921(.A)-.55 G .421(nd this w)
-2.921 F .421(ay other threads can mak)-.1 F 2.92(ep)-.1 G .42
(rogress and enter your critical code sec-)-2.92 F .12(tion, too.)108
189.6 R .12(This is especially true for critical code sections which im\
plicitly or e)5.12 F .12(xplicitly use the e)-.15 F -.15(ve)-.25 G .12
(nt mech-).15 F(anism.)108 201.6 Q(int)108 218.4 Q F1(pth_mutex_init)2.5
E F0(\(pth_mute)A(x_t *)-.15 E F2(mute)A(x)-.2 E F0(\);)A 1.22
(This dynamically initializes a mute)128 230.4 R 3.719(xv)-.15 G 1.219
(ariable of type `)-3.969 F/F3 10/Courier@0 SF(pth_mutex_t)A F0 3.719
('. Alternati)B -.15(ve)-.25 G 1.219(ly one can also).15 F
(use static initialization via `)128 242.4 Q F3
(pth_mutex_t mutex = PTH_MUTEX_INIT)A F0('.)A(int)108 259.2 Q F1
(pth_mutex_acquir)2.5 E(e)-.18 E F0(\(pth_mute)A(x_t *)-.15 E F2(mute)A
(x)-.2 E F0 2.5(,i)C(nt)-2.5 E F2(try)2.5 E F0 2.5(,p)C(th_e)-2.5 E -.15
(ve)-.25 G(nt_t).15 E F2 -.15(ev)2.5 G F0(\);).15 E 1.227
(This acquires a mute)128 271.2 R(x)-.15 E F2(mute)3.727 E(x)-.2 E F0
6.227(.I)C 3.727(ft)-6.227 G 1.227(he mute)-3.727 F 3.727(xi)-.15 G
3.728(sa)-3.727 G 1.228(lready lock)-3.728 F 1.228
(ed by another thread, the current threads)-.1 F -.15(exe)128 283.2 S
.002(cution is suspended until the mute).15 F 2.502(xi)-.15 G 2.502(su)
-2.502 G(nlock)-2.502 E .002(ed ag)-.1 F .002(ain or additionally the e)
-.05 F .002(xtra e)-.15 F -.15(ve)-.25 G .002(nts in).15 F F2 -.15(ev)
2.501 G F0(occurred)2.651 E(\(when)128 295.2 Q F2 -.15(ev)2.752 G F0
.252(is not)2.902 F F3(NULL)2.752 E F0 2.752(\). Recursi)B .552 -.15
(ve l)-.25 H .252(ocking is e).15 F .252
(xplicitly supported, i.e., a thread is allo)-.15 F .253
(wed to acquire a)-.25 F(mute)128 307.2 Q 3.226(xm)-.15 G .726(ore than\
 once before its released. But it then also has be released the same nu\
mber of times)-3.226 F .159(until the mute)128 319.2 R 2.659(xi)-.15 G
2.659(sa)-2.659 G -.05(ga)-2.659 G .159(in lockable by others.).05 F
(When)5.159 E F2(try)2.659 E F0(is)2.659 E F3(TRUE)2.66 E F0 .16
(this function ne)2.66 F -.15(ve)-.25 G 2.66(rs).15 G .16(uspends e)
-2.66 F -.15(xe)-.15 G(cution.).15 E(Instead it returns)128 331.2 Q F3
(FALSE)2.5 E F0(with)2.5 E F3(errno)2.5 E F0(set to)2.5 E F3(EBUSY)2.5 E
F0(.)A(int)108 348 Q F1(pth_mutex_r)2.5 E(elease)-.18 E F0(\(pth_mute)A
(x_t *)-.15 E F2(mute)A(x)-.2 E F0(\);)A .286
(This decrements the recursion locking count on)128 360 R F2(mute)2.785
E(x)-.2 E F0 .285(and when it is zero it releases the mute)2.785 F(x)
-.15 E F2(mute)2.785 E(x)-.2 E F0(.)A(int)108 376.8 Q F1
(pth_rwlock_init)2.5 E F0(\(pth_rwlock_t *)A F2(rwloc)A(k)-.2 E F0(\);)A
.696(This dynamically initializes a read-write lock v)128 388.8 R .697
(ariable of type `)-.25 F F3(pth_rwlock_t)A F0 3.197('. Alternati)B -.15
(ve)-.25 G .697(ly one).15 F(can also use static initialization via `)
128 400.8 Q F3(pth_rwlock_t rwlock = PTH_RWLOCK_INIT)A F0('.)A(int)108
417.6 Q F1(pth_rwlock_acquir)2.5 E(e)-.18 E F0(\(pth_rwlock_t *)A F2
(rwloc)A(k)-.2 E F0 2.5(,i)C(nt)-2.5 E F2(op)2.5 E F0 2.5(,i)C(nt)-2.5 E
F2(try)2.5 E F0 2.5(,p)C(th_e)-2.5 E -.15(ve)-.25 G(nt_t).15 E F2 -.15
(ev)2.5 G F0(\);).15 E 5.164(This acquires a read-only \(when)128 429.6
R F2(op)7.664 E F0(is)7.664 E F3(PTH_RWLOCK_RD)7.664 E F0 7.664(\)o)C
7.664(rar)-7.664 G 5.164(ead-write \(when)-7.664 F F2(op)7.663 E F0(is)
7.663 E F3(PTH_RWLOCK_RW)128 441.6 Q F0 3.525(\)l)C(ock)-3.525 E F2
(rwloc)3.525 E(k)-.2 E F0 3.525(.W)C 1.025(hen the lock is only lock)
-3.525 F 1.025(ed by other threads in read-only mode,)-.1 F .334
(the lock succeeds.)128 453.6 R .333(But when one thread holds a read-w\
rite lock, all locking attempts suspend the cur)5.333 F(-)-.2 E .864
(rent thread until this lock is released ag)128 465.6 R .864
(ain. Additionally in)-.05 F F2 -.15(ev)3.364 G F0 -2.15 -.25(ev e)3.514
H .864(nts can be gi).25 F -.15(ve)-.25 G 3.364(nt).15 G 3.364(ol)-3.364
G .864(et the locking)-3.364 F .324(timeout, etc. When)128 477.6 R F2
(try)2.824 E F0(is)2.824 E F3(TRUE)2.824 E F0 .323(this function ne)
2.823 F -.15(ve)-.25 G 2.823(rs).15 G .323(uspends e)-2.823 F -.15(xe)
-.15 G .323(cution. Instead it returns).15 F F3(FALSE)2.823 E F0(with)
2.823 E F3(errno)128 489.6 Q F0(set to)2.5 E F3(EBUSY)2.5 E F0(.)A(int)
108 506.4 Q F1(pth_rwlock_r)2.5 E(elease)-.18 E F0(\(pth_rwlock_t *)A F2
(rwloc)A(k)-.2 E F0(\);)A(This releases a pre)128 518.4 Q
(viously acquired \(read\255only or read\255write\) lock.)-.25 E(int)108
535.2 Q F1(pth_cond_init)2.5 E F0(\(pth_cond_t *)A F2(cond)A F0(\);)A
.748(This dynamically initializes a condition v)128 547.2 R .748
(ariable v)-.25 F .748(ariable of type `)-.25 F F3(pth_cond_t)A F0 3.249
('. Alternati)B -.15(ve)-.25 G .749(ly one).15 F
(can also use static initialization via `)128 559.2 Q F3
(pth_cond_t cond = PTH_COND_INIT)A F0('.)A(int)108 576 Q F1
(pth_cond_await)2.5 E F0(\(pth_cond_t *)A F2(cond)A F0 2.5(,p)C(th_mute)
-2.5 E(x_t *)-.15 E F2(mute)A(x)-.2 E F0 2.5(,p)C(th_e)-2.5 E -.15(ve)
-.25 G(nt_t).15 E F2 -.15(ev)2.5 G F0(\);).15 E .65(This a)128 588 R -.1
(wa)-.15 G .65(its a condition situation. The caller has to follo).1 F
3.15(wt)-.25 G .65(he semantics of the)-3.15 F/F4 9/Times-Roman@0 SF
(POSIX)3.15 E F0 .649(condition v)3.15 F(ari-)-.25 E(ables:)128 600 Q F2
(mute)3.469 E(x)-.2 E F0 .969
(has to be acquired before this function is called. The e)3.469 F -.15
(xe)-.15 G .97(cution of the current thread is).15 F .771
(then suspended either until the e)128 612 R -.15(ve)-.25 G .771(nts in)
.15 F F2 -.15(ev)3.271 G F0 .771(occurred \(when)3.421 F F2 -.15(ev)
3.271 G F0 .77(is not)3.42 F F3(NULL)3.27 E F0 3.27(\)o)C(r)-3.27 E F2
(cond)3.27 E F0 -.1(wa)3.27 G 3.27(sn).1 G .77(oti\214ed by)-3.27 F
2.298(another thread via)128 624 R F2(pth_cond_notify)4.798 E F0 4.798
(\(3\). While)1.666 F 2.298(the thread is w)4.798 F(aiting,)-.1 E F2
(mute)4.798 E(x)-.2 E F0 2.298(is released. Before it)4.798 F(returns)
128 636 Q F2(mute)2.5 E(x)-.2 E F0(is reacquired.)2.5 E(int)108 652.8 Q
F1(pth_cond_notify)2.5 E F0(\(pth_cond_t *)A F2(cond)A F0 2.5(,i)C(nt)
-2.5 E F2(br)2.5 E(oadcast)-.45 E F0(\);)A 1.013
(This noti\214ed one or all threads which are w)128 664.8 R 1.013
(aiting on)-.1 F F2(cond)3.513 E F0 6.013(.W)C(hen)-6.013 E F2(br)3.513
E(oadcast)-.45 E F0(is)3.513 E F3(TRUE)3.513 E F0 1.013(all thread are)
3.513 F(noti\214ed, else only a single \(unspeci\214ed\) one.)128 676.8
Q(int)108 693.6 Q F1(pth_barrier_init)2.5 E F0(\(pth_barrier_t *)A F2
(barrier)A F0 2.5(,i)C(nt)-2.5 E F2(thr)2.5 E(eshold)-.37 E F0(\);)A
.069(This dynamically initializes a barrier v)128 705.6 R .069
(ariable of type `)-.25 F F3(pth_barrier_t)A F0 2.569('. Alternati)B
-.15(ve)-.25 G .07(ly one can also).15 F .015
(use static initialization via `)128 717.6 R F3 .014
(pth_barrier_t barrier = PTH_BARRIER_INIT\()B F2(thr)A(eadhold)-.37 E F3
(\))A F0('.)A(perl v5.8.0)72 768 Q 198.17(2003-02-17 16)167.62 F 0 Cg EP
%%Page: 17 17
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E(int)108 84 Q/F1 10/Times-Bold@0 SF(pth_barrier_r)2.5 E(each)-.18 E
F0(\(pth_barrier_t *)A/F2 10/Times-Italic@0 SF(barrier)A F0(\);)A 1.014
(This function reaches a barrier)128 96 R F2(barrier)3.514 E F0 3.514
(.I)C 3.514(ft)-3.514 G 1.015
(his is the last thread \(as speci\214ed by)-3.514 F F2(thr)3.515 E
(eshold)-.37 E F0 1.015(on init of)3.515 F F2(barrier)128 108 Q F0 2.515
(\)a)C .015(ll threads are a)-2.515 F -.1(wa)-.15 G -.1(ke).1 G 2.515
(ned. Else).1 F .014
(the current thread is suspended until the last thread reached the)2.515
F .22(barrier and this w)128 120 R .22(ay a)-.1 F -.1(wa)-.15 G -.1(ke)
.1 G 2.72(sa).1 G .22(ll threads. The function returns \(beside)-2.72 F
/F3 10/Courier@0 SF(FALSE)2.72 E F0 .22(on error\) the v)2.72 F(alue)
-.25 E F3(TRUE)2.72 E F0 3.338(for an)128 132 R 5.838(yt)-.15 G 3.338(h\
read which neither reached the barrier as the \214rst nor the last thre\
ad;)-5.838 F F3(PTH_BAR-)5.838 E(RIER_HEADLIGHT)128 144 Q F0 2.207
(for the thread which reached the barrier as the \214rst thread and)
4.706 F F3(PTH_BAR-)4.707 E(RIER_TAILLIGHT)128 156 Q F0
(for the thread which reached the barrier as the last thread.)2.5 E F1
(User)108 178.8 Q(-Space Context)-.37 E F0 1.414(The follo)108 195.6 R
1.413(wing functions pro)-.25 F 1.413
(vide a stand-alone sub-API for user)-.15 F 1.413(-space conte)-.2 F
1.413(xt switching. It internally is)-.15 F .26
(based on the same underlying machine conte)108 207.6 R .26
(xt switching mechanism the threads in)-.15 F/F4 9/Times-Bold@0 SF(GNU)
2.76 E F1(Pth)2.76 E F0 .261(are based on.)2.76 F 4.297
(Hence these functions you can use for implementing your o)108 219.6 R
4.297(wn simple user)-.25 F 4.297(-space threads. The)-.2 F F3
(pth_uctx_t)108 231.6 Q F0(conte)2.5 E(xt is some)-.15 E
(what modeled after)-.25 E/F5 9/Times-Roman@0 SF(POSIX)2.5 E F2(uconte)
2.5 E(xt)-.2 E F0(\(3\).)1.666 E 2.577
(The time required to create \(via)108 248.4 R F2(pth_uctx_mak)5.077 E
(e)-.1 E F0 2.578(\(3\)\) a user)1.666 F 2.578(-space conte)-.2 F 2.578
(xt can range from just a fe)-.15 F(w)-.25 E .425(microseconds up to a \
more dramatical time \(depending on the machine conte)108 260.4 R .424
(xt switching method which is)-.15 F -.2(av)108 272.4 S .537
(ailable on the platform\). On the other hand, the ra)-.05 F 3.038(wp)
-.15 G .538(erformance in switching the user)-3.038 F .538(-space conte)
-.2 F .538(xts is)-.15 F(al)108 284.4 Q -.1(wa)-.1 G .46(ys v).1 F .46
(ery good \(nearly independent of the used machine conte)-.15 F .459
(xt switching method\). F)-.15 F .459(or instance, on an)-.15 F 1.101
(Intel Pentium-III)108 296.4 R F5(CPU)3.601 E F0 1.102
(with 800Mhz running under FreeBSD 4 one usually achie)3.601 F -.15(ve)
-.25 G 3.602(sa).15 G 1.102(bout 260,000 user)-3.602 F(-)-.2 E
(space conte)108 308.4 Q(xt switches \(via)-.15 E F2(pth_uctx_switc)2.5
E(h)-.15 E F0(\(3\)\) per second.)1.666 E(int)108 325.2 Q F1
(pth_uctx_cr)2.5 E(eate)-.18 E F0(\(pth_uctx_t *)A F2(uctx)A F0(\);)A
1.171(This function creates a user)128 337.2 R 1.171(-space conte)-.2 F
1.171(xt and stores it into)-.15 F F2(uctx)3.671 E F0 6.17(.T)C 1.17
(here is still no underlying user)-6.17 F(-)-.2 E .229(space conte)128
349.2 R .229(xt con\214gured. Y)-.15 F .229(ou still ha)-1.1 F .529 -.15
(ve t)-.2 H 2.729(od).15 G 2.729(ot)-2.729 G .229(his with)-2.729 F F2
(pth_uctx_mak)2.729 E(e)-.1 E F0 .229(\(3\) or)1.666 F F2(pth_uctx_set)
2.729 E F0 .23(\(3\). On suc-)1.666 F(cess, this function returns)128
361.2 Q F3(TRUE)2.5 E F0 2.5(,e)C(lse)-2.5 E F3(FALSE)2.5 E F0(.)A(int)
108 378 Q F1(pth_uctx_mak)7.01 E(e)-.1 E F0(\(pth_uctx_t)A F2(uctx)7.01
E F0 7.01(,c)C 4.51(har *)-7.01 F F2(sk_addr)A F0 7.01(,s)C(ize_t)-7.01
E F2(sk_size)7.01 E F0 7.01(,c)C 4.51(onst sigset_t *)-7.01 F F2
(sigmask)A F0 7.01(,v)C(oid)-7.21 E(\(*)108 390 Q F2(start_func)A F0
(\)\(v)A(oid *\), v)-.2 E(oid *)-.2 E F2(start_ar)A(g)-.37 E F0 2.5(,p)C
(th_uctx_t)-2.5 E F2(uctx_after)2.5 E F0(\);)A(This function mak)128 402
Q(es a ne)-.1 E 2.5(wu)-.25 G(ser)-2.5 E(-space conte)-.2 E(xt in)-.15 E
F2(uctx)2.5 E F0(which will operate on the run-time stack)2.5 E F2
(sk_addr)2.5 E F0 .249(\(which is of maximum size)128 414 R F2(sk_size)
2.749 E F0 .249(\), with the signals in)B F2(sigmask)2.749 E F0(block)
2.75 E .25(ed \(if)-.1 F F2(sigmask)2.75 E F0 .25(is not)2.75 F F3(NULL)
2.75 E F0 2.75(\)a)C(nd)-2.75 E .266(starting to e)128 426 R -.15(xe)
-.15 G .266(cute with the call).15 F F2(start_func)2.765 E F0(\()A F2
(start_ar)A(g)-.37 E F0 .265(\). If)B F2(sk_addr)2.765 E F0(is)2.765 E
F3(NULL)2.765 E F0 2.765(,as)C .265(tack is dynamically allo-)-2.765 F
.824(cated. The stack size)128 438 R F2(sk_size)3.324 E F0 .824
(has to be at least 16384 \(16KB\). If the start function)3.324 F F2
(start_func)3.325 E F0(returns)3.325 E(and)128 450 Q F2(uctx_after)2.757
E F0 .257(is not)2.757 F F3(NULL)2.757 E F0 2.756(,a)C 2.756(ni)-2.756 G
.256(mplicit user)-2.756 F .256(-space conte)-.2 F .256
(xt switch to this conte)-.15 F .256(xt is performed. Else \(if)-.15 F
F2(uctx_after)128 462 Q F0(is)3.365 E F3(NULL)3.365 E F0 3.365(\)t)C
.865(he process is terminated with)-3.365 F F2 -.2(ex)3.365 G(it).2 E F0
.865(\(3\). This function is some)1.666 F .866(what modeled after)-.25 F
F5(POSIX)128 474 Q F2(mak)2.5 E(econte)-.1 E(xt)-.2 E F0
(\(3\). On success, this function returns)1.666 E F3(TRUE)2.5 E F0 2.5
(,e)C(lse)-2.5 E F3(FALSE)2.5 E F0(.)A(int)108 490.8 Q F1(pth_uctx_sa)
2.5 E -.1(ve)-.25 G F0(\(pth_uctx_t).1 E F2(uctx)2.5 E F0(\);)A 5.62
(This function sa)128 502.8 R -.15(ve)-.2 G 8.12(st).15 G 5.62
(he current user)-8.12 F 5.62(-space conte)-.2 F 5.62(xt in)-.15 F F2
(uctx)8.12 E F0 5.62(for later restoring by either)8.12 F F2(pth_uctx_r)
128 514.8 Q(estor)-.37 E(e)-.37 E F0 1.09(\(3\) or)1.666 F F2
(pth_uctx_switc)3.59 E(h)-.15 E F0 1.091(\(3\). This function is some)
1.666 F 1.091(what modeled after)-.25 F F5(POSIX)3.591 E F2 -.1(ge)3.591
G(tcon-).1 E(te)128 526.8 Q(xt)-.2 E F0(\(3\). If)1.666 E F2(uctx)2.5 E
F0(is)2.5 E F3(NULL)2.5 E F0(,)A F3(FALSE)2.5 E F0
(is returned instead of)2.5 E F3(TRUE)2.5 E F0 2.5(.T)C
(his is the only error possible.)-2.5 E(int)108 543.6 Q F1(pth_uctx_r)
2.5 E(estor)-.18 E(e)-.18 E F0(\(pth_uctx_t)A F2(uctx)2.5 E F0(\);)A
.994(This function restores the current user)128 555.6 R .993
(-space conte)-.2 F .993(xt from)-.15 F F2(uctx)3.493 E F0 3.493(,w)C
.993(hich pre)-3.493 F .993(viously had to be set with)-.25 F(either)128
567.6 Q F2(pth_uctx_mak)2.579 E(e)-.1 E F0 .079(\(3\) or)1.666 F F2
(pth_uctx_save)2.579 E F0 .08(\(3\). This function is some)1.666 F .08
(what modeled after)-.25 F F5(POSIX)2.58 E F2(setcon-)2.58 E(te)128
579.6 Q(xt)-.2 E F0 1.215(\(3\). If)1.666 F F2(uctx)3.715 E F0(is)3.715
E F3(NULL)3.715 E F0(or)3.715 E F2(uctx)3.715 E F0 1.215(contains no v)
3.715 F 1.215(alid user)-.25 F 1.214(-space conte)-.2 F(xt,)-.15 E F3
(FALSE)3.714 E F0 1.214(is returned instead of)3.714 F F3(TRUE)128 591.6
Q F0 2.5(.T)C(hese are the only errors possible.)-2.5 E(int)108 608.4 Q
F1(pth_uctx_switch)2.5 E F0(\(pth_uctx_t)A F2(uctx_fr)2.5 E(om)-.45 E F0
2.5(,p)C(th_uctx_t)-2.5 E F2(uctx_to)2.5 E F0(\);)A 3.816
(This function sa)128 620.4 R -.15(ve)-.2 G 6.317(st).15 G 3.817
(he current user)-6.317 F 3.817(-space conte)-.2 F 3.817(xt in)-.15 F F2
(uctx_fr)6.317 E(om)-.45 E F0 3.817(for later restoring by either)6.317
F F2(pth_uctx_r)128 632.4 Q(estor)-.37 E(e)-.37 E F0 .831(\(3\) or)1.666
F F2(pth_uctx_switc)3.331 E(h)-.15 E F0 .831(\(3\) and restores the ne)
1.666 F 3.331(wu)-.25 G(ser)-3.331 E .831(-space conte)-.2 F .83
(xt from)-.15 F F2(uctx)3.33 E F0 3.33(,w)C(hich)-3.33 E(pre)128 644.4 Q
.076(viously had to be set with either)-.25 F F2(pth_uctx_mak)2.577 E(e)
-.1 E F0 .077(\(3\) or)1.666 F F2(pth_uctx_save)2.577 E F0 .077
(\(3\). This function is some)1.666 F(what)-.25 E .199(modeled after)128
656.4 R F5(POSIX)2.699 E F2(swapconte)2.699 E(xt)-.2 E F0 .198
(\(3\). If)1.666 F F2(uctx_fr)2.698 E(om)-.45 E F0(or)2.698 E F2
(uctx_to)2.698 E F0(are)2.698 E F3(NULL)2.698 E F0 .198(or if)2.698 F F2
(uctx_to)2.698 E F0 .198(contains no v)2.698 F(alid)-.25 E(user)128
668.4 Q(-space conte)-.2 E(xt,)-.15 E F3(FALSE)2.5 E F0
(is returned instead of)2.5 E F3(TRUE)2.5 E F0 2.5(.T)C
(hese are the only errors possible.)-2.5 E(int)108 685.2 Q F1
(pth_uctx_destr)2.5 E(oy)-.18 E F0(\(pth_uctx_t)A F2(uctx)2.5 E F0(\);)A
1.484(This function destro)128 697.2 R 1.484(ys the user)-.1 F 1.484
(-space conte)-.2 F 1.484(xt in)-.15 F F2(uctx)3.984 E F0 3.984(.T)C
1.485(he run-time stack associated with the user)-3.984 F(-)-.2 E 1.706
(space conte)128 709.2 R 1.706(xt is deallocated only if it w)-.15 F
1.706(as gi)-.1 F -.15(ve)-.25 G 4.206(nb).15 G 4.206(yt)-4.206 G 1.706
(he application \(see)-4.206 F F2(sk_addr)4.206 E F0(of)4.206 E F2
(pth_uctx_cr)4.206 E(e-)-.37 E(ate)128 721.2 Q F0 2.5(\(3\)\). If)1.666
F F2(uctx)2.5 E F0(is)2.5 E F3(NULL)2.5 E F0(,)A F3(FALSE)2.5 E F0
(is returned instead of)2.5 E F3(TRUE)2.5 E F0 2.5(.T)C
(his is the only error possible.)-2.5 E(perl v5.8.0)72 768 Q 198.17
(2003-02-17 17)167.62 F 0 Cg EP
%%Page: 18 18
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E/F1 10/Times-Bold@0 SF(Generalized)108 84 Q/F2 9/Times-Bold@0 SF
(POSIX)2.5 E F1(Replacement)2.5 E F2(API)2.5 E F0 .558(The follo)108
100.8 R .558
(wing functions are generalized replacements functions for the)-.25 F/F3
9/Times-Roman@0 SF .808(POSIX API)3.058 F F0 3.058(,i)C .558(.e., the)
-3.058 F 3.058(ya)-.15 G .558(re similar to)-3.058 F .41
(the functions under `)108 112.8 R F1(Standard)A F2(POSIX)2.91 E F1
(Replacement)2.91 E F2(API)2.91 E F0 2.91('b)C .41(ut all ha)-3.11 F .71
-.15(ve a)-.2 H 2.91(na).15 G .41(dditional e)-2.91 F -.15(ve)-.25 G
.409(nt ar).15 F .409(gument which)-.18 F
(can be used for timeouts, etc.)108 124.8 Q(int)108 141.6 Q F1
(pth_sigwait_e)2.5 E(v)-.15 E F0(\(const sigset_t *)A/F4 10
/Times-Italic@0 SF(set)A F0 2.5(,i)C(nt *)-2.5 E F4(sig)A F0 2.5(,p)C
(th_e)-2.5 E -.15(ve)-.25 G(nt_t).15 E F4 -.15(ev)2.5 G F0(\);).15 E
.826(This is equal to)128 153.6 R F4(pth_sigwait)3.326 E F0 .826
(\(3\) \(see belo)1.666 F .826(w\), b)-.25 F .826
(ut has an additional e)-.2 F -.15(ve)-.25 G .827(nt ar).15 F(gument)
-.18 E F4 -.15(ev)3.327 G F0 3.327(.W).15 G(hen)-3.327 E F4(pth_sig-)
3.327 E(wait)128 165.6 Q F0 .871(\(3\) suspends the current threads e)
1.666 F -.15(xe)-.15 G .871(cution it usually only uses the signal e).15
F -.15(ve)-.25 G .871(nt on).15 F F4(set)3.371 E F0 .87(to a)3.37 F -.1
(wa)-.15 G -.1(ke).1 G(.).1 E -.4(Wi)128 177.6 S .29
(th this function an).4 F 2.79(yn)-.15 G .29(umber of e)-2.79 F .29
(xtra e)-.15 F -.15(ve)-.25 G .291(nts can be used to a).15 F -.1(wa)
-.15 G .491 -.1(ke t).1 H .291(he current thread \(remember that).1 F F4
-.15(ev)128 189.6 S F0(actually is an e)2.65 E -.15(ve)-.25 G(nt).15 E
F4(ring)2.5 E F0(\).)A(int)108 206.4 Q F1(pth_connect_e)2.5 E(v)-.15 E
F0(\(int)A F4(s)2.5 E F0 2.5(,c)C(onst struct sockaddr *)-2.5 E F4(addr)
A F0 2.5(,s)C(ocklen_t)-2.5 E F4(addrlen)2.5 E F0 2.5(,p)C(th_e)-2.5 E
-.15(ve)-.25 G(nt_t).15 E F4 -.15(ev)2.5 G F0(\);).15 E .495
(This is equal to)128 218.4 R F4(pth_connect)2.995 E F0 .495
(\(3\) \(see belo)1.666 F .495(w\), b)-.25 F .495
(ut has an additional e)-.2 F -.15(ve)-.25 G .495(nt ar).15 F(gument)
-.18 E F4 -.15(ev)2.995 G F0 2.995(.W).15 G(hen)-2.995 E F4(pth_con-)
2.994 E(nect)128 230.4 Q F0 .599(\(3\) suspends the current threads e)
1.666 F -.15(xe)-.15 G .599(cution it usually only uses the I/O e).15 F
-.15(ve)-.25 G .599(nt on).15 F F4(s)3.099 E F0 .599(to a)3.099 F -.1
(wa)-.15 G -.1(ke).1 G 3.1(.W).1 G(ith)-3.5 E .93(this function an)128
242.4 R 3.43(yn)-.15 G .93(umber of e)-3.43 F .93(xtra e)-.15 F -.15(ve)
-.25 G .93(nts can be used to a).15 F -.1(wa)-.15 G 1.13 -.1(ke t).1 H
.93(he current thread \(remember that).1 F F4 -.15(ev)3.43 G F0
(actually is an e)128 254.4 Q -.15(ve)-.25 G(nt).15 E F4(ring)2.5 E F0
(\).)A(int)108 271.2 Q F1(pth_accept_e)2.5 E(v)-.15 E F0(\(int)A F4(s)
2.5 E F0 2.5(,s)C(truct sockaddr *)-2.5 E F4(addr)A F0 2.5(,s)C
(ocklen_t *)-2.5 E F4(addrlen)A F0 2.5(,p)C(th_e)-2.5 E -.15(ve)-.25 G
(nt_t).15 E F4 -.15(ev)2.5 G F0(\);).15 E 3.605(This is equal to)128
283.2 R F4(pth_accept)6.105 E F0 3.605(\(3\) \(see belo)1.666 F 3.605
(w\), b)-.25 F 3.605(ut has an additional e)-.2 F -.15(ve)-.25 G 3.606
(nt ar).15 F(gument)-.18 E F4 -.15(ev)6.106 G F0 6.106(.W).15 G(hen)
-6.106 E F4(pth_accept)128 295.2 Q F0 .317
(\(3\) suspends the current threads e)1.666 F -.15(xe)-.15 G .316
(cution it usually only uses the I/O e).15 F -.15(ve)-.25 G .316(nt on)
.15 F F4(s)2.816 E F0 .316(to a)2.816 F -.1(wa)-.15 G -.1(ke).1 G(.).1 E
-.4(Wi)128 307.2 S .29(th this function an).4 F 2.79(yn)-.15 G .29
(umber of e)-2.79 F .29(xtra e)-.15 F -.15(ve)-.25 G .291
(nts can be used to a).15 F -.1(wa)-.15 G .491 -.1(ke t).1 H .291
(he current thread \(remember that).1 F F4 -.15(ev)128 319.2 S F0
(actually is an e)2.65 E -.15(ve)-.25 G(nt).15 E F4(ring)2.5 E F0(\).)A
(int)108 336 Q F1(pth_select_e)2.5 E(v)-.15 E F0(\(int)A F4(nfd)2.5 E F0
2.5(,f)C(d_set *)-2.5 E F4(rfds)A F0 2.5(,f)C(d_set *)-2.5 E F4(wfds)A
F0 2.5(,f)C(d_set *)-2.5 E F4(efds)A F0 2.5(,s)C(truct time)-2.5 E -.25
(va)-.25 G 2.5(l*).25 G F4(timeout)-2.5 E F0 2.5(,p)C(th_e)-2.5 E -.15
(ve)-.25 G(nt_t).15 E F4 -.15(ev)2.5 G F0(\);).15 E 3.844
(This is equal to)128 348 R F4(pth_select)6.343 E F0 3.843
(\(3\) \(see belo)1.666 F 3.843(w\), b)-.25 F 3.843
(ut has an additional e)-.2 F -.15(ve)-.25 G 3.843(nt ar).15 F(gument)
-.18 E F4 -.15(ev)6.343 G F0 6.343(.W).15 G(hen)-6.343 E F4(pth_select)
128 360 Q F0 .923(\(3\) suspends the current threads e)1.666 F -.15(xe)
-.15 G .924(cution it usually only uses the I/O e).15 F -.15(ve)-.25 G
.924(nt on).15 F F4(rfds)3.424 E F0(,)A F4(wfds)3.424 E F0(and)128 372 Q
F4(efds)3.627 E F0 1.127(to a)3.627 F -.1(wa)-.15 G -.1(ke).1 G 3.627
(.W).1 G 1.127(ith this function an)-4.027 F 3.627(yn)-.15 G 1.127
(umber of e)-3.627 F 1.127(xtra e)-.15 F -.15(ve)-.25 G 1.126
(nts can be used to a).15 F -.1(wa)-.15 G 1.326 -.1(ke t).1 H 1.126
(he current).1 F(thread \(remember that)128 384 Q F4 -.15(ev)2.5 G F0
(actually is an e)2.65 E -.15(ve)-.25 G(nt).15 E F4(ring)2.5 E F0(\).)A
(int)108 400.8 Q F1(pth_poll_e)2.5 E(v)-.15 E F0(\(struct pollfd *)A F4
(fds)A F0 2.5(,u)C(nsigned int)-2.5 E F4(nfd)2.5 E F0 2.5(,i)C(nt)-2.5 E
F4(timeout)2.5 E F0 2.5(,p)C(th_e)-2.5 E -.15(ve)-.25 G(nt_t).15 E F4
-.15(ev)2.5 G F0(\);).15 E .789(This is equal to)128 412.8 R F4
(pth_poll)3.29 E F0 .79(\(3\) \(see belo)1.666 F .79(w\), b)-.25 F .79
(ut has an additional e)-.2 F -.15(ve)-.25 G .79(nt ar).15 F(gument)-.18
E F4 -.15(ev)3.29 G F0 3.29(.W).15 G(hen)-3.29 E F4(pth_poll)3.29 E F0
(\(3\))1.666 E 1.056(suspends the current threads e)128 424.8 R -.15(xe)
-.15 G 1.055(cution it usually only uses the I/O e).15 F -.15(ve)-.25 G
1.055(nt on).15 F F4(fds)3.555 E F0 1.055(to a)3.555 F -.1(wa)-.15 G -.1
(ke).1 G 3.555(.W).1 G 1.055(ith this)-3.955 F .604(function an)128
436.8 R 3.104(yn)-.15 G .604(umber of e)-3.104 F .604(xtra e)-.15 F -.15
(ve)-.25 G .604(nts can be used to a).15 F -.1(wa)-.15 G .804 -.1(ke t)
.1 H .604(he current thread \(remember that).1 F F4 -.15(ev)3.105 G F0
(actu-)3.255 E(ally is an e)128 448.8 Q -.15(ve)-.25 G(nt).15 E F4(ring)
2.5 E F0(\).)A(ssize_t)108 465.6 Q F1(pth_r)2.5 E(ead_e)-.18 E(v)-.15 E
F0(\(int)A F4(fd)2.5 E F0 2.5(,v)C(oid *)-2.7 E F4 -.2(bu)C(f).2 E F0
2.5(,s)C(ize_t)-2.5 E F4(nbytes)2.5 E F0 2.5(,p)C(th_e)-2.5 E -.15(ve)
-.25 G(nt_t).15 E F4 -.15(ev)2.5 G F0(\);).15 E .47(This is equal to)128
477.6 R F4(pth_r)2.97 E(ead)-.37 E F0 .47(\(3\) \(see belo)1.666 F .47
(w\), b)-.25 F .47(ut has an additional e)-.2 F -.15(ve)-.25 G .47
(nt ar).15 F(gument)-.18 E F4 -.15(ev)2.97 G F0 2.969(.W).15 G(hen)
-2.969 E F4(pth_r)2.969 E(ead)-.37 E F0(\(3\))1.666 E 1.284
(suspends the current threads e)128 489.6 R -.15(xe)-.15 G 1.284
(cution it usually only uses the I/O e).15 F -.15(ve)-.25 G 1.284(nt on)
.15 F F4(fd)3.784 E F0 1.284(to a)3.784 F -.1(wa)-.15 G -.1(ke).1 G
3.785(.W).1 G 1.285(ith this)-4.185 F .605(function an)128 501.6 R 3.105
(yn)-.15 G .604(umber of e)-3.105 F .604(xtra e)-.15 F -.15(ve)-.25 G
.604(nts can be used to a).15 F -.1(wa)-.15 G .804 -.1(ke t).1 H .604
(he current thread \(remember that).1 F F4 -.15(ev)3.104 G F0(actu-)
3.254 E(ally is an e)128 513.6 Q -.15(ve)-.25 G(nt).15 E F4(ring)2.5 E
F0(\).)A(ssize_t)108 530.4 Q F1(pth_r)2.5 E(eadv_e)-.18 E(v)-.15 E F0
(\(int)A F4(fd)2.5 E F0 2.5(,c)C(onst struct io)-2.5 E -.15(ve)-.15 G
2.5(c*).15 G F4(io)-2.5 E(vec)-.1 E F0 2.5(,i)C(nt)-2.5 E F4(io)2.5 E
(vcnt)-.1 E F0 2.5(,p)C(th_e)-2.5 E -.15(ve)-.25 G(nt_t).15 E F4 -.15
(ev)2.5 G F0(\);).15 E 3.869(This is equal to)128 542.4 R F4(pth_r)6.369
E(eadv)-.37 E F0 3.869(\(3\) \(see belo)1.666 F 3.87(w\), b)-.25 F 3.87
(ut has an additional e)-.2 F -.15(ve)-.25 G 3.87(nt ar).15 F(gument)
-.18 E F4 -.15(ev)6.37 G F0 6.37(.W).15 G(hen)-6.37 E F4(pth_r)128 554.4
Q(eadv)-.37 E F0 .305(\(3\) suspends the current threads e)1.666 F -.15
(xe)-.15 G .305(cution it usually only uses the I/O e).15 F -.15(ve)-.25
G .304(nt on).15 F F4(fd)2.804 E F0 .304(to a)2.804 F -.1(wa)-.15 G -.1
(ke).1 G(.).1 E -.4(Wi)128 566.4 S .29(th this function an).4 F 2.79(yn)
-.15 G .29(umber of e)-2.79 F .29(xtra e)-.15 F -.15(ve)-.25 G .291
(nts can be used to a).15 F -.1(wa)-.15 G .491 -.1(ke t).1 H .291
(he current thread \(remember that).1 F F4 -.15(ev)128 578.4 S F0
(actually is an e)2.65 E -.15(ve)-.25 G(nt).15 E F4(ring)2.5 E F0(\).)A
(ssize_t)108 595.2 Q F1(pth_write_e)2.5 E(v)-.15 E F0(\(int)A F4(fd)2.5
E F0 2.5(,c)C(onst v)-2.5 E(oid *)-.2 E F4 -.2(bu)C(f).2 E F0 2.5(,s)C
(ize_t)-2.5 E F4(nbytes)2.5 E F0 2.5(,p)C(th_e)-2.5 E -.15(ve)-.25 G
(nt_t).15 E F4 -.15(ev)2.5 G F0(\);).15 E .124(This is equal to)128
607.2 R F4(pth_write)2.623 E F0 .123(\(3\) \(see belo)1.666 F .123
(w\), b)-.25 F .123(ut has an additional e)-.2 F -.15(ve)-.25 G .123
(nt ar).15 F(gument)-.18 E F4 -.15(ev)2.623 G F0 2.623(.W).15 G(hen)
-2.623 E F4(pth_write)2.623 E F0(\(3\))1.666 E 1.284
(suspends the current threads e)128 619.2 R -.15(xe)-.15 G 1.284
(cution it usually only uses the I/O e).15 F -.15(ve)-.25 G 1.284(nt on)
.15 F F4(fd)3.784 E F0 1.284(to a)3.784 F -.1(wa)-.15 G -.1(ke).1 G
3.785(.W).1 G 1.285(ith this)-4.185 F .605(function an)128 631.2 R 3.105
(yn)-.15 G .604(umber of e)-3.105 F .604(xtra e)-.15 F -.15(ve)-.25 G
.604(nts can be used to a).15 F -.1(wa)-.15 G .804 -.1(ke t).1 H .604
(he current thread \(remember that).1 F F4 -.15(ev)3.104 G F0(actu-)
3.254 E(ally is an e)128 643.2 Q -.15(ve)-.25 G(nt).15 E F4(ring)2.5 E
F0(\).)A(ssize_t)108 660 Q F1(pth_write)2.5 E(v_e)-.15 E(v)-.15 E F0
(\(int)A F4(fd)2.5 E F0 2.5(,c)C(onst struct io)-2.5 E -.15(ve)-.15 G
2.5(c*).15 G F4(io)-2.5 E(vec)-.1 E F0 2.5(,i)C(nt)-2.5 E F4(io)2.5 E
(vcnt)-.1 E F0 2.5(,p)C(th_e)-2.5 E -.15(ve)-.25 G(nt_t).15 E F4 -.15
(ev)2.5 G F0(\);).15 E 3.694(This is equal to)128 672 R F4(pth_write)
6.194 E(v)-.15 E F0 3.694(\(3\) \(see belo)1.666 F 3.695(w\), b)-.25 F
3.695(ut has an additional e)-.2 F -.15(ve)-.25 G 3.695(nt ar).15 F
(gument)-.18 E F4 -.15(ev)6.195 G F0 6.195(.W).15 G(hen)-6.195 E F4
(pth_write)128 684 Q(v)-.15 E F0 .152
(\(3\) suspends the current threads e)1.666 F -.15(xe)-.15 G .151
(cution it usually only uses the I/O e).15 F -.15(ve)-.25 G .151(nt on)
.15 F F4(fd)2.651 E F0 .151(to a)2.651 F -.1(wa)-.15 G -.1(ke).1 G(.).1
E -.4(Wi)128 696 S .29(th this function an).4 F 2.79(yn)-.15 G .29
(umber of e)-2.79 F .29(xtra e)-.15 F -.15(ve)-.25 G .291
(nts can be used to a).15 F -.1(wa)-.15 G .491 -.1(ke t).1 H .291
(he current thread \(remember that).1 F F4 -.15(ev)128 708 S F0
(actually is an e)2.65 E -.15(ve)-.25 G(nt).15 E F4(ring)2.5 E F0(\).)A
(perl v5.8.0)72 768 Q 198.17(2003-02-17 18)167.62 F 0 Cg EP
%%Page: 19 19
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E(ssize_t)108 84 Q/F1 10/Times-Bold@0 SF(pth_r)2.5 E(ecv_e)-.18 E(v)
-.15 E F0(\(int)A/F2 10/Times-Italic@0 SF(fd)2.5 E F0 2.5(,v)C(oid *)
-2.7 E F2 -.2(bu)C(f).2 E F0 2.5(,s)C(ize_t)-2.5 E F2(nbytes)2.5 E F0
2.5(,i)C(nt)-2.5 E F2<8d61>2.5 E(gs)-.1 E F0 2.5(,p)C(th_e)-2.5 E -.15
(ve)-.25 G(nt_t).15 E F2 -.15(ev)2.5 G F0(\);).15 E .62
(This is equal to)128 96 R F2(pth_r)3.119 E(ecv)-.37 E F0 .619
(\(3\) \(see belo)1.666 F .619(w\), b)-.25 F .619
(ut has an additional e)-.2 F -.15(ve)-.25 G .619(nt ar).15 F(gument)
-.18 E F2 -.15(ev)3.119 G F0 3.119(.W).15 G(hen)-3.119 E F2(pth_r)3.119
E(ecv)-.37 E F0(\(3\))1.666 E 1.284(suspends the current threads e)128
108 R -.15(xe)-.15 G 1.284(cution it usually only uses the I/O e).15 F
-.15(ve)-.25 G 1.284(nt on).15 F F2(fd)3.784 E F0 1.284(to a)3.784 F -.1
(wa)-.15 G -.1(ke).1 G 3.785(.W).1 G 1.285(ith this)-4.185 F .605
(function an)128 120 R 3.105(yn)-.15 G .604(umber of e)-3.105 F .604
(xtra e)-.15 F -.15(ve)-.25 G .604(nts can be used to a).15 F -.1(wa)
-.15 G .804 -.1(ke t).1 H .604(he current thread \(remember that).1 F F2
-.15(ev)3.104 G F0(actu-)3.254 E(ally is an e)128 132 Q -.15(ve)-.25 G
(nt).15 E F2(ring)2.5 E F0(\).)A(ssize_t)108 148.8 Q F1(pth_r)5.36 E
(ecvfr)-.18 E(om_e)-.18 E(v)-.15 E F0(\(int)A F2(fd)5.36 E F0 5.361(,v)C
2.861(oid *)-5.561 F F2 -.2(bu)C(f).2 E F0 5.361(,s)C(ize_t)-5.361 E F2
(nbytes)5.361 E F0 5.361(,i)C(nt)-5.361 E F2<8d61>5.361 E(gs)-.1 E F0
5.361(,s)C 2.861(truct sockaddr *)-5.361 F F2(fr)A(om)-.45 E F0 5.361
(,s)C(ocklen_t)-5.361 E(*)108 160.8 Q F2(fr)A(omlen)-.45 E F0 2.5(,p)C
(th_e)-2.5 E -.15(ve)-.25 G(nt_t).15 E F2 -.15(ev)2.5 G F0(\);).15 E
2.949(This is equal to)128 172.8 R F2(pth_r)5.449 E(ecvfr)-.37 E(om)-.45
E F0 2.949(\(3\) \(see belo)1.666 F 2.95(w\), b)-.25 F 2.95
(ut has an additional e)-.2 F -.15(ve)-.25 G 2.95(nt ar).15 F(gument)
-.18 E F2 -.15(ev)5.45 G F0 5.45(.W).15 G(hen)-5.45 E F2(pth_r)128 184.8
Q(ecvfr)-.37 E(om)-.45 E F0 1.479(\(3\) suspends the current threads e)
1.666 F -.15(xe)-.15 G 1.479(cution it usually only uses the I/O e).15 F
-.15(ve)-.25 G 1.479(nt on).15 F F2(fd)3.979 E F0(to)3.978 E -2.3 -.15
(aw a)128 196.8 T -.1(ke).15 G 2.599(.W).1 G .099(ith this function an)
-2.999 F 2.599(yn)-.15 G .099(umber of e)-2.599 F .099(xtra e)-.15 F
-.15(ve)-.25 G .1(nts can be used to a).15 F -.1(wa)-.15 G .3 -.1(ke t)
.1 H .1(he current thread \(remem-).1 F(ber that)128 208.8 Q F2 -.15(ev)
2.5 G F0(actually is an e)2.65 E -.15(ve)-.25 G(nt).15 E F2(ring)2.5 E
F0(\).)A(ssize_t)108 225.6 Q F1(pth_send_e)2.5 E(v)-.15 E F0(\(int)A F2
(fd)2.5 E F0 2.5(,c)C(onst v)-2.5 E(oid *)-.2 E F2 -.2(bu)C(f).2 E F0
2.5(,s)C(ize_t)-2.5 E F2(nbytes)2.5 E F0 2.5(,i)C(nt)-2.5 E F2<8d61>2.5
E(gs)-.1 E F0 2.5(,p)C(th_e)-2.5 E -.15(ve)-.25 G(nt_t).15 E F2 -.15(ev)
2.5 G F0(\);).15 E .421(This is equal to)128 237.6 R F2(pth_send)2.921 E
F0 .421(\(3\) \(see belo)1.666 F .421(w\), b)-.25 F .42
(ut has an additional e)-.2 F -.15(ve)-.25 G .42(nt ar).15 F(gument)-.18
E F2 -.15(ev)2.92 G F0 2.92(.W).15 G(hen)-2.92 E F2(pth_send)2.92 E F0
(\(3\))1.666 E 1.284(suspends the current threads e)128 249.6 R -.15(xe)
-.15 G 1.284(cution it usually only uses the I/O e).15 F -.15(ve)-.25 G
1.284(nt on).15 F F2(fd)3.784 E F0 1.284(to a)3.784 F -.1(wa)-.15 G -.1
(ke).1 G 3.785(.W).1 G 1.285(ith this)-4.185 F .605(function an)128
261.6 R 3.105(yn)-.15 G .604(umber of e)-3.105 F .604(xtra e)-.15 F -.15
(ve)-.25 G .604(nts can be used to a).15 F -.1(wa)-.15 G .804 -.1(ke t)
.1 H .604(he current thread \(remember that).1 F F2 -.15(ev)3.104 G F0
(actu-)3.254 E(ally is an e)128 273.6 Q -.15(ve)-.25 G(nt).15 E F2(ring)
2.5 E F0(\).)A(ssize_t)108 290.4 Q F1(pth_sendto_e)3.146 E(v)-.15 E F0
(\(int)A F2(fd)3.146 E F0 3.146(,c)C .646(onst v)-3.146 F .646(oid *)-.2
F F2 -.2(bu)C(f).2 E F0 3.146(,s)C(ize_t)-3.146 E F2(nbytes)3.146 E F0
3.146(,i)C(nt)-3.146 E F2<8d61>3.147 E(gs)-.1 E F0 3.147(,c)C .647
(onst struct sockaddr *)-3.147 F F2(to)A F0 3.147(,s)C(ocklen_t)-3.147 E
F2(tolen)108 302.4 Q F0 2.5(,p)C(th_e)-2.5 E -.15(ve)-.25 G(nt_t).15 E
F2 -.15(ev)2.5 G F0(\);).15 E 3.604(This is equal to)128 314.4 R F2
(pth_sendto)6.104 E F0 3.604(\(3\) \(see belo)1.666 F 3.605(w\), b)-.25
F 3.605(ut has an additional e)-.2 F -.15(ve)-.25 G 3.605(nt ar).15 F
(gument)-.18 E F2 -.15(ev)6.105 G F0 6.105(.W).15 G(hen)-6.105 E F2
(pth_sendto)128 326.4 Q F0 .073(\(3\) suspends the current threads e)
1.666 F -.15(xe)-.15 G .073(cution it usually only uses the I/O e).15 F
-.15(ve)-.25 G .072(nt on).15 F F2(fd)2.572 E F0 .072(to a)2.572 F -.1
(wa)-.15 G -.1(ke).1 G(.).1 E -.4(Wi)128 338.4 S .29
(th this function an).4 F 2.79(yn)-.15 G .29(umber of e)-2.79 F .29
(xtra e)-.15 F -.15(ve)-.25 G .291(nts can be used to a).15 F -.1(wa)
-.15 G .491 -.1(ke t).1 H .291(he current thread \(remember that).1 F F2
-.15(ev)128 350.4 S F0(actually is an e)2.65 E -.15(ve)-.25 G(nt).15 E
F2(ring)2.5 E F0(\).)A F1(Standard)108 373.2 Q/F3 9/Times-Bold@0 SF
(POSIX)2.5 E F1(Replacement)2.5 E F3(API)2.5 E F0 .705(The follo)108 390
R .704(wing functions are standard replacements functions for the)-.25 F
/F4 9/Times-Roman@0 SF .954(POSIX API)3.204 F F0 5.704(.T)C .704(he dif)
-5.704 F .704(ference is mainly)-.25 F .107(that the)108 402 R 2.607(ys)
-.15 G .108(uspend the current thread only instead of the whole process\
 in case the \214le descriptors will block.)-2.607 F(int)108 418.8 Q F1
(pth_nanosleep)2.5 E F0(\(const struct timespec *)A F2 -.37(rq)C(tp).37
E F0 2.5(,s)C(truct timespec *)-2.5 E F2(rmtp)A F0(\);)A .885
(This is a v)128 430.8 R .885(ariant of the)-.25 F F4(POSIX)3.385 E F2
(nanosleep)3.385 E F0 .885
(\(3\) function. It suspends the current threads e)1.666 F -.15(xe)-.15
G .884(cution until).15 F 1.345(the amount of time in)128 442.8 R F2
-.37(rq)3.845 G(tp).37 E F0 3.845(elapsed. The)3.845 F 1.345
(thread is guaranteed to not w)3.845 F(ak)-.1 E 3.845(eu)-.1 G 3.845(pb)
-3.845 G 1.345(efore this time, b)-3.845 F(ut)-.2 E .159
(because of the non-preempti)128 454.8 R .459 -.15(ve s)-.25 H .159
(cheduling nature of).15 F F1(Pth)2.659 E F0 2.659(,i)C 2.659(tc)-2.659
G .159(an be a)-2.659 F -.1(wa)-.15 G -.1(ke).1 G .159(ned later).1 F
2.659(,o)-.4 G 2.659(fc)-2.659 G .158(ourse. If)-2.659 F F2(rmtp)2.658 E
F0(is)2.658 E(not)128 466.8 Q/F5 10/Courier@0 SF(NULL)2.652 E F0 2.652
(,t)C(he)-2.652 E F5(timespec)2.652 E F0 .152(structure it references i\
s updated to contain the unslept amount \(the request)2.652 F .541
(time minus the time actually slept time\). The dif)128 478.8 R .54
(ference between)-.25 F F2(nanosleep)3.04 E F0 .54(\(3\) and)1.666 F F2
(pth_nanosleep)3.04 E F0(\(3\))1.666 E .286(is that that)128 490.8 R F2
(pth_nanosleep)2.786 E F0 .286(\(3\) suspends only the e)1.666 F -.15
(xe)-.15 G .287(cution of the current thread and not the whole pro-).15
F(cess.)128 502.8 Q(int)108 519.6 Q F1(pth_usleep)2.5 E F0
(\(unsigned int)A F2(usec)2.5 E F0(\);)A .129(This is a v)128 531.6 R
.129(ariant of the 4.3BSD)-.25 F F2(usleep)2.628 E F0 .128
(\(3\) function. It suspends the current threads e)1.666 F -.15(xe)-.15
G .128(cution until).15 F F2(usec)2.628 E F0 .99(microseconds \(=)128
543.6 R F2(usec)3.49 E F0 .99(*1/1000000 sec\) elapsed.)B .991
(The thread is guaranteed to not w)5.991 F(ak)-.1 E 3.491(eu)-.1 G 3.491
(pb)-3.491 G .991(efore this)-3.491 F .285(time, b)128 555.6 R .285
(ut because of the non-preempti)-.2 F .585 -.15(ve s)-.25 H .285
(cheduling nature of).15 F F1(Pth)2.785 E F0 2.785(,i)C 2.785(tc)-2.785
G .285(an be a)-2.785 F -.1(wa)-.15 G -.1(ke).1 G .285(ned later).1 F
2.785(,o)-.4 G 2.785(fc)-2.785 G(ourse.)-2.785 E 1.953(The dif)128 567.6
R 1.953(ference between)-.25 F F2(usleep)4.453 E F0 1.953(\(3\) and)
1.666 F F2(pth_usleep)4.453 E F0 1.954(\(3\) is that that)1.666 F F2
(pth_usleep)4.454 E F0 1.954(\(3\) suspends only the)1.666 F -.15(exe)
128 579.6 S(cution of the current thread and not the whole process.).15
E(unsigned int)108 596.4 Q F1(pth_sleep)2.5 E F0(\(unsigned int)A F2
(sec)2.5 E F0(\);)A 1.126(This is a v)128 608.4 R 1.125(ariant of the)
-.25 F F4(POSIX)3.625 E F2(sleep)3.625 E F0 1.125
(\(3\) function. It suspends the current threads e)1.666 F -.15(xe)-.15
G 1.125(cution until).15 F F2(sec)3.625 E F0 .048(seconds elapsed.)128
620.4 R .049(The thread is guaranteed to not w)5.048 F(ak)-.1 E 2.549
(eu)-.1 G 2.549(pb)-2.549 G .049(efore this time, b)-2.549 F .049
(ut because of the non-pre-)-.2 F(empti)128 632.4 Q 2.734 -.15(ve s)-.25
H 2.434(cheduling nature of).15 F F1(Pth)4.934 E F0 4.934(,i)C 4.934(tc)
-4.934 G 2.434(an be a)-4.934 F -.1(wa)-.15 G -.1(ke).1 G 2.433
(ned later).1 F 4.933(,o)-.4 G 4.933(fc)-4.933 G 4.933(ourse. The)-4.933
F(dif)4.933 E 2.433(ference between)-.25 F F2(sleep)128 644.4 Q F0 .765
(\(3\) and)1.666 F F2(pth_sleep)3.265 E F0 .765(\(3\) is that)1.666 F F2
(pth_sleep)3.265 E F0 .765(\(3\) suspends only the e)1.666 F -.15(xe)
-.15 G .765(cution of the current thread and).15 F
(not the whole process.)128 656.4 Q(pid_t)108 673.2 Q F1(pth_waitpid)2.5
E F0(\(pid_t)A F2(pid)2.5 E F0 2.5(,i)C(nt *)-2.5 E F2(status)A F0 2.5
(,i)C(nt)-2.5 E F2(options)2.5 E F0(\);)A .395(This is a v)128 685.2 R
.395(ariant of the)-.25 F F4(POSIX)2.895 E F2(waitpid)2.895 E F0 .394
(\(2\) function. It suspends the current threads e)1.666 F -.15(xe)-.15
G .394(cution until).15 F F2(sta-)2.894 E(tus)128 697.2 Q F0 .158
(information is a)2.658 F -.25(va)-.2 G .159
(ilable for a terminated child process).25 F F2(pid)2.659 E F0 5.159(.T)
C .159(he dif)-5.159 F .159(ference between)-.25 F F2(waitpid)2.659 E F0
.159(\(2\) and)1.666 F F2(pth_waitpid)128 709.2 Q F0 1.08(\(3\) is that)
1.666 F F2(pth_waitpid)3.579 E F0 1.079(\(3\) suspends only the e)1.666
F -.15(xe)-.15 G 1.079(cution of the current thread and not the).15 F
(whole process.)128 721.2 Q -.15(Fo)5 G 2.5(rm).15 G
(ore details about the ar)-2.5 E(guments and return code semantics see)
-.18 E F2(waitpid)2.5 E F0(\(2\).)1.666 E(perl v5.8.0)72 768 Q 198.17
(2003-02-17 19)167.62 F 0 Cg EP
%%Page: 20 20
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E(int)108 84 Q/F1 10/Times-Bold@0 SF(pth_system)2.5 E F0
(\(const char *)A/F2 10/Times-Italic@0 SF(cmd)A F0(\);)A 1.159
(This is a v)128 96 R 1.159(ariant of the)-.25 F/F3 9/Times-Roman@0 SF
(POSIX)3.659 E F2(system)3.659 E F0 1.16(\(3\) function. It e)1.666 F
-.15(xe)-.15 G 1.16(cutes the shell command).15 F F2(cmd)3.66 E F0 1.16
(with Bourne)3.66 F .732(Shell \()128 108 R/F4 10/Courier@0 SF(sh)A F0
3.232(\)a)C .732(nd suspends the current threads e)-3.232 F -.15(xe)-.15
G .731(cution until this command terminates. The dif).15 F(ference)-.25
E(between)128 120 Q F2(system)2.576 E F0 .076(\(3\) and)1.666 F F2
(pth_system)2.576 E F0 .076(\(3\) is that)1.666 F F2(pth_system)2.576 E
F0 .076(\(3\) suspends only the e)1.666 F -.15(xe)-.15 G .077
(cution of the current).15 F .307(thread and not the whole process. F)
128 132 R .307(or more details about the ar)-.15 F .307
(guments and return code semantics see)-.18 F F2(system)128 144 Q F0
(\(3\).)1.666 E(int)108 160.8 Q F1(pth_sigmask)2.5 E F0(\(int)A F2(how)
2.5 E F0 2.5(,c)C(onst sigset_t *)-2.5 E F2(set)A F0 2.5(,s)C(igset_t *)
-2.5 E F2(oset)A F0(\))A .917(This is the)128 172.8 R F1(Pth)3.417 E F0
.918(thread-related equi)3.418 F -.25(va)-.25 G .918(lent of).25 F F3
(POSIX)3.418 E F2(sigpr)3.418 E(ocmask)-.45 E F0 .918(\(2\) respecti)
1.666 F -.15(ve)-.25 G(ly).15 E F2(pthr)3.418 E(ead_sigmask)-.37 E F0
(\(3\).)1.666 E 1.145(The ar)128 184.8 R(guments)-.18 E F2(how)3.645 E
F0(,)A F2(set)3.645 E F0(and)3.645 E F2(oset)3.645 E F0 1.145
(directly relate to)3.645 F F2(sigpr)3.644 E(ocmask)-.45 E F0 1.144
(\(2\), because)1.666 F F1(Pth)3.644 E F0 1.144(internally just uses)
3.644 F F2(sigpr)128 196.8 Q(ocmask)-.45 E F0 1.004
(\(2\) here. So alternati)1.666 F -.15(ve)-.25 G 1.005
(ly you can also directly call).15 F F2(sigpr)3.505 E(ocmask)-.45 E F0
1.005(\(2\), b)1.666 F 1.005(ut for consistenc)-.2 F(y)-.15 E
(reasons you should use this function)128 208.8 Q F2(pth_sigmask)2.5 E
F0(\(3\).)1.666 E(int)108 225.6 Q F1(pth_sigwait)2.5 E F0
(\(const sigset_t *)A F2(set)A F0 2.5(,i)C(nt *)-2.5 E F2(sig)A F0(\);)A
.378(This is a v)128 237.6 R .378(ariant of the)-.25 F F3(POSIX)2.878 E
F0(.1c)A F2(sigwait)2.878 E F0 .378
(\(3\) function. It suspends the current threads e)1.666 F -.15(xe)-.15
G .377(cution until a).15 F .427(signal in)128 249.6 R F2(set)2.927 E F0
.428(occurred and stores the signal number in)2.928 F F2(sig)2.928 E F0
2.928(.T)C .428(he important point is that the signal is not)-2.928 F
(deli)128 261.6 Q -.15(ve)-.25 G .689(red to a signal handler).15 F
3.188(.I)-.55 G .688(nstead it')-3.188 F 3.188(sc)-.55 G .688
(aught by the scheduler only in order to a)-3.188 F -.1(wa)-.15 G .888
-.1(ke t).1 H(he).1 E F2(pth_sig-)3.188 E(wait\(\))128 273.6 Q F0 .077
(call. The trick and noticeable point here is that this w)2.577 F .078
(ay you get an asynchronous a)-.1 F -.1(wa)-.15 G .078(re applica-).1 F
.016(tion that is written completely synchronously)128 285.6 R 2.516(.W)
-.65 G .016(hen you think about the problem of)-2.516 F F2(async)2.515 E
(hr)-.15 E .015(onous safe)-.45 F F0
(functions you should recognize that this is a great bene\214t.)128
297.6 Q(int)108 314.4 Q F1(pth_connect)2.5 E F0(\(int)A F2(s)2.5 E F0
2.5(,c)C(onst struct sockaddr *)-2.5 E F2(addr)A F0 2.5(,s)C(ocklen_t)
-2.5 E F2(addrlen)2.5 E F0(\);)A .329(This is a v)128 326.4 R .329
(ariant of the 4.2BSD)-.25 F F2(connect)2.829 E F0 .329
(\(2\) function. It establishes a connection on a sock)1.666 F(et)-.1 E
F2(s)2.829 E F0 .33(to tar)2.83 F(get)-.18 E 3.112(speci\214ed in)128
338.4 R F2(addr)5.612 E F0(and)5.612 E F2(addrlen)5.612 E F0 8.112(.T)C
3.112(he dif)-8.112 F 3.111(ference between)-.25 F F2(connect)5.611 E F0
3.111(\(2\) and)1.666 F F2(pth_connect)5.611 E F0 3.111(\(3\) is that)
1.666 F F2(pth_connect)128 350.4 Q F0 .039(\(3\) suspends only the e)
1.666 F -.15(xe)-.15 G .039
(cution of the current thread and not the whole process.).15 F -.15(Fo)
5.039 G 2.539(rm).15 G(ore)-2.539 E(details about the ar)128 362.4 Q
(guments and return code semantics see)-.18 E F2(connect)2.5 E F0
(\(2\).)1.666 E(int)108 379.2 Q F1(pth_accept)2.5 E F0(\(int)A F2(s)2.5
E F0 2.5(,s)C(truct sockaddr *)-2.5 E F2(addr)A F0 2.5(,s)C(ocklen_t *)
-2.5 E F2(addrlen)A F0(\);)A .691(This is a v)128 391.2 R .691
(ariant of the 4.2BSD)-.25 F F2(accept)3.191 E F0 .691
(\(2\) function. It accepts a connection on a sock)1.666 F .69(et by e)
-.1 F(xtracting)-.15 E .342(the \214rst connection request on the queue\
 of pending connections, creating a ne)128 403.2 R 2.843(ws)-.25 G(ock)
-2.843 E .343(et with the same)-.1 F .969(properties of)128 415.2 R F2
(s)3.469 E F0 .968(and allocates a ne)3.468 F 3.468<778c>-.25 G .968
(le descriptor for the sock)-3.468 F .968(et \(which is returned\).)-.1
F .968(The dif)5.968 F(ference)-.25 E(between)128 427.2 Q F2(accept)
2.705 E F0 .205(\(2\) and)1.666 F F2(pth_accept)2.705 E F0 .205
(\(3\) is that)1.666 F F2(pth_accept)2.705 E F0 .206
(\(3\) suspends only the e)1.666 F -.15(xe)-.15 G .206
(cution of the current).15 F .151(thread and not the whole process.)128
439.2 R -.15(Fo)5.151 G 2.651(rm).15 G .151(ore details about the ar)
-2.651 F .15(guments and return code semantics see)-.18 F F2(accept)128
451.2 Q F0(\(2\).)1.666 E(int)108 468 Q F1(pth_select)2.5 E F0(\(int)A
F2(nfd)2.5 E F0 2.5(,f)C(d_set *)-2.5 E F2(rfds)A F0 2.5(,f)C(d_set *)
-2.5 E F2(wfds)A F0 2.5(,f)C(d_set *)-2.5 E F2(efds)A F0 2.5(,s)C
(truct time)-2.5 E -.25(va)-.25 G 2.5(l*).25 G F2(timeout)-2.5 E F0(\);)
A .032(This is a v)128 480 R .033(ariant of the 4.2BSD)-.25 F F2(select)
2.533 E F0 .033(\(2\) function.)1.666 F .033(It e)5.033 F .033
(xamines the I/O descriptor sets whose addresses)-.15 F .147
(are passed in)128 492 R F2(rfds)2.647 E F0(,)A F2(wfds)2.647 E F0 2.647
(,a)C(nd)-2.647 E F2(efds)2.647 E F0 .147(to see if some of their descr\
iptors are ready for reading, are ready for)2.647 F .366(writing, or ha)
128 504 R .667 -.15(ve a)-.2 H 2.867(ne).15 G .367
(xceptional condition pending, respecti)-3.017 F -.15(ve)-.25 G(ly).15 E
5.367(.F)-.65 G .367(or more details about the ar)-5.517 F(guments)-.18
E(and return code semantics see)128 516 Q F2(select)2.5 E F0(\(2\).)
1.666 E(int)108 532.8 Q F1(pth_pselect)4.664 E F0(\(int)A F2(nfd)4.663 E
F0 4.663(,f)C 2.163(d_set *)-4.663 F F2(rfds)A F0 4.663(,f)C 2.163
(d_set *)-4.663 F F2(wfds)A F0 4.663(,f)C 2.163(d_set *)-4.663 F F2
(efds)A F0 4.663(,c)C 2.163(onst struct timespec *)-4.663 F F2(timeout)A
F0 4.663(,c)C(onst)-4.663 E(sigset_t *)108 544.8 Q F2(sigmask)A F0(\);)A
1.742(This is a v)128 556.8 R 1.742(ariant of the)-.25 F F3(POSIX)4.242
E F2(pselect)4.241 E F0 1.741
(\(2\) function, which in turn is a stronger v)1.666 F 1.741
(ariant of 4.2BSD)-.25 F F2(select)128 568.8 Q F0 .984(\(2\). The dif)
1.666 F .984(ference is that the higher)-.25 F(-resolution)-.2 E F4 .984
(struct timespec)3.484 F F0 .984(is passed instead of the)3.484 F(lo)128
580.8 Q(wer)-.25 E(-resolution)-.2 E F4 1.721(struct timeval)4.221 F F0
1.721(and that a signal mask is speci\214ed which is temporarily set)
4.221 F .055(while w)128 592.8 R .055(aiting for input. F)-.1 F .056
(or more details about the ar)-.15 F .056
(guments and return code semantics see)-.18 F F2(pselect)2.556 E F0
(\(2\))1.666 E(and)128 604.8 Q F2(select)2.5 E F0(\(2\).)1.666 E(int)108
621.6 Q F1(pth_poll)2.5 E F0(\(struct pollfd *)A F2(fds)A F0 2.5(,u)C
(nsigned int)-2.5 E F2(nfd)2.5 E F0 2.5(,i)C(nt)-2.5 E F2(timeout)2.5 E
F0(\);)A .4(This is a v)128 633.6 R .399(ariant of the SysV)-.25 F F2
(poll)2.899 E F0 .399(\(2\) function. It e)1.666 F .399
(xamines the I/O descriptors which are passed in the)-.15 F(array)128
645.6 Q F2(fds)3.442 E F0 .942(to see if some of them are ready for rea\
ding, are ready for writing, or ha)3.442 F 1.243 -.15(ve a)-.2 H 3.443
(ne).15 G(xceptional)-3.593 E .885(condition pending, respecti)128 657.6
R -.15(ve)-.25 G(ly).15 E 3.385(.F)-.65 G .885
(or more details about the ar)-3.535 F .884
(guments and return code semantics see)-.18 F F2(poll)128 669.6 Q F0
(\(2\).)1.666 E(ssize_t)108 686.4 Q F1(pth_r)2.5 E(ead)-.18 E F0(\(int)A
F2(fd)2.5 E F0 2.5(,v)C(oid *)-2.7 E F2 -.2(bu)C(f).2 E F0 2.5(,s)C
(ize_t)-2.5 E F2(nbytes)2.5 E F0(\);)A .127(This is a v)128 698.4 R .127
(ariant of the)-.25 F F3(POSIX)2.627 E F2 -.37(re)2.627 G(ad).37 E F0
.128(\(2\) function. It reads up to)1.666 F F2(nbytes)2.628 E F0 .128
(bytes into)2.628 F F2 -.2(bu)2.628 G(f).2 E F0 .128
(from \214le descriptor)2.628 F F2(fd)128 710.4 Q F0 6.293(.T)C 1.293
(he dif)-6.293 F 1.293(ference between)-.25 F F2 -.37(re)3.793 G(ad).37
E F0 1.293(\(2\) and)1.666 F F2(pth_r)3.793 E(ead)-.37 E F0 1.292
(\(2\) is that)1.666 F F2(pth_r)3.792 E(ead)-.37 E F0 1.292
(\(2\) suspends e)1.666 F -.15(xe)-.15 G 1.292(cution of the).15 F .723
(current thread until the \214le descriptor is ready for reading. F)128
722.4 R .723(or more details about the ar)-.15 F .724(guments and)-.18 F
(perl v5.8.0)72 768 Q 198.17(2003-02-17 20)167.62 F 0 Cg EP
%%Page: 21 21
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E(return code semantics see)128 84 Q/F1 10/Times-Italic@0 SF -.37
(re)2.5 G(ad).37 E F0(\(2\).)1.666 E(ssize_t)108 100.8 Q/F2 10
/Times-Bold@0 SF(pth_r)2.5 E(eadv)-.18 E F0(\(int)A F1(fd)2.5 E F0 2.5
(,c)C(onst struct io)-2.5 E -.15(ve)-.15 G 2.5(c*).15 G F1(io)-2.5 E
(vec)-.1 E F0 2.5(,i)C(nt)-2.5 E F1(io)2.5 E(vcnt)-.1 E F0(\);)A 1.405
(This is a v)128 112.8 R 1.405(ariant of the)-.25 F/F3 9/Times-Roman@0
SF(POSIX)3.905 E F1 -.37(re)3.905 G(adv).37 E F0 1.405
(\(2\) function. It reads data from \214le descriptor)1.666 F F1(fd)
3.904 E F0 1.404(into the \214rst)3.904 F F1(io)128 124.8 Q(vcnt)-.1 E
F0(ro)2.75 E .25(ws of the)-.25 F F1(io)2.751 E(v)-.1 E F0 -.15(ve)2.751
G(ctor).15 E 5.251(.T)-.55 G .251(he dif)-5.251 F .251(ference between)
-.25 F F1 -.37(re)2.751 G(adv).37 E F0 .251(\(2\) and)1.666 F F1(pth_r)
2.751 E(eadv)-.37 E F0 .251(\(2\) is that)1.666 F F1(pth_r)2.751 E(eadv)
-.37 E F0(\(2\))1.666 E .419(suspends e)128 136.8 R -.15(xe)-.15 G .418
(cution of the current thread until the \214le descriptor is ready for \
reading. F).15 F .418(or more details)-.15 F(about the ar)128 148.8 Q
(guments and return code semantics see)-.18 E F1 -.37(re)2.5 G(adv).37 E
F0(\(2\).)1.666 E(ssize_t)108 165.6 Q F2(pth_write)2.5 E F0(\(int)A F1
(fd)2.5 E F0 2.5(,c)C(onst v)-2.5 E(oid *)-.2 E F1 -.2(bu)C(f).2 E F0
2.5(,s)C(ize_t)-2.5 E F1(nbytes)2.5 E F0(\);)A .792(This is a v)128
177.6 R .792(ariant of the)-.25 F F3(POSIX)3.292 E F1(write)3.292 E F0
.792(\(2\) function. It writes)1.666 F F1(nbytes)3.292 E F0 .793
(bytes from)3.293 F F1 -.2(bu)3.293 G(f).2 E F0 .793
(to \214le descriptor)3.293 F F1(fd)3.293 E F0(.)A .453(The dif)128
189.6 R .453(ference between)-.25 F F1(write)2.953 E F0 .453(\(2\) and)
1.666 F F1(pth_write)2.953 E F0 .453(\(2\) is that)1.666 F F1(pth_write)
2.952 E F0 .452(\(2\) suspends e)1.666 F -.15(xe)-.15 G .452
(cution of the cur).15 F(-)-.2 E 1.434
(rent thread until the \214le descriptor is ready for writing.)128 201.6
R -.15(Fo)6.434 G 3.934(rm).15 G 1.434(ore details about the ar)-3.934 F
1.434(guments and)-.18 F(return code semantics see)128 213.6 Q F1(write)
2.5 E F0(\(2\).)1.666 E(ssize_t)108 230.4 Q F2(pth_write)2.5 E(v)-.15 E
F0(\(int)A F1(fd)2.5 E F0 2.5(,c)C(onst struct io)-2.5 E -.15(ve)-.15 G
2.5(c*).15 G F1(io)-2.5 E(vec)-.1 E F0 2.5(,i)C(nt)-2.5 E F1(io)2.5 E
(vcnt)-.1 E F0(\);)A .023(This is a v)128 242.4 R .023(ariant of the)
-.25 F F3(POSIX)2.523 E F1(write)2.523 E(v)-.15 E F0 .023
(\(2\) function. It writes data to \214le descriptor)1.666 F F1(fd)2.523
E F0 .022(from the \214rst)2.522 F F1(io)2.522 E(vcnt)-.1 E F0(ro)128
254.4 Q .313(ws of the)-.25 F F1(io)2.813 E(v)-.1 E F0 -.15(ve)2.813 G
(ctor).15 E 5.314(.T)-.55 G .314(he dif)-5.314 F .314(ference between)
-.25 F F1(write)2.814 E(v)-.15 E F0 .314(\(2\) and)1.666 F F1(pth_write)
2.814 E(v)-.15 E F0 .314(\(2\) is that)1.666 F F1(pth_write)2.814 E(v)
-.15 E F0 .314(\(2\) sus-)1.666 F 1.217(pends e)128 266.4 R -.15(xe)-.15
G 1.217(cution of the current thread until the \214le descriptor is rea\
dy for reading. F).15 F 1.216(or more details)-.15 F(about the ar)128
278.4 Q(guments and return code semantics see)-.18 E F1(write)2.5 E(v)
-.15 E F0(\(2\).)1.666 E(ssize_t)108 295.2 Q F2(pth_pr)2.5 E(ead)-.18 E
F0(\(int)A F1(fd)2.5 E F0 2.5(,v)C(oid *)-2.7 E F1 -.2(bu)C(f).2 E F0
2.5(,s)C(ize_t)-2.5 E F1(nbytes)2.5 E F0 2.5(,o)C -.25(ff)-2.5 G(_t).25
E F1(of)2.5 E(fset)-.18 E F0(\);)A 1.045(This is a v)128 307.2 R 1.045
(ariant of the)-.25 F F3(POSIX)3.546 E F1(pr)3.546 E(ead)-.37 E F0 1.046
(\(3\) function.)1.666 F 1.046(It performs the same action as a re)6.046
F(gular)-.15 E F1 -.37(re)3.546 G(ad).37 E F0(\(2\),)1.666 E -.15(ex)128
319.2 S .699(cept that it reads from a gi).15 F -.15(ve)-.25 G 3.199(np)
.15 G .699(osition in the \214le without changing the \214le pointer)
-3.199 F 5.699(.T)-.55 G .698(he \214rst three)-5.699 F(ar)128 331.2 Q
.126(guments are the same as for)-.18 F F1(pth_r)2.627 E(ead)-.37 E F0
.127(\(3\) with the addition of a fourth ar)1.666 F(gument)-.18 E F1(of)
2.627 E(fset)-.18 E F0 .127(for the desired)2.627 F
(position inside the \214le.)128 343.2 Q(ssize_t)108 360 Q F2
(pth_pwrite)2.5 E F0(\(int)A F1(fd)2.5 E F0 2.5(,c)C(onst v)-2.5 E
(oid *)-.2 E F1 -.2(bu)C(f).2 E F0 2.5(,s)C(ize_t)-2.5 E F1(nbytes)2.5 E
F0 2.5(,o)C -.25(ff)-2.5 G(_t).25 E F1(of)2.5 E(fset)-.18 E F0(\);)A .74
(This is a v)128 372 R .74(ariant of the)-.25 F F3(POSIX)3.24 E F1
(pwrite)3.24 E F0 .74(\(3\) function.)1.666 F .74
(It performs the same action as a re)5.74 F(gular)-.15 E F1(write)3.239
E F0(\(2\),)1.666 E -.15(ex)128 384 S 1.3(cept that it writes to a gi)
.15 F -.15(ve)-.25 G 3.8(np).15 G 1.3
(osition in the \214le without changing the \214le pointer)-3.8 F 3.8
(.T)-.55 G 1.3(he \214rst three)-3.8 F(ar)128 396 Q 1.934
(guments are the same as for)-.18 F F1(pth_write)4.434 E F0 1.933
(\(3\) with the addition of a fourth ar)1.666 F(gument)-.18 E F1(of)
4.433 E(fset)-.18 E F0 1.933(for the)4.433 F
(desired position inside the \214le.)128 408 Q(ssize_t)108 424.8 Q F2
(pth_r)2.5 E(ecv)-.18 E F0(\(int)A F1(fd)2.5 E F0 2.5(,v)C(oid *)-2.7 E
F1 -.2(bu)C(f).2 E F0 2.5(,s)C(ize_t)-2.5 E F1(nbytes)2.5 E F0 2.5(,i)C
(nt)-2.5 E F1<8d61>2.5 E(gs)-.1 E F0(\);)A 1.445(This is a v)128 436.8 R
1.445(ariant of the SUSv2)-.25 F F1 -.37(re)3.946 G(cv).37 E F0 1.446
(\(2\) function and equal to `)1.666 F 1.446(`pth_recvfrom\(fd, b)-.74 F
1.446(uf, nbytes, \215ags,)-.2 F F3(NULL)128 448.8 Q F0 2.5(,0)C(\)')
-2.5 E('.)-.74 E(ssize_t)108 465.6 Q F2(pth_r)2.5 E(ecvfr)-.18 E(om)-.18
E F0(\(int)A F1(fd)2.5 E F0 2.5(,v)C(oid *)-2.7 E F1 -.2(bu)C(f).2 E F0
2.5(,s)C(ize_t)-2.5 E F1(nbytes)2.5 E F0 2.5(,i)C(nt)-2.5 E F1<8d61>2.5
E(gs)-.1 E F0 2.5(,s)C(truct sockaddr *)-2.5 E F1(fr)A(om)-.45 E F0 2.5
(,s)C(ocklen_t *)-2.5 E F1(fr)A(omlen)-.45 E F0(\);)A 1.403(This is a v)
128 477.6 R 1.403(ariant of the SUSv2)-.25 F F1 -.37(re)3.903 G(cvfr).37
E(om)-.45 E F0 1.403(\(2\) function. It reads up to)1.666 F F1(nbytes)
3.903 E F0 1.403(bytes into)3.903 F F1 -.2(bu)3.903 G(f).2 E F0 1.403
(from \214le)3.903 F(descriptor)128 489.6 Q F1(fd)7.321 E F0 4.821
(while using)7.321 F F1<8d61>7.321 E(gs)-.1 E F0(and)7.321 E F1(fr)7.321
E(om)-.45 E F0(/)A F1(fr)A(omlen)-.45 E F0 7.321(.T)C 4.821(he dif)
-7.321 F 4.822(ference between)-.25 F F1 -.37(re)7.322 G(cvfr).37 E(om)
-.45 E F0 4.822(\(2\) and)1.666 F F1(pth_r)128 501.6 Q(ecvfr)-.37 E(om)
-.45 E F0 .074(\(2\) is that)1.666 F F1(pth_r)2.574 E(ecvfr)-.37 E(om)
-.45 E F0 .074(\(2\) suspends e)1.666 F -.15(xe)-.15 G .074
(cution of the current thread until the \214le descrip-).15 F 2.975
(tor is ready for reading. F)128 513.6 R 2.975
(or more details about the ar)-.15 F 2.976
(guments and return code semantics see)-.18 F F1 -.37(re)128 525.6 S
(cvfr).37 E(om)-.45 E F0(\(2\).)1.666 E(ssize_t)108 542.4 Q F2(pth_send)
2.5 E F0(\(int)A F1(fd)2.5 E F0 2.5(,c)C(onst v)-2.5 E(oid *)-.2 E F1
-.2(bu)C(f).2 E F0 2.5(,s)C(ize_t)-2.5 E F1(nbytes)2.5 E F0 2.5(,i)C(nt)
-2.5 E F1<8d61>2.5 E(gs)-.1 E F0(\);)A .109(This is a v)128 554.4 R .109
(ariant of the SUSv2)-.25 F F1(send)2.609 E F0 .109
(\(2\) function and equal to `)1.666 F .108(`pth_sendto\(fd, b)-.74 F
.108(uf, nbytes, \215ags,)-.2 F F3(NULL)2.608 E F0(,)A(0\)')128 566.4 Q
('.)-.74 E(ssize_t)108 583.2 Q F2(pth_sendto)4.167 E F0(\(int)A F1(fd)
4.167 E F0 4.167(,c)C 1.667(onst v)-4.167 F 1.667(oid *)-.2 F F1 -.2(bu)
C(f).2 E F0 4.167(,s)C(ize_t)-4.167 E F1(nbytes)4.167 E F0 4.167(,i)C
(nt)-4.167 E F1<8d61>4.167 E(gs)-.1 E F0 4.167(,c)C 1.667
(onst struct sockaddr *)-4.167 F F1(to)A F0 4.168(,s)C(ocklen_t)-4.168 E
F1(tolen)108 595.2 Q F0(\);)A .493(This is a v)128 607.2 R .493
(ariant of the SUSv2)-.25 F F1(sendto)2.993 E F0 .493
(\(2\) function. It writes)1.666 F F1(nbytes)2.993 E F0 .493(bytes from)
2.993 F F1 -.2(bu)2.993 G(f).2 E F0 .493(to \214le descriptor)2.993 F F1
(fd)2.993 E F0 4.159(while using)128 619.2 R F1<8d61>6.659 E(gs)-.1 E F0
(and)6.659 E F1(to)6.659 E F0(/)A F1(tolen)A F0 6.659(.T)C 4.159(he dif)
-6.659 F 4.159(ference between)-.25 F F1(sendto)6.659 E F0 4.159
(\(2\) and)1.666 F F1(pth_sendto)6.659 E F0 4.159(\(2\) is that)1.666 F
F1(pth_sendto)128 631.2 Q F0 1.141(\(2\) suspends e)1.666 F -.15(xe)-.15
G 1.141(cution of the current thread until the \214le descriptor is rea\
dy for writing.).15 F -.15(Fo)128 643.2 S 2.5(rm).15 G
(ore details about the ar)-2.5 E(guments and return code semantics see)
-.18 E F1(sendto)2.5 E F0(\(2\).)1.666 E/F4 10.95/Times-Bold@0 SF
(EXAMPLE)72 660 Q F0 .604(The follo)108 672 R .604(wing e)-.25 F .603
(xample is a useless serv)-.15 F .603
(er which does nothing more than listening on)-.15 F F3(TCP)3.103 E F0
.603(port 12345 and)3.103 F .198
(displaying the current time to the sock)108 684 R .198
(et when a connection w)-.1 F .198(as established. F)-.1 F .198
(or each incoming connection)-.15 F 3.247(at)108 696 S .747
(hread is spa)-3.247 F .747(wned. Additionally)-.15 F 3.247(,t)-.65 G
3.247(os)-3.247 G .746(ee more multithreading, a useless tick)-3.247 F
.746(er thread runs simultaneously)-.1 F .193
(which outputs the current time to)108 708 R/F5 10/Courier@0 SF(stderr)
2.693 E F0 -2.15 -.25(ev e)2.693 H .194(ry 5 seconds. The e).25 F .194
(xample contains)-.15 F F1(no)2.694 E F0 .194(error checking and is)
2.694 F F1(only)108 720 Q F0(intended to sho)2.5 E 2.5(wy)-.25 G
(ou the look and feel of)-2.5 E F2(Pth)2.5 E F0(.)A(perl v5.8.0)72 768 Q
198.17(2003-02-17 21)167.62 F 0 Cg EP
%%Page: 22 22
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E/F1 10/Courier@0 SF(#include <stdio.h>)114 84 Q
(#include <stdlib.h>)114 96 Q(#include <errno.h>)114 108 Q
(#include <sys/types.h>)114 120 Q(#include <sys/socket.h>)114 132 Q
(#include <netinet/in.h>)114 144 Q(#include <arpa/inet.h>)114 156 Q
(#include <signal.h>)114 168 Q(#include <netdb.h>)114 180 Q
(#include <unistd.h>)114 192 Q(#include "pth.h")114 204 Q
(#define PORT 12345)114 220.8 Q
(/* the socket connection handler thread */)114 237.6 Q
(static void *handler\(void *_arg\))114 249.6 Q({)114 261.6 Q
(int fd = \(int\)_arg;)138 273.6 Q(time_t now;)138 285.6 Q(char *ct;)138
297.6 Q(now = time\(NULL\);)138 314.4 Q(ct = ctime\(&now\);)138 326.4 Q
(pth_write\(fd, ct, strlen\(ct\)\);)138 338.4 Q(close\(fd\);)138 350.4 Q
(return NULL;)138 362.4 Q(})114 374.4 Q
(/* the stderr time ticker thread */)114 391.2 Q
(static void *ticker\(void *_arg\))114 403.2 Q({)114 415.2 Q
(time_t now;)138 427.2 Q(char *ct;)138 439.2 Q(float load;)138 451.2 Q
(for \(;;\) {)138 468 Q(pth_sleep\(5\);)162 480 Q(now = time\(NULL\);)
162 492 Q(ct = ctime\(&now\);)162 504 Q(ct[strlen\(ct\)-1] = '\\0';)162
516 Q(pth_ctrl\(PTH_CTRL_GETAVLOAD, &load\);)162 528 Q
(printf\("ticker: time: %s, average load: %.2f\\n", ct, load\);)162 540
Q(})138 552 Q(})114 564 Q(/* the main thread/procedure */)114 580.8 Q
(int main\(int argc, char *argv[]\))114 592.8 Q({)114 604.8 Q
(pth_attr_t attr;)138 616.8 Q(struct sockaddr_in sar;)138 628.8 Q
(struct protoent *pe;)138 640.8 Q(struct sockaddr_in peer_addr;)138
652.8 Q(int peer_len;)138 664.8 Q(int sa, sw;)138 676.8 Q(int port;)138
688.8 Q(pth_init\(\);)138 705.6 Q(signal\(SIGPIPE, SIG_IGN\);)138 717.6
Q F0(perl v5.8.0)72 768 Q 198.17(2003-02-17 22)167.62 F 0 Cg EP
%%Page: 23 23
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E/F1 10/Courier@0 SF(attr = pth_attr_new\(\);)138 84 Q
(pth_attr_set\(attr, PTH_ATTR_NAME, "ticker"\);)138 96 Q
(pth_attr_set\(attr, PTH_ATTR_STACK_SIZE, 64*1024\);)138 108 Q
(pth_attr_set\(attr, PTH_ATTR_JOINABLE, FALSE\);)138 120 Q
(pth_spawn\(attr, ticker, NULL\);)138 132 Q
(pe = getprotobyname\("tcp"\);)138 148.8 Q
(sa = socket\(AF_INET, SOCK_STREAM, pe->p_proto\);)138 160.8 Q
(sar.sin_family = AF_INET;)138 172.8 Q
(sar.sin_addr.s_addr = INADDR_ANY;)138 184.8 Q
(sar.sin_port = htons\(PORT\);)138 196.8 Q
(bind\(sa, \(struct sockaddr *\)&sar, sizeof\(struct sockaddr_in\)\);)
138 208.8 Q(listen\(sa, 10\);)138 220.8 Q
(pth_attr_set\(attr, PTH_ATTR_NAME, "handler"\);)138 237.6 Q
(for \(;;\) {)138 249.6 Q(peer_len = sizeof\(peer_addr\);)162 261.6 Q
(sw = pth_accept\(sa, \(struct sockaddr *\)&peer_addr, &peer_len\);)162
273.6 Q(pth_spawn\(attr, handler, \(void *\)sw\);)162 285.6 Q(})138
297.6 Q(})114 309.6 Q/F2 10.95/Times-Bold@0 SF -.11(BU)72 326.4 S
(ILD ENVIR).11 E(ONMENTS)-.329 E F0 .709
(In this section we will discuss the canonical w)108 338.4 R .708
(ays to establish the b)-.1 F .708(uild en)-.2 F .708(vironment for a)
-.4 F/F3 10/Times-Bold@0 SF(Pth)3.208 E F0 .708(based pro-)3.208 F
(gram. The possibilities supported by)108 350.4 Q F3(Pth)2.5 E F0
(range from v)2.5 E(ery simple en)-.15 E(vironments to rather comple)-.4
E 2.5(xo)-.15 G(nes.)-2.5 E F3(Manual Build En)108 373.2 Q(vir)-.4 E
(onment \(No)-.18 E(vice\))-.1 E F0 .4(As a \214rst e)108 390 R .4
(xample, assume we ha)-.15 F .7 -.15(ve t)-.2 H .4(he abo).15 F .7 -.15
(ve t)-.15 H .4(est program staying in the source \214le).15 F F1(foo.c)
2.9 E F0 2.9(.T)C .4(hen we can)-2.9 F(create a v)108 402 Q
(ery simple b)-.15 E(uild en)-.2 E(vironment by just adding the follo)
-.4 E(wing)-.25 E F1(Makefile)2.5 E F0(:)A F1 6($v)114 418.8 S 6(iM)-6 G
(akefile)-6 E/F4 10/Symbol SF<ef>114 430.8 Q F1 30(CC =)6 F(cc)6 E F4
<ef>114 442.8 Q F1 6(CFLAGS =)6 F(`pth-config --cflags`)6 E F4<ef>114
454.8 Q F1(LDFLAGS = `pth-config --ldflags`)6 E F4<ef>114 466.8 Q F1 18
(LIBS =)6 F(`pth-config --libs`)6 E F4<ef>114 478.8 Q<ef>114 490.8 Q F1
(all: foo)6 E F4<ef>114 502.8 Q F1(foo: foo.o)6 E F4<ef>114 514.8 Q F1
($\(CC\) $\(LDFLAGS\) -o foo foo.o $\(LIBS\))30 E F4<ef>114 526.8 Q F1
(foo.o: foo.c)6 E F4<ef>114 538.8 Q F1($\(CC\) $\(CFLAGS\) -c foo.c)30 E
F4<ef>114 550.8 Q F1(clean:)6 E F4<ef>114 562.8 Q F1(rm -f foo foo.o)30
E F0 .183(This imports the necessary compiler and link)108 579.6 R .183
(er \215ags on-the-\215y from the)-.1 F F3(Pth)2.682 E F0 .182
(installation via its)2.682 F F1(pth\255con-)2.682 E(fig)108 591.6 Q F0
(program. This approach is straight-forw)2.5 E(ard and w)-.1 E
(orks \214ne for small projects.)-.1 E F3 -.5(Au)108 614.4 S
(toconf Build En).5 E(vir)-.4 E(onment \(Adv)-.18 E(anced\))-.1 E F0
.648(The pre)108 631.2 R .649(vious approach is simple b)-.25 F .649
(ut in\215e)-.2 F .649(xible. First, to speed up b)-.15 F .649
(uilding, it w)-.2 F .649(ould be nice to not e)-.1 F(xpand)-.15 E .022
(the compiler and link)108 643.2 R .022(er \215ags e)-.1 F -.15(ve)-.25
G .022(ry time the compiler is started. Second, it w).15 F .021
(ould be useful to also be able to)-.1 F -.2(bu)108 655.2 S .357(ild ag)
.2 F .357(ainst uninstalled)-.05 F F3(Pth)2.857 E F0 2.857(,t)C .358
(hat is, ag)-2.857 F .358(ainst a)-.05 F F3(Pth)2.858 E F0 .358
(source tree which w)2.858 F .358(as just con\214gured and b)-.1 F .358
(uilt, b)-.2 F .358(ut not)-.2 F .907(installed. Third, it w)108 667.2 R
.906(ould be also useful to allo)-.1 F 3.406(wc)-.25 G .906
(hecking of the)-3.406 F F3(Pth)3.406 E F0 -.15(ve)3.406 G .906
(rsion to mak).15 F 3.406(es)-.1 G .906(ure it is at least a)-3.406 F
.936(minimum required v)108 679.2 R 3.436(ersion. And)-.15 F(\214nally)
3.436 E 3.436(,i)-.65 G 3.436(tw)-3.436 G .936
(ould be also great to mak)-3.536 F 3.437(es)-.1 G(ure)-3.437 E F3(Pth)
3.437 E F0 -.1(wo)3.437 G .937(rks correctly by \214rst).1 F .097(perfo\
rming some sanity compile and run-time checks. All this can be done if \
we use)108 691.2 R/F5 9/Times-Roman@0 SF(GNU)2.596 E F3(autoconf)2.596 E
F0 .096(and the)2.596 F F1(AC_CHECK_PTH)108 703.2 Q F0(macro pro)2.5 E
(vided by)-.15 E F3(Pth)2.5 E F0 2.5(.F)C
(or this, we establish the follo)-2.65 E(wing three \214les:)-.25 E .286
(First we ag)108 720 R .286(ain need the)-.05 F F1(Makefile)2.786 E F0
2.786(,b)C .286(ut this time it contains)-2.986 F F3(autoconf)2.786 E F0
.286(placeholders and additional cleanup)2.786 F(perl v5.8.0)72 768 Q
198.17(2003-02-17 23)167.62 F 0 Cg EP
%%Page: 24 24
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E(tar)108 84 Q(gets. And we create it under the name)-.18 E/F1 10
/Courier@0 SF(Makefile.in)2.5 E F0 2.5(,b)C(ecause it is no)-2.5 E 2.5
(wa)-.25 G 2.5(ni)-2.5 G(nput \214le for)-2.5 E/F2 10/Times-Bold@0 SF
(autoconf)2.5 E F0(:)A F1 6($v)114 100.8 S 6(iM)-6 G(akefile.in)-6 E/F3
10/Symbol SF<ef>114 112.8 Q F1 30(CC =)6 F(@CC@)6 E F3<ef>114 124.8 Q F1
6(CFLAGS =)6 F(@CFLAGS@)6 E F3<ef>114 136.8 Q F1(LDFLAGS = @LDFLAGS@)6 E
F3<ef>114 148.8 Q F1 18(LIBS =)6 F(@LIBS@)6 E F3<ef>114 160.8 Q<ef>114
172.8 Q F1(all: foo)6 E F3<ef>114 184.8 Q F1(foo: foo.o)6 E F3<ef>114
196.8 Q F1($\(CC\) $\(LDFLAGS\) -o foo foo.o $\(LIBS\))30 E F3<ef>114
208.8 Q F1(foo.o: foo.c)6 E F3<ef>114 220.8 Q F1
($\(CC\) $\(CFLAGS\) -c foo.c)30 E F3<ef>114 232.8 Q F1(clean:)6 E F3
<ef>114 244.8 Q F1(rm -f foo foo.o)30 E F3<ef>114 256.8 Q F1(distclean:)
6 E F3<ef>114 268.8 Q F1(rm -f foo foo.o)30 E F3<ef>114 280.8 Q F1
(rm -f config.log config.status config.cache)30 E F3<ef>114 292.8 Q F1
(rm -f Makefile)30 E F0(Because)108 309.6 Q F2(autoconf)3.52 E F0 1.02
(generates additional \214les, we added a canonical)3.52 F F1(distclean)
3.52 E F0(tar)3.52 E 1.02(get which cleans this)-.18 F(up. Secondly)108
321.6 Q 2.5(,w)-.65 G 2.5(ew)-2.5 G(rote)-2.5 E F1(configure.ac)2.5 E F0
2.5(,a\()C(minimal\))-2.5 E F2(autoconf)2.5 E F0
(script speci\214cation:)2.5 E F1 6($v)114 338.4 S 6(ic)-6 G
(onfigure.ac)-6 E F3<ef>114 350.4 Q F1(AC_INIT\(Makefile.in\))6 E F3<ef>
114 362.4 Q F1(AC_CHECK_PTH\(1.3.0\))6 E F3<ef>114 374.4 Q F1
(AC_OUTPUT\(Makefile\))6 E F0 2.845(Then we let)108 391.2 R F2(autoconf)
5.345 E F0 -.55('s)C F1(aclocal)5.895 E F0 2.845
(program generate for us an)5.345 F F1(aclocal.m4)5.346 E F0 2.846
(\214le containing)5.346 F F2(Pth)5.346 E F0 -.55('s)C F1(AC_CHECK_PTH)
108 403.2 Q F0 .174(macro. Then we generate the \214nal)2.674 F F1
(configure)2.674 E F0 .173(script out of this)2.674 F F1(aclocal.m4)
2.673 E F0 .173(\214le and)2.673 F(the)108 415.2 Q F1(configure.ac)2.5 E
F0(\214le:)2.5 E F1 6($a)114 432 S(clocal --acdir=`pth-config --acdir`)
-6 E 6($a)114 444 S(utoconf)-6 E F0(After these steps, the w)108 460.8 Q
(orking directory should look similar to this:)-.1 E F1 6($l)114 477.6 S
6(s-)-6 G(l)-6 E 6(-rw-r--r-- 1)114 489.6 R 6(rse users)6 F(176 Nov)24 E
6(31)12 G(1:11 Makefile.in)-6 E 6(-rw-r--r-- 1)114 501.6 R 6
(rse users 15314)6 F 6(Nov 3)6 F(11:16 aclocal.m4)6 E 6(-rwxr-xr-x 1)114
513.6 R 6(rse users 52045)6 F 6(Nov 3)6 F(11:16 configure)6 E 6
(-rw-r--r-- 1)114 525.6 R 6(rse users)6 F(63 Nov)30 E 6(31)12 G
(1:11 configure.ac)-6 E 6(-rw-r--r-- 1)114 537.6 R 6(rse users)6 F
(4227 Nov)18 E 6(31)12 G(1:11 foo.c)-6 E F0 1.21(If we no)108 554.4 R
3.71(wr)-.25 G(un)-3.71 E F1(configure)3.71 E F0 1.21(we get a correct)
3.71 F F1(Makefile)3.71 E F0 1.21(which immediately can be used to b)
3.71 F(uild)-.2 E F1(foo)3.71 E F0(\(assuming that)108 566.4 Q F2(Pth)
2.5 E F0(is already installed some)2.5 E(where, so that)-.25 E F1
(pth\255config)2.5 E F0(is in)2.5 E F1($PATH)2.5 E F0(\):)A(perl v5.8.0)
72 768 Q 198.17(2003-02-17 24)167.62 F 0 Cg EP
%%Page: 25 25
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E/F1 10/Courier@0 SF 6($.)114 84 S(/configure)-6 E
(creating cache ./config.cache)114 96 Q(checking for gcc... gcc)114 108
Q(checking whether the C compiler \(gcc)114 120 Q 6(\)w)18 G
(orks... yes)-6 E(checking whether the C compiler \(gcc)114 132 Q 6(\)i)
18 G 6(sac)-6 G(ross-compiler... no)-6 E
(checking whether we are using GNU C... yes)114 144 Q
(checking whether gcc accepts -g... yes)114 156 Q
(checking how to run the C preprocessor... gcc -E)114 168 Q
(checking for GNU Pth... version 1.3.0, installed under /usr/local)114
180 Q(updating cache ./config.cache)114 192 Q(creating ./config.status)
114 204 Q(creating Makefile)114 216 Q(rse@en1:/e/gnu/pth/ac)114 228 Q 6
($m)114 240 S(ake)-6 E(gcc -g -O2 -I/usr/local/include -c foo.c)114 252
Q(gcc -L/usr/local/lib -o foo foo.o -lpth)114 264 Q F0(If)108 280.8 Q/F2
10/Times-Bold@0 SF(Pth)3.615 E F0 1.115
(is installed in non-standard locations or)3.615 F F1(pth\255config)
3.615 E F0 1.115(is not in)3.615 F F1($PATH)3.615 E F0 3.615(,o)C 1.115
(ne just has to drop the)-3.615 F F1(configure)108 292.8 Q F0 .509
(script a note about the location by running)3.009 F F1(configure)3.009
E F0 .51(with the option)3.009 F F1(\255\255with\255pth=)3.01 E/F3 10
/Times-Italic@0 SF(dir)A F0(\(where)108 304.8 Q F3(dir)2.5 E F0
(is the ar)2.5 E(gument which w)-.18 E(as used with the)-.1 E F1
(\255\255prefix)2.5 E F0(option when)2.5 E F2(Pth)2.5 E F0 -.1(wa)2.5 G
2.5(si).1 G(nstalled\).)-2.5 E F2 -.5(Au)108 327.6 S(toconf Build En).5
E(vir)-.4 E(onment with Local Copy of Pth \(Expert\))-.18 E F0 .544
(Finally let us assume the)108 344.4 R F1(foo)3.044 E F0 .544
(program stays under either a)3.044 F/F4 9/Times-Italic@0 SF(GPL)3.043 E
F0(or)3.043 E F4(LGPL)3.043 E F0(distrib)3.043 E .543
(ution license and we w)-.2 F(ant)-.1 E .841(to mak)108 356.4 R 3.341
(ei)-.1 G 3.341(tas)-3.341 G .841(tand-alone package for easier distrib)
-3.341 F .841(ution and installation.)-.2 F .841(That is, we don')5.841
F 3.342(tw)-.18 G .842(ant to oblige)-3.442 F .361
(the end-user to install)108 368.4 R F2(Pth)2.861 E F0 .361
(just to allo)2.861 F 2.861(wo)-.25 G(ur)-2.861 E F1(foo)2.861 E F0 .36
(package to compile. F)2.861 F .36(or this, it is a con)-.15 F -.15(ve)
-.4 G .36(nient practice to).15 F .443
(include the required libraries \(here)108 380.4 R F2(Pth)2.944 E F0
2.944(\)i)C .444(nto the source tree of the package \(here)-2.944 F F1
(foo)2.944 E F0(\).)A F2(Pth)5.444 E F0 .444(ships with all)2.944 F .907
(necessary support to allo)108 392.4 R 3.407(wu)-.25 G 3.407(st)-3.407 G
3.407(oe)-3.407 G .907(asily achie)-3.407 F 1.207 -.15(ve t)-.25 H .907
(his approach. Say).15 F 3.407(,w)-.65 G 3.407(ew)-3.407 G(ant)-3.507 E
F2(Pth)3.407 E F0 .907(in a subdirectory named)3.407 F F1(pth/)108 404.4
Q F0(and this directory should be seamlessly inte)2.5 E
(grated into the con\214guration and b)-.15 E(uild process of)-.2 E F1
(foo)2.5 E F0(.)A .882(First we ag)108 421.2 R .883(ain start with the)
-.05 F F1(Makefile.in)3.383 E F0 3.383(,b)C .883
(ut this time it is a more adv)-3.583 F .883(anced v)-.25 F .883
(ersion which supports)-.15 F(subdirectory mo)108 433.2 Q -.15(ve)-.15 G
(ment:).15 E(perl v5.8.0)72 768 Q 198.17(2003-02-17 25)167.62 F 0 Cg EP
%%Page: 26 26
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E/F1 10/Courier@0 SF 6($v)114 84 S 6(iM)-6 G(akefile.in)-6 E/F2 10
/Symbol SF<ef>114 96 Q F1 30(CC =)6 F(@CC@)6 E F2<ef>114 108 Q F1 6
(CFLAGS =)6 F(@CFLAGS@)6 E F2<ef>114 120 Q F1(LDFLAGS = @LDFLAGS@)6 E F2
<ef>114 132 Q F1 18(LIBS =)6 F(@LIBS@)6 E F2<ef>114 144 Q<ef>114 156 Q
F1(SUBDIRS = pth)6 E F2<ef>114 168 Q<ef>114 180 Q F1
(all: subdirs_all foo)6 E F2<ef>114 192 Q<ef>114 204 Q F1(subdirs_all:)6
E F2<ef>114 216 Q F1(@$\(MAKE\) $\(MFLAGS\) subdirs TARGET=all)30 E F2
<ef>114 228 Q F1(subdirs_clean:)6 E F2<ef>114 240 Q F1
(@$\(MAKE\) $\(MFLAGS\) subdirs TARGET=clean)30 E F2<ef>114 252 Q F1
(subdirs_distclean:)6 E F2<ef>114 264 Q F1
(@$\(MAKE\) $\(MFLAGS\) subdirs TARGET=distclean)30 E F2<ef>114 276 Q F1
(subdirs:)6 E F2<ef>114 288 Q F1(@for subdir in $\(SUBDIRS\); do \\)30 E
F2<ef>114 300 Q F1(echo "===> $$subdir \($\(TARGET\)\)"; \\)54 E F2<ef>
114 312 Q F1(\(cd $$subdir; $\(MAKE\) $\(MFLAGS\) $\(TARGET\))54 E F2
<efef>6 E F1(exit 1\))6 E F2<efef>6 E F1(exit 1; \\)6 E F2<ef>114 324 Q
F1(echo "<=== $$subdir"; \\)54 E F2<ef>114 336 Q F1(done)30 E F2<ef>114
348 Q<ef>114 360 Q F1(foo: foo.o)6 E F2<ef>114 372 Q F1
($\(CC\) $\(LDFLAGS\) -o foo foo.o $\(LIBS\))30 E F2<ef>114 384 Q F1
(foo.o: foo.c)6 E F2<ef>114 396 Q F1($\(CC\) $\(CFLAGS\) -c foo.c)30 E
F2<ef>114 408 Q<ef>114 420 Q F1(clean: subdirs_clean)6 E F2<ef>114 432 Q
F1(rm -f foo foo.o)30 E F2<ef>114 444 Q F1(distclean: subdirs_distclean)
6 E F2<ef>114 456 Q F1(rm -f foo foo.o)30 E F2<ef>114 468 Q F1
(rm -f config.log config.status config.cache)30 E F2<ef>114 480 Q F1
(rm -f Makefile)30 E F0(Then we create a slightly dif)108 496.8 Q
(ferent)-.25 E/F3 10/Times-Bold@0 SF(autoconf)2.5 E F0(script)2.5 E F1
(configure.ac)2.5 E F0(:)A F1 6($v)114 513.6 S 6(ic)-6 G(onfigure.ac)-6
E F2<ef>114 525.6 Q F1(AC_INIT\(Makefile.in\))6 E F2<ef>114 537.6 Q F1
(AC_CONFIG_AUX_DIR\(pth\))6 E F2<ef>114 549.6 Q F1
(AC_CHECK_PTH\(1.3.0, subdir:pth --disable-tests\))6 E F2<ef>114 561.6 Q
F1(AC_CONFIG_SUBDIRS\(pth\))6 E F2<ef>114 573.6 Q F1
(AC_OUTPUT\(Makefile\))6 E F0 4.387(Here we pro)108 590.4 R 4.387
(vided a def)-.15 F 4.387(ault v)-.1 F 4.387(alue for)-.25 F F1(foo)
6.886 E F0 -.55('s)C F1(\255\255with\255pth)7.436 E F0 4.386
(option as the second ar)6.886 F 4.386(gument to)-.18 F F1(AC_CHECK_PTH)
108 602.4 Q F0 .213(which indicates that)2.713 F F3(Pth)2.713 E F0 .214
(can be found in the subdirectory named)2.713 F F1(pth/)2.714 E F0 2.714
(.A)C .214(dditionally we)-2.714 F .363(speci\214ed that the)108 614.4 R
F1(\255\255disable\255tests)2.863 E F0 .363(option of)2.863 F F3(Pth)
2.863 E F0 .363(should be passed to the)2.863 F F1(pth/)2.863 E F0
(subdirectory)2.862 E 2.862(,b)-.65 G(ecause)-2.862 E .073
(we need only to b)108 626.4 R .073(uild the)-.2 F F3(Pth)2.573 E F0
.074(library itself. And we added a)2.573 F F1(AC_CONFIG_SUBDIR)2.574 E
F0 .074(call which indicates to)2.574 F F3(autoconf)108 638.4 Q F0 .738
(that it should con\214gure the)3.238 F F1(pth/)3.238 E F0(subdirectory)
3.237 E 3.237(,t)-.65 G .737(oo. The)-3.237 F F1(AC_CONFIG_AUX_DIR)3.237
E F0(directi)3.237 E 1.037 -.15(ve w)-.25 H(as).05 E 2.502
(added just to mak)108 650.4 R(e)-.1 E F3(autoconf)5.002 E F0(happ)5.002
E 3.802 -.65(y, b)-.1 H 2.502(ecause it w).65 F 2.503(ants to \214nd a)
-.1 F F1(install.sh)5.003 E F0(or)5.003 E F1(shtool)5.003 E F0 2.503
(script if)5.003 F F1(AC_CONFIG_SUBDIRS)108 662.4 Q F0(is used.)2.5 E
(No)108 679.2 Q 2.592(ww)-.25 G 2.592(el)-2.592 G(et)-2.592 E F3
(autoconf)2.592 E F0 -.55('s)C F1(aclocal)3.142 E F0 .092(program ag)
2.592 F .092(ain generate for us an)-.05 F F1(aclocal.m4)2.592 E F0 .092
(\214le with the contents of)2.592 F F3(Pth)108 691.2 Q F0 -.55('s)C F1
(AC_CHECK_PTH)3.449 E F0 2.899(macro. Finally)2.899 F .399
(we generate the)2.899 F F1(configure)2.899 E F0 .399
(script out of this)2.899 F F1(aclocal.m4)2.9 E F0(\214le)2.9 E(and the)
108 703.2 Q F1(configure.ac)2.5 E F0(\214le.)2.5 E(perl v5.8.0)72 768 Q
198.17(2003-02-17 26)167.62 F 0 Cg EP
%%Page: 27 27
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E/F1 10/Courier@0 SF 6($a)114 84 S
(clocal --acdir=`pth-config --acdir`)-6 E 6($a)114 96 S(utoconf)-6 E F0
(No)108 112.8 Q 3.429(ww)-.25 G 3.429(eh)-3.429 G -2.25 -.2(av e)-3.429
H .929(to create the)3.629 F F1(pth/)3.429 E F0 .928
(subdirectory itself. F)3.428 F .928(or this, we e)-.15 F .928
(xtract the)-.15 F/F2 10/Times-Bold@0 SF(Pth)3.428 E F0(distrib)3.428 E
.928(ution to the)-.2 F F1(foo)3.428 E F0
(source tree and just rename it to)108 124.8 Q F1(pth/)2.5 E F0(:)A F1 6
($g)114 141.6 S(unzip <pth-X.Y.Z.tar.gz)-6 E/F3 10/Symbol SF<ef>6 E F1
(tar xvf -)6 E 6($m)114 153.6 S 6(vp)-6 G(th-X.Y.Z pth)-6 E F0 .667
(Optionally to reduce the size of the)108 170.4 R F1(pth/)3.167 E F0
(subdirectory)3.167 E 3.167(,w)-.65 G 3.167(ec)-3.167 G .667
(an strip do)-3.167 F .667(wn the)-.25 F F2(Pth)3.167 E F0 .668
(sources to a minimum)3.168 F(with the)108 182.4 Q/F4 10/Times-Italic@0
SF(striptease)2.5 E F0(feature:)2.5 E F1 6($c)114 199.2 S 6(dp)-6 G(th)
-6 E 6($.)114 211.2 S(/configure)-6 E 6($m)114 223.2 S(ake striptease)-6
E 6($c)114 235.2 S 6(d.)-6 G(.)-6 E F0(After this the source tree of)108
252 Q F1(foo)2.5 E F0(should look similar to this:)2.5 E F1 6($l)114
268.8 S 6(s-)-6 G(l)-6 E 6(-rw-r--r-- 1)114 280.8 R 6(rse users)6 F
(709 Nov)24 E 6(31)12 G(1:51 Makefile.in)-6 E 6(-rw-r--r-- 1)114 292.8 R
6(rse users 16431)6 F 6(Nov 3)6 F(12:20 aclocal.m4)6 E 6(-rwxr-xr-x 1)
114 304.8 R 6(rse users 57403)6 F 6(Nov 3)6 F(12:21 configure)6 E 6
(-rw-r--r-- 1)114 316.8 R 6(rse users)6 F(129 Nov)24 E 6(31)12 G
(2:21 configure.ac)-6 E 6(-rw-r--r-- 1)114 328.8 R 6(rse users)6 F
(4227 Nov)18 E 6(31)12 G(1:11 foo.c)-6 E 6(drwxr-xr-x 2)114 340.8 R 6
(rse users)6 F(3584 Nov)18 E 6(31)12 G(2:36 pth)-6 E 6($l)114 352.8 S 6
(s-)-6 G 6(lp)-6 G(th/)-6 E 6(-rw-rw-r-- 1)114 364.8 R 6(rse users)6 F
(26344 Nov)18 E 6(12)12 G(0:12 COPYING)-6 E 6(-rw-rw-r-- 1)114 376.8 R 6
(rse users)6 F(2042 Nov)24 E 6(31)12 G(2:36 Makefile.in)-6 E 6
(-rw-rw-r-- 1)114 388.8 R 6(rse users)6 F(3967 Nov)24 E 6(11)12 G
(9:48 README)-6 E 6(-rw-rw-r-- 1)114 400.8 R 6(rse users)6 F(340 Nov)30
E 6(31)12 G(2:36 README.1st)-6 E 6(-rw-rw-r-- 1)114 412.8 R 6(rse users)
6 F(28719 Oct 31 17:06 config.guess)18 E 6(-rw-rw-r-- 1)114 424.8 R 6
(rse users)6 F(24274 Aug 18 13:31 config.sub)18 E 6(-rwxrwxr-x 1)114
436.8 R 6(rse users 155141)6 F 6(Nov 3)6 F(12:36 configure)6 E 6
(-rw-rw-r-- 1)114 448.8 R 6(rse users 162021)6 F 6(Nov 3)6 F
(12:36 pth.c)6 E 6(-rw-rw-r-- 1)114 460.8 R 6(rse users)6 F(18687 Nov)18
E 6(21)12 G(5:19 pth.h.in)-6 E 6(-rw-rw-r-- 1)114 472.8 R 6(rse users)6
F(5251 Oct 31 12:46 pth_acdef.h.in)24 E 6(-rw-rw-r-- 1)114 484.8 R 6
(rse users)6 F(2120 Nov)24 E 6(11)12 G(1:27 pth_acmac.h.in)-6 E 6
(-rw-rw-r-- 1)114 496.8 R 6(rse users)6 F(2323 Nov)24 E 6(11)12 G
(1:27 pth_p.h.in)-6 E 6(-rw-rw-r-- 1)114 508.8 R 6(rse users)6 F
(946 Nov)30 E 6(11)12 G(1:27 pth_vers.c)-6 E 6(-rw-rw-r-- 1)114 520.8 R
6(rse users)6 F(26848 Nov)18 E 6(11)12 G(1:27 pthread.c)-6 E 6
(-rw-rw-r-- 1)114 532.8 R 6(rse users)6 F(18772 Nov)18 E 6(11)12 G
(1:27 pthread.h.in)-6 E 6(-rwxrwxr-x 1)114 544.8 R 6(rse users)6 F
(26188 Nov)18 E 6(31)12 G(2:36 shtool)-6 E F0(No)108 561.6 Q 2.5(ww)-.25
G(hen we con\214gure and b)-2.5 E(uild the)-.2 E F1(foo)2.5 E F0
(package it looks similar to this:)2.5 E(perl v5.8.0)72 768 Q 198.17
(2003-02-17 27)167.62 F 0 Cg EP
%%Page: 28 28
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E/F1 10/Courier@0 SF 6($.)114 84 S(/configure)-6 E
(creating cache ./config.cache)114 96 Q(checking for gcc... gcc)114 108
Q(checking whether the C compiler \(gcc)114 120 Q 6(\)w)18 G
(orks... yes)-6 E(checking whether the C compiler \(gcc)114 132 Q 6(\)i)
18 G 6(sac)-6 G(ross-compiler... no)-6 E
(checking whether we are using GNU C... yes)114 144 Q
(checking whether gcc accepts -g... yes)114 156 Q
(checking how to run the C preprocessor... gcc -E)114 168 Q
(checking for GNU Pth... version 1.3.0, local under pth)114 180 Q
(updating cache ./config.cache)114 192 Q(creating ./config.status)114
204 Q(creating Makefile)114 216 Q(configuring in pth)114 228 Q
(running /bin/sh ./configure)114 240 Q(--enable-subdir --enable-batch)12
E(--disable-tests --cache-file=.././config.cache --srcdir=.)114 252 Q
(loading cache .././config.cache)114 264 Q
(checking for gcc... \(cached\) gcc)114 276 Q
(checking whether the C compiler \(gcc)114 288 Q 6(\)w)18 G(orks... yes)
-6 E(checking whether the C compiler \(gcc)114 300 Q 6(\)i)18 G 6(sac)-6
G(ross-compiler... no)-6 E([...])114 312 Q 6($m)114 324 S(ake)-6 E
(===> pth \(all\))114 336 Q
(./shtool scpp -o pth_p.h -t pth_p.h.in -Dcpp -Cintern -M '==#==' pth.c)
114 348 Q(pth_vers.c)114 360 Q(gcc -c -I. -O2 -pipe pth.c)114 372 Q
(gcc -c -I. -O2 -pipe pth_vers.c)114 384 Q
(ar rc libpth.a pth.o pth_vers.o)114 396 Q(ranlib libpth.a)114 408 Q
(<=== pth)114 420 Q(gcc -g -O2 -Ipth -c foo.c)114 432 Q
(gcc -Lpth -o foo foo.o -lpth)114 444 Q F0 .222(As you can see,)108
460.8 R/F2 10/Times-Bold@0 SF(autoconf)2.722 E F0(no)2.722 E 2.722(wa)
-.25 G .222(utomatically con\214gures the local \(stripped do)-2.722 F
.222(wn\) cop)-.25 F 2.722(yo)-.1 G(f)-2.722 E F2(Pth)2.721 E F0 .221
(in the subdi-)2.721 F(rectory)108 472.8 Q F1(pth/)2.5 E F0(and the)2.5
E F1(Makefile)2.5 E F0(automatically b)2.5 E(uilds the subdirectory)-.2
E 2.5(,t)-.65 G(oo.)-2.5 E/F3 10.95/Times-Bold@0 SF
(SYSTEM CALL WRAPPER F)72 489.6 Q -.602(AC)-.986 G(ILITY).602 E F2(Pth)
108 501.6 Q F0 2.004(per def)4.504 F 2.004(ault uses an e)-.1 F(xplicit)
-.15 E/F4 9/Times-Roman@0 SF(API)4.504 E F0 4.504(,i)C 2.004
(ncluding the system calls. F)-4.504 F 2.005(or instance you')-.15 F
2.305 -.15(ve t)-.5 H 4.505(oe).15 G 2.005(xplicitly use)-4.655 F/F5 10
/Times-Italic@0 SF(pth_r)108 513.6 Q(ead)-.37 E F0 .295
(\(3\) when you need a thread-a)1.666 F -.1(wa)-.15 G(re).1 E F5 -.37
(re)2.795 G(ad).37 E F0 .295(\(3\) and cannot e)1.666 F .295
(xpect that by just calling)-.15 F F5 -.37(re)2.795 G(ad).37 E F0 .295
(\(3\) only the)1.666 F 1.207(current thread is block)108 525.6 R 1.207
(ed. Instead with the standard)-.1 F F5 -.37(re)3.707 G(ad).37 E F0
1.207(\(3\) call the whole process will be block)1.666 F 1.208(ed. But)
-.1 F .153(because for some applications \(mainly those consisting of l\
ots of third-party stuf)108 537.6 R .153(f\) this can be incon)-.25 F
-.15(ve)-.4 G(nient.).15 E 1.548(Here it')108 549.6 R 4.048(sr)-.55 G
1.548(equired that a call to)-4.048 F F5 -.37(re)4.048 G(ad).37 E F0
1.548(\(3\) `magically' means)1.666 F F5(pth_r)4.048 E(ead)-.37 E F0
1.548(\(3\). The problem here is that such)1.666 F(magic)108 561.6 Q F2
(Pth)2.617 E F0 .117(cannot pro)2.617 F .117(vide per def)-.15 F .117
(ault because it')-.1 F 2.617(sn)-.55 G .117(ot really portable.)-2.617
F(Ne)5.117 E -.15(ve)-.25 G(rtheless).15 E F2(Pth)2.617 E F0(pro)2.617 E
.117(vides a tw)-.15 F 2.616(os)-.1 G(tep)-2.616 E(approach to solv)108
573.6 Q 2.5(et)-.15 G(his problem:)-2.5 E F2(Soft System Call Mapping)
108 596.4 Q F0 5.066(This v)108 613.2 R 5.066(ariant is a)-.25 F -.25
(va)-.2 G 5.066(ilable on all platforms and can).25 F F5(always)7.566 E
F0 5.066(be enabled by b)7.566 F(uilding)-.2 E F2(Pth)7.566 E F0(with)
7.566 E F1(\255\255enable\255syscall\255soft)108 625.2 Q F0 3.184(.T)C
.684(his then triggers some)-3.184 F F1(#define)3.183 E F0 1.783 -.55
('s i)D 3.183(nt).55 G(he)-3.183 E F1(pth.h)3.183 E F0 .683
(header which map for)3.183 F(instance)108 637.2 Q F5 -.37(re)2.755 G
(ad).37 E F0 .255(\(3\) to)1.666 F F5(pth_r)2.755 E(ead)-.37 E F0 .255
(\(3\), etc. Currently the follo)1.666 F .256
(wing functions are mapped:)-.25 F F5(fork)2.756 E F0(\(2\),)1.666 E F5
(nanosleep)2.756 E F0(\(3\),)1.666 E F5(usleep)108 649.2 Q F0(\(3\),)
1.666 E F5(sleep)3.176 E F0(\(3\),)1.666 E F5(sigwait)3.176 E F0(\(3\),)
1.666 E F5(waitpid)3.176 E F0(\(2\),)1.666 E F5(system)3.176 E F0
(\(3\),)1.666 E F5(select)3.176 E F0(\(2\),)1.666 E F5(poll)3.175 E F0
(\(2\),)1.666 E F5(connect)3.175 E F0(\(2\),)1.666 E F5(accept)3.175 E
F0(\(2\),)1.666 E F5 -.37(re)3.175 G(ad).37 E F0(\(2\),)1.666 E F5
(write)108 661.2 Q F0(\(2\),)1.666 E F5 -.37(re)2.5 G(cv).37 E F0
(\(2\),)1.666 E F5(send)2.5 E F0(\(2\),)1.666 E F5 -.37(re)2.5 G(cvfr)
.37 E(om)-.45 E F0(\(2\),)1.666 E F5(sendto)2.5 E F0(\(2\).)1.666 E
(The dra)108 678 Q(wback of this approach is just that really all sourc\
e \214les of the application where these function calls)-.15 E .325
(occur ha)108 690 R .625 -.15(ve t)-.2 H 2.825(oi).15 G(nclude)-2.825 E
F1(pth.h)2.825 E F0 2.825(,o)C 2.825(fc)-2.825 G .325
(ourse. And this also means that e)-2.825 F .325
(xisting libraries, including the v)-.15 F(endor')-.15 E(s)-.55 E F2
(stdio)108 702 Q F0 2.5(,u)C(sually will still block the whole process \
if one of its I/O functions block.)-2.5 E(perl v5.8.0)72 768 Q 198.17
(2003-02-17 28)167.62 F 0 Cg EP
%%Page: 29 29
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E/F1 10/Times-Bold@0 SF(Hard System Call Mapping)108 84 Q F0 1.07
(This v)108 100.8 R 1.07(ariant is a)-.25 F -.25(va)-.2 G 1.07
(ilable only on those platforms where the).25 F/F2 10/Times-Italic@0 SF
(syscall)3.57 E F0 1.07(\(2\) function e)1.666 F 1.071
(xists and there it can be)-.15 F 2.251(enabled by b)108 112.8 R
(uilding)-.2 E F1(Pth)4.751 E F0(with)4.751 E/F3 10/Courier@0 SF
(\255\255enable\255syscall\255hard)4.751 E F0 4.751(.T)C 2.251
(his then b)-4.751 F 2.251(uilds wrapper functions \(for)-.2 F
(instances)108 124.8 Q F2 -.37(re)6.598 G(ad).37 E F0 4.098
(\(3\)\) into the)1.666 F F1(Pth)6.598 E F0 4.098
(library which internally call the real)6.598 F F1(Pth)6.598 E F0 4.098
(replacement functions)6.598 F(\()108 136.8 Q F2(pth_r)A(ead)-.37 E F0
.965(\(3\)\). Currently the follo)1.666 F .965
(wing functions are mapped:)-.25 F F2(fork)3.465 E F0(\(2\),)1.666 E F2
(nanosleep)3.465 E F0(\(3\),)1.666 E F2(usleep)3.465 E F0(\(3\),)1.666 E
F2(sleep)3.465 E F0(\(3\),)1.666 E F2(waitpid)108 148.8 Q F0(\(2\),)
1.666 E F2(system)2.5 E F0(\(3\),)1.666 E F2(select)2.5 E F0(\(2\),)
1.666 E F2(poll)2.5 E F0(\(2\),)1.666 E F2(connect)2.5 E F0(\(2\),)1.666
E F2(accept)2.5 E F0(\(2\),)1.666 E F2 -.37(re)2.5 G(ad).37 E F0(\(2\),)
1.666 E F2(write)2.5 E F0(\(2\).)1.666 E .632(The dra)108 165.6 R .633
(wback of this approach is that it depends on)-.15 F F2(syscall)3.133 E
F0 .633(\(2\) interf)1.666 F .633
(ace and prototype con\215icts can occur)-.1 F .444(while b)108 177.6 R
.444(uilding the wrapper functions due to dif)-.2 F .444
(ferent function signatures in the v)-.25 F .443
(endor C header \214les.)-.15 F(But)5.443 E .788(the adv)108 189.6 R
.788(antage of this mapping v)-.25 F .788(ariant is that the source \
\214les of the application where these function calls)-.25 F 2.375
(occur ha)108 201.6 R 2.675 -.15(ve n)-.2 H 2.375(ot to include).15 F F3
(pth.h)4.874 E F0 2.374(and that e)4.874 F 2.374
(xisting libraries, including the v)-.15 F(endor')-.15 E(s)-.55 E F1
(stdio)4.874 E F0 4.874(,m)C(agically)-4.874 E(become thread-a)108 213.6
Q -.1(wa)-.15 G(re \(and then block only the current thread\).).1 E/F4
10.95/Times-Bold@0 SF(IMPLEMENT)72 230.4 Q -1.04(AT)-.986 G(ION NO)1.04
E(TES)-.438 E F1(Pth)108 242.4 Q F0 1.285(is v)3.785 F 1.285(ery portab\
le because it has only one part which perhaps has to be ported to ne)
-.15 F 3.786(wp)-.25 G 1.286(latforms \(the)-3.786 F .434(machine conte)
108 254.4 R .434(xt initialization\). But it is written in a w)-.15 F
.433(ay which w)-.1 F .433(orks on mostly all Unix platforms which)-.1 F
(support)108 266.4 Q F2(mak)2.939 E(econte)-.1 E(xt)-.2 E F0 .439
(\(2\) or at least)1.666 F F2(sigstac)2.939 E(k)-.2 E F0 .439(\(2\) or)
1.666 F F2(sigaltstac)2.939 E(k)-.2 E F0 .439(\(2\) [see)1.666 F F3
(pth_mctx.c)2.94 E F0 .44(for details]. An)2.94 F 2.94(yo)-.15 G(ther)
-2.94 E F1(Pth)108 278.4 Q F0(code is)2.5 E/F5 9/Times-Roman@0 SF(POSIX)
2.5 E F0(and)2.5 E F5(ANSI)2.5 E F0 2.5(Cb)2.5 G(ased only)-2.5 E(.)-.65
E 3.144(The conte)108 295.2 R 3.144
(xt switching is done via either SUSv2)-.15 F F2(mak)5.644 E(econte)-.1
E(xt)-.2 E F0 3.144(\(2\) or)1.666 F F5(POSIX)5.644 E F0(mak)5.644 E
(e[sig])-.1 E F2(setjmp)A F0 3.143(\(3\) and)1.666 F([sig])108 307.2 Q
F2(longjmp)A F0 .437(\(3\). Here all)1.666 F F5(CPU)2.937 E F0(re)2.937
E .437(gisters, the program counter and the stack pointer are switched.\
 Addition-)-.15 F .654(ally the)108 319.2 R F1(Pth)3.154 E F0 .654
(dispatcher switches also the global Unix)3.154 F F3(errno)3.154 E F0
-.25(va)3.154 G .654(riable [see).25 F F3(pth_mctx.c)3.154 E F0 .654
(for details] and)3.154 F .072(the signal mask \(either implicitly via)
108 331.2 R F2(sigsetjmp)2.572 E F0 .073(\(3\) or in an emulated w)1.666
F .073(ay via e)-.1 F(xplicit)-.15 E F2(setpr)2.573 E(ocmask)-.45 E F0
.073(\(2\) calls\).)1.666 F(The)108 348 Q F1(Pth)3.079 E F0 -2.15 -.25
(ev e)3.079 H .579(nt manager is mainly).25 F F2(select)3.079 E F0 .579
(\(2\) and)1.666 F F2 -.1(ge)3.079 G(ttimeofday).1 E F0 .578
(\(2\) based, i.e., the current time is fetched via)1.666 F F2 -.1(ge)
108 360 S(ttimeofday).1 E F0 .24(\(2\) once per conte)1.666 F .24
(xt switch for time calculations and all I/O e)-.15 F -.15(ve)-.25 G
.241(nts are implemented via a sin-).15 F(gle central)108 372 Q F2
(select)2.5 E F0(\(2\) call [see)1.666 E F3(pth_sched.c)2.5 E F0
(for details].)2.5 E .388(The thread control block management is done v\
ia virtual priority queues without an)108 388.8 R 2.888(ya)-.15 G .388
(dditional data struc-)-2.888 F .276(ture o)108 400.8 R -.15(ve)-.15 G
.276(rhead. F).15 F .276(or this, the queue linkage attrib)-.15 F .276
(utes are part of the thread control blocks and the queues are)-.2 F
3.75(actually implemented as rings with a selected element as the entry\
 point [see)108 412.8 R F3(pth_tcb.h)6.25 E F0(and)6.25 E F3
(pth_pqueue.c)108 424.8 Q F0(for details].)2.5 E 1.332
(Most time critical code sections \(especially the dispatcher and e)108
441.6 R -.15(ve)-.25 G 1.333(nt manager\) are speeded up by inline).15 F
.697(functions \(implemented as)108 453.6 R F5(ANSI)3.197 E F0 3.197(Cp)
3.197 G .697(re-processor macros\). Additionally an)-3.197 F 3.197(yd)
-.15 G(eb)-3.197 E .697(ugging code is)-.2 F F2(completely)3.196 E F0
(remo)108 465.6 Q -.15(ve)-.15 G 2.827(df).15 G .327
(rom the source when not b)-2.827 F .328(uilt with)-.2 F F3
(\255DPTH_DEBUG)2.828 E F0 .328(\(see Autoconf)2.828 F F3
(\255\255enable\255debug)2.828 E F0(option\),)2.828 E
(i.e., not only stub functions remain [see)108 477.6 Q F3(pth_debug.c)
2.5 E F0(for details].)2.5 E F4(RESTRICTIONS)72 494.4 Q F1(Pth)108 506.4
Q F0 1.722(\(intentionally\) pro)4.222 F 1.722
(vides no replacements for non-thread-safe functions \(lik)-.15 F(e)-.1
E F2(strtok)4.222 E F0 1.722(\(3\) which uses a)1.666 F 1.18
(static internal b)108 518.4 R(uf)-.2 E 1.18
(fer\) or synchronous system functions \(lik)-.25 F(e)-.1 E F2 -.1(ge)
3.68 G(thostbyname).1 E F0 1.181(\(3\) which doesn')1.666 F 3.681(tp)
-.18 G(ro)-3.681 E 1.181(vide an)-.15 F .452
(asynchronous mode where it doesn')108 530.4 R 2.952(tb)-.18 G .452
(lock\). When you w)-2.952 F .452
(ant to use those functions in your serv)-.1 F .451(er applica-)-.15 F
.814(tion together with threads, you')108 542.4 R 1.114 -.15(ve t)-.5 H
3.314(oe).15 G .814(ither link the application ag)-3.314 F .814
(ainst special third-party libraries \(or for)-.05 F .413
(thread\255safe/reentrant functions possibly ag)108 554.4 R .413
(ainst an e)-.05 F(xisting)-.15 E F3(libc_r)2.913 E F0 .413
(of the platform v)2.913 F .413(endor\). F)-.15 F .413(or an asyn-)-.15
F(chronous)108 566.4 Q F5(DNS)2.976 E F0(resolv)2.976 E .476
(er library use the)-.15 F F5(GNU)2.976 E F1(adns)2.976 E F0 .476
(package from Ian Jackson \( see http://www)2.976 F(.gnu.or)-.65 E
(g/soft-)-.18 E -.1(wa)108 578.4 S(re/adns/adns.html \).).1 E F4(HIST)72
595.2 Q(OR)-.197 E(Y)-.383 E F0(The)108 607.2 Q F1(Pth)3.698 E F0 1.198
(library w)3.698 F 1.197
(as designed and implemented between February and July 1999 by)-.1 F F2
1.197(Ralf S. Eng)3.697 F(elsc)-.1 E(hall)-.15 E F0 1.18(after e)108
619.2 R -.25(va)-.25 G 1.181(luating numerous \(mostly preempti).25 F
-.15(ve)-.25 G 3.681(\)t).15 G 1.181(hread libraries and after intensi)
-3.681 F 1.481 -.15(ve d)-.25 H 1.181(iscussions with).15 F F2 -.8(Pe)
3.681 G(ter).8 E(Simons)108 631.2 Q F0(,)A F2 .61(Martin Kr)3.11 F
(aemer)-.15 E F0(,)A F2(Lar)3.11 E 3.11(sE)-.1 G(ilebr)-3.11 E(ec)-.37 E
(ht)-.15 E F0(and)3.109 E F2 .609(Ralph Babel)3.109 F F0 .609
(related to an e)3.109 F .609(xperimental \(matrix based\) non-)-.15 F
(preempti)108 643.2 Q .3 -.15(ve C)-.25 H/F6 8/Times-Roman@0 SF -1(++)
-.85 -1.2 O F0(scheduler class written by)2.5 1.2 M F2 -.8(Pe)2.5 G
(ter Simons).8 E F0(.)A F1(Pth)108 660 Q F0 -.1(wa)2.721 G 2.721(st).1 G
.221(hen implemented in order to combine the)-2.721 F F2(non-pr)2.722 E
(eemptive)-.37 E F0 .222(approach of multithreading \(which pro-)2.722 F
.345(vides better portability and performance\) with an)108 672 R F5
(API)2.845 E F0 .345(similar to the popular one found in)2.845 F F1
(Pthr)2.845 E(ead)-.18 E F0(libraries)2.845 E(\(which pro)108 684 Q
(vides easy programming\).)-.15 E .254
(So the essential idea of the non-preempti)108 700.8 R .554 -.15(ve a)
-.25 H .254(pproach w).15 F .254(as tak)-.1 F .254(en o)-.1 F -.15(ve)
-.15 G 2.755(rf).15 G(rom)-2.755 E F2 -.8(Pe)2.755 G .255(ter Simons).8
F F0(scheduler)2.755 E 2.755(.T)-.55 G .255(he pri-)-2.755 F .105
(ority based scheduling algorithm w)108 712.8 R .104(as suggested by)-.1
F F2 .104(Martin Kr)2.604 F(aemer)-.15 E F0 2.604(.S)C .104
(ome code inspiration also came from)-2.604 F .281(an e)108 724.8 R .281
(xperimental threading library \()-.15 F F1(rsthr)A(eads)-.18 E F0 2.781
(\)w)C .281(ritten by)-2.781 F F2 .281(Robert S. Thau)2.781 F F0 .282
(for an ancient internal test v)2.781 F(ersion)-.15 E(perl v5.8.0)72 768
Q 198.17(2003-02-17 29)167.62 F 0 Cg EP
%%Page: 30 30
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E .232(of the Apache webserv)108 84 R(er)-.15 E 5.232(.T)-.55 G .232
(he concept and)-5.232 F/F1 9/Times-Roman@0 SF(API)2.732 E F0 .232
(of message ports w)2.732 F .232(as borro)-.1 F .232(wed from Amig)-.25
F(aOS')-.05 E/F2 10/Times-Bold@0 SF(Exec)2.732 E F0(sub-)2.731 E .189
(system. The concept and idea for the \215e)108 96 R .189(xible e)-.15 F
-.15(ve)-.25 G .189(nt mechanism came from).15 F/F3 10/Times-Italic@0 SF
-.8(Pa)2.69 G .19(ul V).8 F(ixie)-.74 E F0 -.55('s)C F2 -2.3 -.15(ev e)
3.24 H(ntlib).15 E F0 .19(\(which can)2.69 F(be found as a part of)108
108 Q/F4 9/Times-Bold@0 SF(BIND)2.5 E F0(v8\).)2.5 E/F5 10.95
/Times-Bold@0 SF -.11(BU)72 124.8 S 2.738(GR).11 G(EPOR)-2.738 E
(TS AND SUPPOR)-.438 E(T)-.438 E F0 3.09(If you think you ha)108 136.8 R
3.39 -.15(ve f)-.2 H 3.09(ound a b).15 F 3.09(ug in)-.2 F F2(Pth)5.59 E
F0 5.589(,y)C 3.089(ou should send a report as complete as possible to)
-5.589 F F3 -.2(bu)108 148.8 S(g\255pth@gnu.or).2 E(g)-.37 E F0 2.961
(.I)C 2.961(fy)-2.961 G .461(ou can, please try to \214x the problem an\
d include a patch, made with ')-2.961 F/F6 10/Courier@0 SF .462
(diff \255u3)B F0(',)A 1.456(in your report. Al)108 160.8 R -.1(wa)-.1 G
1.455(ys, at least, include a reasonable amount of description in your \
report to allo).1 F 3.955(wt)-.25 G(he)-3.955 E
(author to deterministically reproduce the b)108 172.8 Q(ug.)-.2 E -.15
(Fo)108 189.6 S 3.751(rf).15 G 1.251
(urther support you additionally can subscribe to the)-3.751 F F3
(pth\255user)3.752 E(s@gnu.or)-.1 E(g)-.37 E F0 1.252
(mailing list by sending an)3.752 F .165(Email to)108 201.6 R F3
(pth\255user)2.665 E(s\255r)-.1 E(equest@gnu.or)-.37 E(g)-.37 E F0 .165
(with `)2.665 F F6 .165(subscribe pth\255users)B F0 2.665('\()C .165
(or `)-2.665 F F6 .165(subscribe pth\255users)B F3(addr)108 213.6 Q(ess)
-.37 E F0 2.959('i)C 2.959(fy)-2.959 G .459(ou w)-2.959 F .459
(ant to subscribe from a particular Email)-.1 F F3(addr)2.959 E(ess)-.37
E F0 2.96(\)i)C 2.96(nt)-2.96 G .46(he body)-2.96 F 2.96(.T)-.65 G .46
(hen you can discuss your)-2.96 F .085(issues with other)108 225.6 R F2
(Pth)2.585 E F0 .085(users by sending messages to)2.585 F F3
(pth\255user)2.585 E(s@gnu.or)-.1 E(g)-.37 E F0 2.585(.C)C .084
(urrently \(as of August 2000\) you)-2.585 F 7.875(can reach about 110 \
Pth users on this mailing list. Old postings you can \214nd at)108 237.6
R F3(http://www)108 249.6 Q(.mail\255ar)-.74 E -.15(ch)-.37 G(ive).15 E
(.com/pth\255user)-.15 E(s@gnu.or)-.1 E(g/)-.37 E F0(.)A F5(SEE ALSO)72
266.4 Q F2(Related W)108 278.4 Q(eb Locations)-.65 E F0 29.544
(`comp.programming.threads Ne)108 295.2 R 29.543(wsgroup Archi)-.25 F
-.15(ve)-.25 G 29.543(', http://www).15 F(.deja.com/topics_if.xp?)-.65 E
(search=topic&group=comp.programming.threads)108 307.2 Q 5.27
(`comp.programming.threads Frequently Ask)108 324 R 5.27
(ed Questions \(F)-.1 F 5.27(.A.Q.\)', http://www)-.8 F
(.lambdacs.com/ne)-.65 E(ws-)-.25 E(group/F)108 336 Q -.55(AQ)-.74 G
(.html).55 E(`)108 352.8 Q F3(Multithr)A 17.477
(eading \255 De\214nitions and Guidelines)-.37 F F0 17.476
(', Numeric Quest Inc 1998;)B(http://www)108 364.8 Q
(.numeric\255quest.com/lang/multi\255frame.html)-.65 E(`)108 381.6 Q F3
3.991(The Single)B/F7 9/Times-Italic@0 SF(UNIX)6.492 E F3 3.992
(Speci\214cation, V)6.492 F(er)-1.11 E 3.992(sion 2 \255 Thr)-.1 F(eads)
-.37 E F0 3.992(', The Open Group 1997; http://www)B(.open-)-.65 E
(group.or)108 393.6 Q(g/onlinepubs /007908799/xsh/threads.html)-.18 E F1
(SMI)108 410.4 Q F0(Thread Resources, Sun Microsystems Inc; http://www)
2.5 E(.sun.com/w)-.65 E(orkshop/threads/)-.1 E(Bibliograph)108 427.2 Q
6.615(yo)-.05 G 6.615(nt)-6.615 G 4.114(hreads and multithreading, T)
-6.615 F 4.114(orsten Amundsen; http://liinwww)-.8 F
(.ira.uka.de/bibliogra-)-.65 E(ph)108 439.2 Q(y/Os/threads.html)-.05 E
F2(Related Books)108 462 Q F0 1.066(B. Nichols, D. Buttlar)108 478.8 R
3.566(,J)-.4 G(.P)-3.566 E 3.566(.F)-1.11 G 1.066(arrel: `)-3.716 F F3
(Pthr)A 1.066(eads Pr)-.37 F -.1(og)-.45 G -.15(ra).1 G 1.066
(mming \255 A).15 F F7(POSIX)3.566 E F3(Standar)3.566 E 3.567(df)-.37 G
1.067(or Better Multipr)-3.567 F(ocess-)-.45 E(ing)108 490.8 Q F0
(', O'Reilly 1996;)A F1(ISBN)2.5 E F0(1\25556592\255115\2551)2.5 E .449
(B. Le)108 507.6 R .449(wis, D. J. Ber)-.25 F .449(g: `)-.18 F F3
(Multithr)A .449(eaded Pr)-.37 F -.1(og)-.45 G -.15(ra).1 G .448
(mming with Pthr).15 F(eads)-.37 E F0 .448
(', Sun Microsystems Press, Prentice Hall)B(1998;)108 519.6 Q F1(ISBN)
2.5 E F0(0\25513\255680729\2551)2.5 E 1.241(B. Le)108 536.4 R 1.241
(wis, D. J. Ber)-.25 F 1.241(g: `)-.18 F F3(Thr)A 1.241
(eads Primer \255 A Guide T)-.37 F 3.742(oM)-.92 G(ultithr)-3.742 E
1.242(eaded Pr)-.37 F -.1(og)-.45 G -.15(ra).1 G(mming).15 E F0 1.242
(', Prentice Hall 1996;)B F1(ISBN)108 548.4 Q F0(0\25513\255443698\2559)
2.5 E 1.234(S. J. Norton, M. D. Dipasquale: `)108 565.2 R F3(Thr)A 1.234
(ead T)-.37 F 1.233(ime \255 The Multithr)-.55 F 1.233(eaded Pr)-.37 F
-.1(og)-.45 G -.15(ra).1 G 1.233(mming Guide).15 F F0 1.233
(', Prentice Hall)B(1997;)108 577.2 Q F1(ISBN)2.5 E F0
(0\25513\255190067\2556)2.5 E(D. R. Butenhof: `)108 594 Q F3(Pr)A -.1
(og)-.45 G -.15(ra).1 G(mming with).15 E F7(POSIX)2.5 E F3(Thr)2.5 E
(eads)-.37 E F0(', Addison W)A(esle)-.8 E 2.5(y1)-.15 G(997;)-2.5 E F1
(ISBN)2.5 E F0(0\255201\25563392\2552)2.5 E F2(Related Manpages)108
616.8 Q F3(pth\255con\214g)108 633.6 Q F0(\(1\),)1.666 E F3(pthr)2.5 E
(ead)-.37 E F0(\(3\).)1.666 E F3 -.1(ge)108 650.4 S(tconte).1 E(xt)-.2 E
F0(\(2\),)1.666 E F3(setconte)5.073 E(xt)-.2 E F0(\(2\),)1.666 E F3(mak)
5.073 E(econte)-.1 E(xt)-.2 E F0(\(2\),)1.666 E F3(swapconte)5.073 E(xt)
-.2 E F0(\(2\),)1.666 E F3(sigstac)5.073 E(k)-.2 E F0(\(2\),)1.666 E F3
(sigaltstac)5.073 E(k)-.2 E F0(\(2\),)1.666 E F3(sigaction)5.073 E F0
(\(2\),)1.666 E F3(sig)108 662.4 Q(emptyset)-.1 E F0(\(2\),)1.666 E F3
(sigaddset)5.758 E F0(\(2\),)1.666 E F3(sigpr)5.758 E(ocmask)-.45 E F0
(\(2\),)1.666 E F3(sigsuspend)5.758 E F0(\(2\),)1.666 E F3(sigsetjmp)
5.758 E F0(\(3\),)1.666 E F3(siglongjmp)5.758 E F0(\(3\),)1.666 E F3
(setjmp)5.758 E F0(\(3\),)1.666 E F3(longjmp)108 674.4 Q F0(\(3\),)1.666
E F3(select)2.5 E F0(\(2\),)1.666 E F3 -.1(ge)2.5 G(ttimeofday).1 E F0
(\(2\).)1.666 E F5 -.548(AU)72 691.2 S(THOR).548 E F0(perl v5.8.0)72 768
Q 198.17(2003-02-17 30)167.62 F 0 Cg EP
%%Page: 31 31
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(PTH-MANU)72 48 Q 78.275(AL\(1\) User)-.4 F
(Contrib)2.5 E(uted Perl Documentation)-.2 E(PTH-MANU)80.775 E(AL\(1\))
-.4 E/F1 10/Courier@0 SF(Ralf S. Engelschall)114 84 Q
(rse@engelschall.com)114 96 Q(www.engelschall.com)114 108 Q F0
(perl v5.8.0)72 768 Q 198.17(2003-02-17 31)167.62 F 0 Cg EP
%%Trailer
end
%%EOF
